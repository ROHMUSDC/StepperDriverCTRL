;; Compile Options : /TML610102 /MS /near /Icommon /Imain /Iirq /Itimer /Iclock /Itbc /SS 64 /SD /Oa /Ot /W 3 /Wc /Fa_output\_obj\ /Zs 
;; Version Number  : Ver.3.41.8
;; File Name       : main.c

	type (ML610102) 
	model small, near
	$$NVARmain segment data 2h #0h
	$$NINITVAR segment data 2h #0h
	$$NINITTAB segment table 2h any
	$$NTABmain segment table 2h #0h
	$$ALL_LEDs_OFF$main segment code 2h #0h
	$$ALL_LEDs_ON$main segment code 2h #0h
	$$ButtonKnobCheck$main segment code 2h #0h
	$$ContinuousMode$main segment code 2h #0h
	$$DisableController$main segment code 2h #0h
	$$EnableController$main segment code 2h #0h
	$$EncoderDirection$main segment code 2h #0h
	$$EncoderPostion$main segment code 2h #0h
	$$Initialization$main segment code 2h #0h
	$$LEDStateA$main segment code 2h #0h
	$$LEDStateA1$main segment code 2h #0h
	$$LEDStateA2$main segment code 2h #0h
	$$LEDStateA3$main segment code 2h #0h
	$$LEDStateA4$main segment code 2h #0h
	$$LEDStateB$main segment code 2h #0h
	$$LEDStateC$main segment code 2h #0h
	$$LEDStateC1$main segment code 2h #0h
	$$LEDStateC1A$main segment code 2h #0h
	$$LEDStateC2$main segment code 2h #0h
	$$LEDStateC2A$main segment code 2h #0h
	$$LEDStateD$main segment code 2h #0h
	$$LEDStateE$main segment code 2h #0h
	$$MachineStateAction$main segment code 2h #0h
	$$MotorRampUp$main segment code 2h #0h
	$$NOP10uS$main segment code 2h #0h
	$$NOP_ClkStep$main segment code 2h #0h
	$$NOP_Long$main segment code 2h #0h
	$$NOPxxx$main segment code 2h #0h
	$$NOPyyy$main segment code 2h #0h
	$$PinB0_PWM$main segment code 2h #0h
	$$PortA_Digital_Inputs$main segment code 2h #0h
	$$PortA_Low$main segment code 2h #0h
	$$PortB_Low$main segment code 2h #0h
	$$SetOSC$main segment code 2h #0h
	$$Set_LEDs$main segment code 2h #0h
	$$StepCCW$main segment code 2h #0h
	$$StepCW$main segment code 2h #0h
	$$ZeroFrequency$main segment code 2h #0h
	$$analog_comparator$main segment code 2h #0h
	$$main$main segment code 2h #0h
	$$main_clrWDT$main segment code 2h #0h
	$$myClockingPulse$main segment code 2h #0h
	$$NTABButtonKnobCheck$main segment table 2h #0h
	$$NTABMachineStateAction$main segment table 2h #0h
	STACKSEG 040h
CVERSION 3.41.8
CGLOBAL 01H 03H 0000H "Set_LEDs" 08H 02H 87H 00H 81H 02H 00H 00H 07H
CGLOBAL 01H 03H 0000H "main_clrWDT" 08H 02H 7AH 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "NOP_ClkStep" 08H 02H 84H 00H 82H 04H 00H 00H 07H
CGLOBAL 01H 03H 0000H "StepCW" 08H 02H 0A1H 00H 83H 0cH 00H 00H 07H
CGLOBAL 01H 03H 0000H "EnableController" 08H 02H 9AH 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "EncoderPostion" 08H 02H 9CH 00H 80H 00H 00H 00H 07H
CSGLOBAL 03H 0000H "Initialization" 08H 02H 7BH 00H 81H 02H 00H 00H 07H
CGLOBAL 01H 03H 0000H "PortA_Digital_Inputs" 08H 02H 80H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "main" 08H 02H 79H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "NOP_Long" 08H 02H 86H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "ZeroFrequency" 08H 02H 9FH 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "ContinuousMode" 08H 02H 0A3H 00H 83H 30H 00H 00H 07H
CSGLOBAL 03H 0000H "SetOSC" 08H 02H 7CH 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "NOPyyy" 08H 02H 83H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "NOPxxx" 08H 02H 82H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "NOP10uS" 08H 02H 85H 00H 83H 06H 00H 00H 07H
CGLOBAL 01H 03H 0000H "EncoderDirection" 08H 02H 9DH 00H 81H 02H 00H 00H 07H
CGLOBAL 01H 03H 0000H "ALL_LEDs_ON" 08H 02H 89H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "LEDStateA4" 08H 02H 90H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "LEDStateC1" 08H 02H 93H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "LEDStateC2" 08H 02H 95H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "LEDStateA1" 08H 02H 8DH 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "LEDStateA2" 08H 02H 8EH 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "LEDStateA3" 08H 02H 8FH 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "PortB_Low" 08H 02H 7EH 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "MachineStateAction" 08H 02H 9EH 00H 81H 02H 00H 00H 07H
CGLOBAL 01H 03H 0000H "ALL_LEDs_OFF" 08H 02H 8AH 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "ButtonKnobCheck" 08H 02H 9BH 00H 81H 02H 00H 00H 07H
CGLOBAL 01H 03H 0000H "StepCCW" 08H 02H 0A2H 00H 83H 0cH 00H 00H 07H
CGLOBAL 01H 03H 0000H "MotorRampUp" 08H 02H 0A4H 00H 82H 08H 00H 00H 07H
CGLOBAL 01H 03H 0000H "PortA_Low" 08H 02H 7DH 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "DisableController" 08H 02H 99H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "analog_comparator" 08H 02H 0AEH 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "LEDStateC1A" 08H 02H 94H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "LEDStateC2A" 08H 02H 96H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "LEDStateA" 08H 02H 8CH 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "LEDStateB" 08H 02H 91H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "LEDStateC" 08H 02H 92H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "LEDStateD" 08H 02H 97H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "LEDStateE" 08H 02H 98H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "PinB0_PWM" 08H 02H 81H 00H 80H 00H 00H 00H 07H
CGLOBAL 01H 03H 0000H "myClockingPulse" 08H 02H 8BH 00H 81H 02H 00H 00H 07H
CSTRUCTTAG 0000H 0000H 0004H 000CH 00000016H "_Notag"
CSTRUCTMEM 42H 00000002H 00000000H "_Mode" 02H 00H 08H
CSTRUCTMEM 43H 00000002H 00000002H "_Handle" 02H 00H 08H
CSTRUCTMEM 42H 00000002H 00000004H "_Buf" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000006H "_Bend" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000008H "_Next" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000AH "_Rend" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000CH "_Rsave" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 0000000EH "_Wend" 04H 03H 00H 00H 00H
CSTRUCTMEM 42H 00000002H 00000010H "_Back" 05H 01H 02H 00H 00H 00H
CSTRUCTMEM 42H 00000001H 00000012H "_Cbuf" 02H 00H 00H
CSTRUCTMEM 42H 00000001H 00000013H "_Nback" 02H 00H 00H
CSTRUCTMEM 43H 00000002H 00000014H "_Tmpnam" 04H 03H 00H 00H 00H
CSTRUCTTAG 0000H 0000H 0003H 0001H 00000004H "_Notag"
CSTRUCTMEM 42H 00000004H 00000000H "_Off" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0002H 0002H 00000008H "_Notag"
CSTRUCTMEM 43H 00000004H 00000000H "quot" 02H 00H 02H
CSTRUCTMEM 43H 00000004H 00000004H "rem" 02H 00H 02H
CSTRUCTTAG 0000H 0000H 0001H 0002H 00000004H "_Notag"
CSTRUCTMEM 43H 00000002H 00000000H "quot" 02H 00H 01H
CSTRUCTMEM 43H 00000002H 00000002H "rem" 02H 00H 01H
CSTRUCTTAG 0000H 0000H 0000H 0008H 00000001H "_Notag"
CSTRUCTMEM 52H 00000001H 00000000H "b0" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000001H "b1" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000002H "b2" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000003H "b3" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000004H "b4" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000005H "b5" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000006H "b6" 02H 00H 00H
CSTRUCTMEM 52H 00000001H 00000007H "b7" 02H 00H 00H
CUNIONTAG 0000H 0000H 0005H 0002H 00000008H "_Notag"
CUNIONMEM 42H 00000008H "_W" 05H 01H 04H 00H 00H 08H
CUNIONMEM 43H 00000008H "_D" 02H 00H 04H
CTYPEDEF 0000H 0000H 01H "_Dconst" 04H 00H 06H 05H 00H
CTYPEDEF 0000H 0000H 43H "_Ptrdifft" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "_Sizet" 02H 00H 01H
CTYPEDEF 0000H 0000H 42H "size_t" 02H 00H 01H
CTYPEDEF 0000H 0000H 43H "fpos_t" 04H 00H 05H 03H 00H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nf" 08H 02H 01H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_nn" 08H 02H 00H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_ff" 08H 02H 03H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 03H "_Cmpfun_fn" 08H 02H 02H 00H 00H 00H 00H 00H 01H
CTYPEDEF 0000H 0000H 43H "FILE" 04H 00H 05H 04H 00H
CTYPEDEF 0000H 0000H 43H "div_t" 04H 00H 05H 01H 00H
CTYPEDEF 0000H 0000H 43H "ldiv_t" 04H 00H 05H 02H 00H
CTYPEDEF 0000H 0000H 43H "_BYTE_FIELD" 04H 00H 05H 00H 00H
CSGLOBAL 43H 0001H "FULL_STEP_LED" 02H 00H 00H
CSGLOBAL 43H 0001H "DRIVER_EN_RED_LED" 02H 00H 00H
CGLOBAL 01H 42H 0002H "AbsolutePosition" 02H 00H 01H
CSGLOBAL 43H 0001H "HALF_STEP_A_LED" 02H 00H 00H
CGLOBAL 01H 42H 0002H "button_flag" 02H 00H 01H
CSGLOBAL 43H 0001H "CONTINUOUS_LED" 02H 00H 00H
CSGLOBAL 43H 0001H "HALF_STEP_B_LED" 02H 00H 00H
CGLOBAL 01H 42H 0002H "EncoderPosition" 02H 00H 01H
CSGLOBAL 43H 0001H "STEP_MODE_LED" 02H 00H 00H
CSGLOBAL 43H 0001H "PASS_THRU_RED_LED" 02H 00H 00H
CGLOBAL 01H 42H 0002H "previous_encoder_position" 02H 00H 01H
CSGLOBAL 43H 0001H "DRIVER_EN_GREEN_LED" 02H 00H 00H
CGLOBAL 01H 42H 0002H "previousDirection" 02H 00H 01H
CSGLOBAL 42H 0002H "CCWClkPlseWidth" 02H 00H 01H
CGLOBAL 01H 42H 0002H "mode" 02H 00H 01H
CSGLOBAL 43H 0001H "SINGLE_LED" 02H 00H 00H
CGLOBAL 01H 42H 0002H "direction" 02H 00H 01H
CSGLOBAL 43H 0001H "PASS_THRU_GREEN_LED" 02H 00H 00H
CGLOBAL 01H 42H 0002H "Frequency" 02H 00H 01H
CSGLOBAL 42H 0002H "CWClkPlseWidth" 02H 00H 01H
CSGLOBAL 43H 0001H "QUARTER_STEP_LED" 02H 00H 00H
CSGLOBAL 43H 0001H "BUFFER_OE_PIN" 02H 00H 00H
CFILE 0001H 000003F4H "C:\\Users\\cschell\\U8DEV~1\\Inc\\ML610102.H"
CFILE 0002H 000000D8H "C:\\Users\\cschell\\U8DEV~1\\Inc\\stdlib.h"
CFILE 0003H 0000007AH "C:\\Users\\cschell\\U8DEV~1\\Inc\\yvals.h"
CFILE 0004H 000000EEH "C:\\Users\\cschell\\U8DEV~1\\Inc\\stdio.h"
CFILE 0005H 00000027H "common\\common.h"
CFILE 0006H 0000004FH "C:\\Users\\cschell\\U8DEV~1\\Inc\\math.h"
CFILE 0000H 00000903H "src\\main.c"

	rseg $$main$main
CFUNCTION 121

_main	:
CBLOCK 121 1 274

;;{
CLINEA 0000H 0001H 0112H 0001H 0001H
CBLOCK 121 2 274

;;	Initialization(); 		//Oscillator, Ports, UART, Timers, Comparators, LEDs, etc.
CLINEA 0000H 0001H 0116H 0002H 004FH
	bl	_Initialization

;;	DisableController(); 	//Disable Controller at PowerOn or RESET
CLINEA 0000H 0001H 0117H 0002H 003FH
	bl	_DisableController

;;	EncoderPostion();    	//EncoderPosition: 	1-4 Quadrature Encoder position	
CLINEA 0000H 0001H 011AH 0002H 004BH
	bl	_EncoderPostion

;;	previous_encoder_position = AbsolutePosition; 
CLINEA 0000H 0001H 011BH 0002H 002FH
	l	er0,	NEAR _AbsolutePosition
	st	er0,	NEAR _previous_encoder_position

;;MainLoop:
CLINEA 0000H 0001H 011DH 0001H 0009H
CLABEL 0003H "MainLoop"
_$L3 :

;;	ButtonKnobCheck();  	//Check for BUTTION Press & KNOB Rotation	
CLINEA 0000H 0001H 011FH 0002H 0040H
	bl	_ButtonKnobCheck

;;	MachineStateAction();	//Act based on Machine State...
CLINEA 0000H 0001H 0120H 0002H 0036H
	bl	_MachineStateAction

;;goto MainLoop;
CLINEA 0000H 0001H 0122H 0001H 000EH
	bal	_$L3
CBLOCKEND 121 2 292

;;}  //END main Function
CLINEA 0000H 0001H 0124H 0001H 0016H
CBLOCKEND 121 1 292
CFUNCTIONEND 121


	rseg $$Initialization$main
CFUNCTION 123

_Initialization	:
CBLOCK 123 1 302

;;static void Initialization(void){
CLINEA 0000H 0001H 012EH 0001H 0021H
	push	lr
CBLOCK 123 2 302
CRET 0000H

;;			DUA0  = 1; 		// 0=> Enables the operation of UART0 (initial value).
CLINEA 0000H 0001H 0132H 0004H 0046H
	sb	0f02ah.2

;;			BLKCON4 = 0x01; // 0=> Enables SA type ADC
CLINEA 0000H 0001H 0134H 0004H 002DH
	mov	r0,	#01h
	st	r0,	0f02ch

;;			BLKCON6 = 0x01; // (1=disables; 0=enables) the operation of Timers 8, 9, A, E, F.
CLINEA 0000H 0001H 0135H 0004H 0054H
	st	r0,	0f02eh

;;			BLKCON7 = 0x01; // (1=disables; 0=enables) the operation of PWM (PWMC)
CLINEA 0000H 0001H 0136H 0004H 0049H
	st	r0,	0f02fh

;;		PortA_Low();	//Initialize all 3 Ports of Port A to GPIO-Low
CLINEA 0000H 0001H 0139H 0003H 003DH
	bl	_PortA_Low

;;		PortB_Low();	//Initialize all 8 Ports of Port B to GPIO-Low
CLINEA 0000H 0001H 013AH 0003H 003DH
	bl	_PortB_Low

;;		PortA_Digital_Inputs();
CLINEA 0000H 0001H 013DH 0003H 0019H
	bl	_PortA_Digital_Inputs

;;     		SetOSC();
CLINEA 0000H 0001H 0147H 0008H 0010H
	bl	_SetOSC

;;		TM8D    = 0;	//Timer 8 DATA Register
CLINEA 0000H 0001H 014FH 0003H 0026H
	mov	r0,	#00h
	st	r0,	0f8e0h

;;		TM8C    = 0;	//Timer 8 CLOCK Register
CLINEA 0000H 0001H 0152H 0003H 0027H
	st	r0,	0f8e1h

;;		T8C1 = 0;	// 01 = HTBCLK  
CLINEA 0000H 0001H 0157H 0003H 001CH
	rb	0f8e1h.1

;;		T8C0 = 1;
CLINEA 0000H 0001H 0158H 0003H 000BH
	sb	0f8e1h.0

;;		T89M16 = 0;	// 0=8-Bit Mode; 1=16bit Mode...
CLINEA 0000H 0001H 015AH 0003H 002EH
	rb	0f8e2h.5

;;		T8OST = 0;	// 0=Normal; 1=One-Shot...
CLINEA 0000H 0001H 015CH 0003H 0027H
	rb	0f8e2h.7

;;		T8RUN = 0;	//0=STOP; 1=START...
CLINEA 0000H 0001H 015FH 0003H 0021H
	rb	0f8e3h.0

;;		IE0 = IE1 = IE2 = IE3 = IE4 = IE5 = IE6 = IE7 = 0;
CLINEA 0000H 0001H 0173H 0003H 0034H
	st	r0,	0f017h
	st	r0,	0f016h
	st	r0,	0f015h
	st	r0,	0f014h
	st	r0,	0f013h
	st	r0,	0f012h
	st	r0,	0f011h
	st	r0,	0f010h

;;		IRQ0 = IRQ1 = IRQ2 = IRQ3 = IRQ4 = IRQ5 = IRQ6 = IRQ7 = 0;
CLINEA 0000H 0001H 017EH 0003H 003CH
	st	r0,	0f01fh
	st	r0,	0f01eh
	st	r0,	0f01dh
	st	r0,	0f01ch
	st	r0,	0f01bh
	st	r0,	0f01ah
	st	r0,	0f019h
	st	r0,	0f018h

;;		E2H = 0; 	// E2H is the Enable flag for 2Hz TBC Interrupt (1=ENABLED)
CLINEA 0000H 0001H 0181H 0003H 0047H
	rb	0f017h.3

;;		STEP_MODE_LED 		= 1; // Bit D2  => "STEP MODE" LED 		(Orange)
CLINEA 0000H 0001H 0190H 0003H 003FH
	mov	r0,	#01h
	st	r0,	NEAR _STEP_MODE_LED

;;	  	FULL_STEP_LED 		= 0; // Bit D7  => "FULL STEP" LED		(YELLOW)
CLINEA 0000H 0001H 0191H 0005H 0040H
	mov	r0,	#00h
	st	r0,	NEAR _FULL_STEP_LED

;;	  	HALF_STEP_A_LED 		= 0; // Bit D8  => "HALF STEP A" LED	(YELLOW)
CLINEA 0000H 0001H 0192H 0005H 0043H
	st	r0,	NEAR _HALF_STEP_A_LED

;;	  	HALF_STEP_B_LED 		= 0; // Bit D9  => "HALF STEP B" LED	(YELLOW)
CLINEA 0000H 0001H 0193H 0005H 0043H
	st	r0,	NEAR _HALF_STEP_B_LED

;;	  	QUARTER_STEP_LED 		= 0; // Bit D10 => "QUARTER STEP" LED	(YELLOW)
CLINEA 0000H 0001H 0194H 0005H 0045H
	st	r0,	NEAR _QUARTER_STEP_LED

;;		DRIVER_EN_RED_LED 	= 0; // Bit D6  => "DRIVER ENABLED" LED  	(RED)
CLINEA 0000H 0001H 0196H 0003H 0044H
	st	r0,	NEAR _DRIVER_EN_RED_LED

;;		DRIVER_EN_GREEN_LED	= 0; // Bit D5  => "DRIVER ENABLED" LED 	(GREEN)
CLINEA 0000H 0001H 0197H 0003H 0046H
	st	r0,	NEAR _DRIVER_EN_GREEN_LED

;;	  	SINGLE_LED 			= 0; // Bit D0  => "SINGLE" LED 		(Orange)
CLINEA 0000H 0001H 0199H 0005H 003CH
	st	r0,	NEAR _SINGLE_LED

;;	  	CONTINUOUS_LED 		= 0; // Bit D1  => "CONTINUOUS" LED 	(Orange)
CLINEA 0000H 0001H 019AH 0005H 0042H
	st	r0,	NEAR _CONTINUOUS_LED

;;		PASS_THRU_GREEN_LED 	= 0; // Bit D3  => "PASS THRU" LED		(GREEN)
CLINEA 0000H 0001H 019CH 0003H 0042H
	st	r0,	NEAR _PASS_THRU_GREEN_LED

;;		PASS_THRU_RED_LED 	= 0; // Bit D4  => "PASS THRU" LED		(RED)
CLINEA 0000H 0001H 019DH 0003H 003EH
	st	r0,	NEAR _PASS_THRU_RED_LED

;;		BUFFER_OE_PIN 		= 0; // Bit D11 => Octal Buffer_OE
CLINEA 0000H 0001H 019FH 0003H 0034H
	st	r0,	NEAR _BUFFER_OE_PIN

;;		Set_LEDs();		// Send 12-Bit Data to BD8377 Driver, Clock & Latch
CLINEA 0000H 0001H 01A1H 0003H 0042H
	bl	_Set_LEDs

;;		mode = 1; 					//Initialize "mode" to Step-MODE
CLINEA 0000H 0001H 01A5H 0003H 0031H
	mov	er0,	#1 
	st	er0,	NEAR _mode

;;		direction = 0;				//Initialize "direction" to 0
CLINEA 0000H 0001H 01A6H 0003H 0031H
	mov	er0,	#0 
	st	er0,	NEAR _direction

;;		AbsolutePosition = 0;		//Initialize "AbsolutePosition " to 0
CLINEA 0000H 0001H 01A7H 0003H 003EH
	st	er0,	NEAR _AbsolutePosition

;;		button_flag = 0;			//Initialize "button_flag" to 0
CLINEA 0000H 0001H 01A8H 0003H 0034H
	st	er0,	NEAR _button_flag

;;		Frequency = 0;				//Initialize "Frequency " to 0
CLINEA 0000H 0001H 01A9H 0003H 0032H
	st	er0,	NEAR _Frequency

;;	WDTMOD = 0x03; 	// 0x03=overflow 8sec...
CLINEA 0000H 0001H 01ACH 0002H 0029H
	mov	r0,	#03h
	st	r0,	0f00fh

;;	main_clrWDT(); 	// Clear WDT
CLINEA 0000H 0001H 01ADH 0002H 001DH
	bl	_main_clrWDT
CBLOCKEND 123 2 431

;;} //END Initialization Function
CLINEA 0000H 0001H 01AFH 0001H 001FH
	pop	pc
CBLOCKEND 123 1 431
CFUNCTIONEND 123


	rseg $$main_clrWDT$main
CFUNCTION 122

_main_clrWDT	:
CBLOCK 122 1 440

;;{
CLINEA 0000H 0001H 01B8H 0001H 0001H
CBLOCK 122 2 440

;;	do {
CLINEA 0000H 0001H 01BBH 0002H 0005H
_$L9 :
CBLOCK 122 3 443

;;		WDTCON = 0x5Au;
CLINEA 0000H 0001H 01BCH 0003H 0011H
	mov	r0,	#05ah
	st	r0,	0f00eh
CBLOCKEND 122 3 445

;;	} while (WDP != 1);
CLINEA 0000H 0000H 01BDH 0002H 0014H
	tb	0f00eh.0
	beq	_$L9

;;	WDTCON = 0xA5u;
CLINEA 0000H 0001H 01BEH 0002H 0010H
	mov	r0,	#0a5h
	st	r0,	0f00eh
CBLOCKEND 122 2 447

;;} //END main_clrWDT Function
CLINEA 0000H 0001H 01BFH 0001H 001CH
	rt
CBLOCKEND 122 1 447
CFUNCTIONEND 122


	rseg $$SetOSC$main
CFUNCTION 124

_SetOSC	:
CBLOCK 124 1 455

;;static void SetOSC(void){
CLINEA 0000H 0001H 01C7H 0001H 0019H
CBLOCK 124 2 455

;;	SYSC0  = 0;			// Used to select the frequency of the HSCLK => 00=8.192MHz.
CLINEA 0000H 0001H 01CAH 0002H 004BH
	rb	0f002h.0

;;	SYSC1  = 0;
CLINEA 0000H 0001H 01CBH 0002H 000CH
	rb	0f002h.1

;;	OSCM1  = 1;			// 10 => Built-in PLL oscillation mode
CLINEA 0000H 0001H 01CDH 0002H 0035H
	sb	0f002h.3

;;	OSCM0  = 0;
CLINEA 0000H 0001H 01CEH 0002H 000CH
	rb	0f002h.2

;;	ENOSC  = 1;			// 1=Enable High Speed Oscillator...MUST ENABLE before setting SYSTEM CLOCK!
CLINEA 0000H 0001H 01D0H 0002H 005BH
	sb	0f003h.1

;;	SYSCLK = 1;			// 1=HSCLK; 0=LSCLK (MUST set ENOSC = 1 first) 
CLINEA 0000H 0001H 01D1H 0002H 003EH
	sb	0f003h.0

;;	LPLL   = 1;			// 1=Enables the use of PLL oscillation - ADDED 4/30/2013
CLINEA 0000H 0001H 01D3H 0002H 0048H
	sb	0f003h.7

;;	__EI();			// INT enable
CLINEA 0000H 0001H 01D5H 0002H 0018H
	ei
CBLOCKEND 124 2 470

;;} //END SetOSC Function
CLINEA 0000H 0001H 01D6H 0001H 0017H
	rt
CBLOCKEND 124 1 470
CFUNCTIONEND 124


	rseg $$PortA_Low$main
CFUNCTION 125

_PortA_Low	:
CBLOCK 125 1 478

;;void PortA_Low(void){
CLINEA 0000H 0001H 01DEH 0001H 0015H
CBLOCK 125 2 478

;;	PA0DIR = 0;		// PortA Bit0 set to Output Mode...
CLINEA 0000H 0001H 01E8H 0002H 0031H
	rb	0f251h.0

;;	PA1DIR = 0;		// PortA Bit1 set to Output Mode...
CLINEA 0000H 0001H 01E9H 0002H 0031H
	rb	0f251h.1

;;	PA2DIR = 0;		// PortA Bit2 set to Output Mode...
CLINEA 0000H 0001H 01EAH 0002H 0031H
	rb	0f251h.2

;;	PA0C1  = 1;		// PortA Bit0 set to CMOS Output...
CLINEA 0000H 0001H 01EDH 0002H 0031H
	sb	0f253h.0

;;	PA0C0  = 1;		
CLINEA 0000H 0001H 01EEH 0002H 000EH
	sb	0f252h.0

;;	PA1C1  = 1;		// PortA Bit1 set to CMOS Output...
CLINEA 0000H 0001H 01EFH 0002H 0031H
	sb	0f253h.1

;;	PA1C0  = 1;	
CLINEA 0000H 0001H 01F0H 0002H 000DH
	sb	0f252h.1

;;	PA2C1  = 1;		// PortA Bit2 set to CMOS Output...
CLINEA 0000H 0001H 01F1H 0002H 0031H
	sb	0f253h.2

;;	PA2C0  = 1;	
CLINEA 0000H 0001H 01F2H 0002H 000DH
	sb	0f252h.2

;;	PA0MD1  = 0;	// PortA Bit0 set to General Purpose Output...
CLINEA 0000H 0001H 01F5H 0002H 003CH
	rb	0f255h.0

;;	PA0MD0  = 0;	
CLINEA 0000H 0001H 01F6H 0002H 000EH
	rb	0f254h.0

;;	PA1MD1  = 0;	// PortA Bit1 set to General Purpose Output...
CLINEA 0000H 0001H 01F7H 0002H 003CH
	rb	0f255h.1

;;	PA1MD0  = 0;	
CLINEA 0000H 0001H 01F8H 0002H 000EH
	rb	0f254h.1

;;	PA2MD1  = 0;	// PortA Bit2 set to General Purpose Output...
CLINEA 0000H 0001H 01F9H 0002H 003CH
	rb	0f255h.2

;;	PA2MD0  = 0;	
CLINEA 0000H 0001H 01FAH 0002H 000EH
	rb	0f254h.2

;;	PA0D = 0;		// A.0 Output OFF....
CLINEA 0000H 0001H 01FDH 0002H 0021H
	rb	0f250h.0

;;	PA1D = 0;		// A.1 Output OFF....
CLINEA 0000H 0001H 01FEH 0002H 0021H
	rb	0f250h.1

;;	PA2D = 0;		// A.2 Output OFF....
CLINEA 0000H 0001H 01FFH 0002H 0021H
	rb	0f250h.2
CBLOCKEND 125 2 513

;;}  //END PortA_Low Function
CLINEA 0000H 0001H 0201H 0001H 001BH
	rt
CBLOCKEND 125 1 513
CFUNCTIONEND 125


	rseg $$PortB_Low$main
CFUNCTION 126

_PortB_Low	:
CBLOCK 126 1 520

;;void PortB_Low(void){
CLINEA 0000H 0001H 0208H 0001H 0015H
CBLOCK 126 2 520

;;	PB0DIR = 0;		// PortB Bit0 set to Output Mode...
CLINEA 0000H 0001H 0212H 0002H 0031H
	rb	0f259h.0

;;	PB1DIR = 0;		// PortB Bit1 set to Output Mode...
CLINEA 0000H 0001H 0213H 0002H 0031H
	rb	0f259h.1

;;	PB2DIR = 0;		// PortB Bit2 set to Output Mode...
CLINEA 0000H 0001H 0214H 0002H 0031H
	rb	0f259h.2

;;	PB3DIR = 0;		// PortB Bit3 set to Output Mode...
CLINEA 0000H 0001H 0215H 0002H 0031H
	rb	0f259h.3

;;	PB4DIR = 0;		// PortB Bit4 set to Output Mode...
CLINEA 0000H 0001H 0216H 0002H 0031H
	rb	0f259h.4

;;	PB5DIR = 0;		// PortB Bit5 set to Output Mode...
CLINEA 0000H 0001H 0217H 0002H 0031H
	rb	0f259h.5

;;	PB6DIR = 0;		// PortB Bit6 set to Output Mode...
CLINEA 0000H 0001H 0218H 0002H 0031H
	rb	0f259h.6

;;	PB7DIR = 0;		// PortB Bit7 set to Output Mode...
CLINEA 0000H 0001H 0219H 0002H 0031H
	rb	0f259h.7

;;	PB0C1  = 1;		// PortB Bit0 set to CMOS Output...
CLINEA 0000H 0001H 021CH 0002H 0031H
	sb	0f25bh.0

;;	PB0C0  = 1;		
CLINEA 0000H 0001H 021DH 0002H 000EH
	sb	0f25ah.0

;;	PB1C1  = 1;		// PortB Bit1 set to CMOS Output...
CLINEA 0000H 0001H 021EH 0002H 0031H
	sb	0f25bh.1

;;	PB1C0  = 1;	
CLINEA 0000H 0001H 021FH 0002H 000DH
	sb	0f25ah.1

;;	PB2C1  = 1;		// PortB Bit2 set to CMOS Output...
CLINEA 0000H 0001H 0220H 0002H 0031H
	sb	0f25bh.2

;;	PB2C0  = 1;	
CLINEA 0000H 0001H 0221H 0002H 000DH
	sb	0f25ah.2

;;	PB3C1  = 1;		// PortB Bit3 set to CMOS Output...
CLINEA 0000H 0001H 0222H 0002H 0031H
	sb	0f25bh.3

;;	PB3C0  = 1;		
CLINEA 0000H 0001H 0223H 0002H 000EH
	sb	0f25ah.3

;;	PB4C1  = 1;		// PortB Bit4 set to CMOS Output...
CLINEA 0000H 0001H 0224H 0002H 0031H
	sb	0f25bh.4

;;	PB4C0  = 1;	
CLINEA 0000H 0001H 0225H 0002H 000DH
	sb	0f25ah.4

;;	PB5C1  = 1;		// PortB Bit5 set to CMOS Output...
CLINEA 0000H 0001H 0226H 0002H 0031H
	sb	0f25bh.5

;;	PB5C0  = 1;	
CLINEA 0000H 0001H 0227H 0002H 000DH
	sb	0f25ah.5

;;	PB6C1  = 1;		// PortB Bit6 set to CMOS Output...
CLINEA 0000H 0001H 0228H 0002H 0031H
	sb	0f25bh.6

;;	PB6C0  = 1;	
CLINEA 0000H 0001H 0229H 0002H 000DH
	sb	0f25ah.6

;;	PB7C1  = 1;		// PortB Bit7 set to CMOS Output...
CLINEA 0000H 0001H 022AH 0002H 0031H
	sb	0f25bh.7

;;	PB7C0  = 1;	
CLINEA 0000H 0001H 022BH 0002H 000DH
	sb	0f25ah.7

;;	PB0MD1  = 0;	// PortB Bit0 set to General Purpose Output...
CLINEA 0000H 0001H 022EH 0002H 003CH
	rb	0f25dh.0

;;	PB0MD0  = 0;	
CLINEA 0000H 0001H 022FH 0002H 000EH
	rb	0f25ch.0

;;	PB1MD1  = 0;	// PortB Bit1 set to General Purpose Output...
CLINEA 0000H 0001H 0230H 0002H 003CH
	rb	0f25dh.1

;;	PB1MD0  = 0;	
CLINEA 0000H 0001H 0231H 0002H 000EH
	rb	0f25ch.1

;;	PB2MD1  = 0;	// PortB Bit2 set to General Purpose Output...
CLINEA 0000H 0001H 0232H 0002H 003CH
	rb	0f25dh.2

;;	PB2MD0  = 0;	
CLINEA 0000H 0001H 0233H 0002H 000EH
	rb	0f25ch.2

;;	PB3MD1  = 0;	// PortB Bit3 set to General Purpose Output...
CLINEA 0000H 0001H 0234H 0002H 003CH
	rb	0f25dh.3

;;	PB3MD0  = 0;	
CLINEA 0000H 0001H 0235H 0002H 000EH
	rb	0f25ch.3

;;	PB4MD1  = 0;	// PortB Bit4 set to General Purpose Output...
CLINEA 0000H 0001H 0236H 0002H 003CH
	rb	0f25dh.4

;;	PB4MD0  = 0;	
CLINEA 0000H 0001H 0237H 0002H 000EH
	rb	0f25ch.4

;;	PB5MD1  = 0;	// PortB Bit5 set to General Purpose Output...
CLINEA 0000H 0001H 0238H 0002H 003CH
	rb	0f25dh.5

;;	PB5MD0  = 0;
CLINEA 0000H 0001H 0239H 0002H 000DH
	rb	0f25ch.5

;;	PB6MD1  = 0;	// PortB Bit6 set to General Purpose Output...
CLINEA 0000H 0001H 023AH 0002H 003CH
	rb	0f25dh.6

;;	PB6MD0  = 0;	
CLINEA 0000H 0001H 023BH 0002H 000EH
	rb	0f25ch.6

;;	PB7MD1  = 0;	// PortB Bit7 set to General Purpose Output...
CLINEA 0000H 0001H 023CH 0002H 003CH
	rb	0f25dh.7

;;	PB7MD0  = 0;
CLINEA 0000H 0001H 023DH 0002H 000DH
	rb	0f25ch.7

;;	PB0D = 0;		// B.0 Output OFF....
CLINEA 0000H 0001H 0240H 0002H 0021H
	rb	0f258h.0

;;	PB1D = 0;		// B.1 Output OFF....
CLINEA 0000H 0001H 0241H 0002H 0021H
	rb	0f258h.1

;;	PB2D = 0;		// B.2 Output OFF....
CLINEA 0000H 0001H 0242H 0002H 0021H
	rb	0f258h.2

;;	PB3D = 0;		// B.3 Output OFF....
CLINEA 0000H 0001H 0243H 0002H 0021H
	rb	0f258h.3

;;	PB4D = 0;		// B.4 Output OFF....
CLINEA 0000H 0001H 0244H 0002H 0021H
	rb	0f258h.4

;;	PB5D = 0;		// B.5 Output OFF....
CLINEA 0000H 0001H 0245H 0002H 0021H
	rb	0f258h.5

;;	PB6D = 0;		// B.6 Output OFF....
CLINEA 0000H 0001H 0246H 0002H 0021H
	rb	0f258h.6

;;	PB7D = 0;		// B.7 Output OFF....
CLINEA 0000H 0001H 0247H 0002H 0021H
	rb	0f258h.7
CBLOCKEND 126 2 585

;;}  //END PortB_Low Function
CLINEA 0000H 0001H 0249H 0001H 001BH
	rt
CBLOCKEND 126 1 585
CFUNCTIONEND 126


	rseg $$PortA_Digital_Inputs$main
CFUNCTION 128

_PortA_Digital_Inputs	:
CBLOCK 128 1 592

;;void PortA_Digital_Inputs(void){
CLINEA 0000H 0001H 0250H 0001H 0020H
CBLOCK 128 2 592

;;	PA0DIR = 1;		// PortA Bit0 set to Input Mode...
CLINEA 0000H 0001H 025AH 0002H 0030H
	sb	0f251h.0

;;	PA1DIR = 1;		// PortA Bit1 set to Input Mode...
CLINEA 0000H 0001H 025BH 0002H 0030H
	sb	0f251h.1

;;	PA2DIR = 1;		// PortA Bit2 set to Input Mode...
CLINEA 0000H 0001H 025CH 0002H 0030H
	sb	0f251h.2

;;	PA0C1  = 1;		// PortA Bit0 set to Input with Pull-Up Resistor...
CLINEA 0000H 0001H 0260H 0002H 0041H
	sb	0f253h.0

;;	PA0C0  = 0;		
CLINEA 0000H 0001H 0261H 0002H 000EH
	rb	0f252h.0

;;	PA1C1  = 1;		// PortA Bit1 set to Input with Pull-Up Resistor...
CLINEA 0000H 0001H 0262H 0002H 0041H
	sb	0f253h.1

;;	PA1C0  = 0;	
CLINEA 0000H 0001H 0263H 0002H 000DH
	rb	0f252h.1

;;	PA2C1  = 1;		// PortA Bit2 set to Input with Pull-Up Resistor...
CLINEA 0000H 0001H 0264H 0002H 0041H
	sb	0f253h.2

;;	PA2C0  = 0;	
CLINEA 0000H 0001H 0265H 0002H 000DH
	rb	0f252h.2

;;	PA0MD1  = 0;	// PortA Bit0 set to General Purpose I/O...
CLINEA 0000H 0001H 0268H 0002H 0039H
	rb	0f255h.0

;;	PA0MD0  = 0;	
CLINEA 0000H 0001H 0269H 0002H 000EH
	rb	0f254h.0

;;	PA1MD1  = 0;	// PortA Bit1 set to General Purpose I/O...
CLINEA 0000H 0001H 026AH 0002H 0039H
	rb	0f255h.1

;;	PA1MD0  = 0;	
CLINEA 0000H 0001H 026BH 0002H 000EH
	rb	0f254h.1

;;	PA2MD1  = 0;	// PortA Bit2 set to General Purpose I/O...
CLINEA 0000H 0001H 026CH 0002H 0039H
	rb	0f255h.2

;;	PA2MD0  = 0;	
CLINEA 0000H 0001H 026DH 0002H 000EH
	rb	0f254h.2
CBLOCKEND 128 2 624

;;}  //END PortA_Digital_Inputs Function
CLINEA 0000H 0001H 0270H 0001H 0026H
	rt
CBLOCKEND 128 1 624
CFUNCTIONEND 128


	rseg $$PinB0_PWM$main
CFUNCTION 129

_PinB0_PWM	:
CBLOCK 129 1 631

;;void PinB0_PWM(void){
CLINEA 0000H 0001H 0277H 0001H 0015H
CBLOCK 129 2 631

;;	PB0DIR = 0;		// PortB Bit0 set to Output Mode...
CLINEA 0000H 0001H 0286H 0002H 0031H
	rb	0f259h.0

;;	PB0C1  = 1;		// PortB Bit0 set to CMOS Output...
CLINEA 0000H 0001H 0289H 0002H 0031H
	sb	0f25bh.0

;;	PB0C0  = 1;		
CLINEA 0000H 0001H 028AH 0002H 000EH
	sb	0f25ah.0

;;	PB0MD1  = 0;	// PortB Bit0 set to PWM Output (0,1)...
CLINEA 0000H 0001H 028DH 0002H 0036H
	rb	0f25dh.0

;;	PB0MD0  = 1;	
CLINEA 0000H 0001H 028EH 0002H 000EH
	sb	0f25ch.0

;;	PCCS1 = 0;	//00= LS; 01=HS; 10=PLL
CLINEA 0000H 0001H 0291H 0002H 0023H
	rb	0f916h.1

;;	PCCS0 = 1;
CLINEA 0000H 0001H 0292H 0002H 000BH
	sb	0f916h.0

;;	PWCP = 4250;		// Init Period to (1=255kHz; 10=46kHz; 50=10kHz; 200=2.5kH; ; 3185 = 160Hz; 3400=150Hz; 4250=120Hz; 5000=102Hz)
CLINEA 0000H 0001H 0295H 0002H 007EH
	mov	r0,	#09ah
	mov	r1,	#010h
	st	er0,	0f910h

;;	PWCD =    12;		//12    ~  0.25 % duty cycle @ 160Hz
CLINEA 0000H 0001H 029EH 0002H 0034H
	mov	er0,	#12
	st	er0,	0f912h

;;	PCRUN = 0;		// OFF to start
CLINEA 0000H 0001H 02A0H 0002H 001CH
	rb	0f917h.0
CBLOCKEND 129 2 674

;;}  //END PinB0_PWM Function
CLINEA 0000H 0001H 02A2H 0001H 001BH
	rt
CBLOCKEND 129 1 674
CFUNCTIONEND 129


	rseg $$analog_comparator$main
CFUNCTION 174

_analog_comparator	:
CBLOCK 174 1 681

;;void analog_comparator(void){
CLINEA 0000H 0001H 02A9H 0001H 001DH
CBLOCK 174 2 681
CBLOCKEND 174 2 712

;;} //END analog_comparator Function
CLINEA 0000H 0001H 02C8H 0001H 0022H
	rt
CBLOCKEND 174 1 712
CFUNCTIONEND 174


	rseg $$ALL_LEDs_ON$main
CFUNCTION 137

_ALL_LEDs_ON	:
CBLOCK 137 1 720

;;void ALL_LEDs_ON(void){
CLINEA 0000H 0001H 02D0H 0001H 0017H
CBLOCK 137 2 720

;;	STEP_MODE_LED 		= 1; // Bit D2  => "STEP MODE" LED 		(Orange)
CLINEA 0000H 0001H 02D3H 0002H 003EH
	mov	r0,	#01h
	st	r0,	NEAR _STEP_MODE_LED

;;	  FULL_STEP_LED 		= 1; // Bit D7  => "FULL STEP" LED		(YELLOW)
CLINEA 0000H 0001H 02D4H 0004H 003FH
	st	r0,	NEAR _FULL_STEP_LED

;;	  HALF_STEP_A_LED 	= 1; // Bit D8  => "HALF STEP A" LED	(YELLOW)
CLINEA 0000H 0001H 02D5H 0004H 0041H
	st	r0,	NEAR _HALF_STEP_A_LED

;;	  HALF_STEP_B_LED 	= 1; // Bit D9  => "HALF STEP B" LED	(YELLOW)
CLINEA 0000H 0001H 02D6H 0004H 0041H
	st	r0,	NEAR _HALF_STEP_B_LED

;;	  QUARTER_STEP_LED 	= 1; // Bit D10 => "QUARTER STEP" LED	(YELLOW)
CLINEA 0000H 0001H 02D7H 0004H 0043H
	st	r0,	NEAR _QUARTER_STEP_LED

;;	DRIVER_EN_RED_LED 	= 1; // Bit D6  => "DRIVER ENABLED" LED  	(RED)
CLINEA 0000H 0001H 02D9H 0002H 0043H
	st	r0,	NEAR _DRIVER_EN_RED_LED

;;	DRIVER_EN_GREEN_LED	= 1; // Bit D5  => "DRIVER ENABLED" LED 	(GREEN)
CLINEA 0000H 0001H 02DAH 0002H 0045H
	st	r0,	NEAR _DRIVER_EN_GREEN_LED

;;	  SINGLE_LED 		= 1; // Bit D0  => "SINGLE" LED 		(Orange)
CLINEA 0000H 0001H 02DCH 0004H 003AH
	st	r0,	NEAR _SINGLE_LED

;;	  CONTINUOUS_LED 		= 1; // Bit D1  => "CONTINUOUS" LED 	(Orange)
CLINEA 0000H 0001H 02DDH 0004H 0041H
	st	r0,	NEAR _CONTINUOUS_LED

;;	PASS_THRU_GREEN_LED 	= 1; // Bit D3  => "PASS THRU" LED		(GREEN)
CLINEA 0000H 0001H 02DFH 0002H 0041H
	st	r0,	NEAR _PASS_THRU_GREEN_LED

;;	PASS_THRU_RED_LED 	= 1; // Bit D4  => "PASS THRU" LED		(RED)
CLINEA 0000H 0001H 02E0H 0002H 003DH
	st	r0,	NEAR _PASS_THRU_RED_LED

;;	BUFFER_OE_PIN 		= 0; // Bit D11 => Octal Buffer_OE
CLINEA 0000H 0001H 02E2H 0002H 0033H
	mov	r0,	#00h
	st	r0,	NEAR _BUFFER_OE_PIN

;;	Set_LEDs();	//Send 12-Bit Data to BD8377 Driver, Clock & Latch
CLINEA 0000H 0001H 02E4H 0002H 003FH
	b	_Set_LEDs
CBLOCKEND 137 2 742
CLINEA 0000H 0001H 02E6H 0001H 001CH
CBLOCKEND 137 1 742
CFUNCTIONEND 137


	rseg $$ALL_LEDs_OFF$main
CFUNCTION 138

_ALL_LEDs_OFF	:
CBLOCK 138 1 749

;;void ALL_LEDs_OFF(void){
CLINEA 0000H 0001H 02EDH 0001H 0018H
CBLOCK 138 2 749

;;	DRIVER_EN_RED_LED 	= 0; // Bit D6  => "DRIVER ENABLED" LED  	(RED)
CLINEA 0000H 0001H 02F6H 0002H 0043H
	mov	r0,	#00h
	st	r0,	NEAR _DRIVER_EN_RED_LED

;;	DRIVER_EN_GREEN_LED	= 0; // Bit D5  => "DRIVER ENABLED" LED 	(GREEN)
CLINEA 0000H 0001H 02F7H 0002H 0045H
	st	r0,	NEAR _DRIVER_EN_GREEN_LED

;;	  SINGLE_LED 		= 0; // Bit D0  => "SINGLE" LED 		(Orange)
CLINEA 0000H 0001H 02F9H 0004H 003AH
	st	r0,	NEAR _SINGLE_LED

;;	  CONTINUOUS_LED 		= 0; // Bit D1  => "CONTINUOUS" LED 	(Orange)
CLINEA 0000H 0001H 02FAH 0004H 0041H
	st	r0,	NEAR _CONTINUOUS_LED

;;	PASS_THRU_GREEN_LED 	= 0; // Bit D3  => "PASS THRU" LED		(GREEN)
CLINEA 0000H 0001H 02FCH 0002H 0041H
	st	r0,	NEAR _PASS_THRU_GREEN_LED

;;	PASS_THRU_RED_LED 	= 0; // Bit D4  => "PASS THRU" LED		(RED)
CLINEA 0000H 0001H 02FDH 0002H 003DH
	st	r0,	NEAR _PASS_THRU_RED_LED

;;	BUFFER_OE_PIN 		= 0; // Bit D11 => Octal Buffer_OE
CLINEA 0000H 0001H 02FFH 0002H 0033H
	st	r0,	NEAR _BUFFER_OE_PIN

;;	Set_LEDs();	//Send 12-Bit Data to BD8377 Driver, Clock & Latch
CLINEA 0000H 0001H 0301H 0002H 003FH
	b	_Set_LEDs
CBLOCKEND 138 2 771
CLINEA 0000H 0001H 0303H 0001H 001DH
CBLOCKEND 138 1 771
CFUNCTIONEND 138


	rseg $$NOPxxx$main
CFUNCTION 130

_NOPxxx	:
CBLOCK 130 1 778

;;void NOPxxx( void ){
CLINEA 0000H 0001H 030AH 0001H 0014H
CBLOCK 130 2 778
CLOCAL 4AH 0002H 0000H 0002H "ONCNT" 02H 00H 01H
CBLOCKEND 130 2 786

;;}  //END NOPxxx Function
CLINEA 0000H 0001H 0312H 0001H 0018H
	rt
CBLOCKEND 130 1 786
CFUNCTIONEND 130


	rseg $$NOPyyy$main
CFUNCTION 131

_NOPyyy	:
CBLOCK 131 1 793

;;void NOPyyy( void ){
CLINEA 0000H 0001H 0319H 0001H 0014H
CBLOCK 131 2 793
CLOCAL 4AH 0002H 0000H 0002H "ONCNT" 02H 00H 01H
CBLOCKEND 131 2 801

;;}  //END NOPxxx Function
CLINEA 0000H 0001H 0321H 0001H 0018H
	rt
CBLOCKEND 131 1 801
CFUNCTIONEND 131


	rseg $$NOP_ClkStep$main
CFUNCTION 132

_NOP_ClkStep	:
CBLOCK 132 1 809

;;void NOP_ClkStep( void ){
CLINEA 0000H 0001H 0329H 0001H 0019H
	push	fp
	mov	fp,	sp
	add	sp,	#-02
CBLOCK 132 2 809
CLOCAL 42H 0002H 0002H 0002H "ONCNT" 02H 00H 01H

;;unsigned int ONCNT = 0;
CLINEA 0000H 0001H 032BH 0001H 0017H
	mov	er0,	#0 

;;	while(ONCNT < 35000) {	// NOP for xxx Cycles ~x ns
CLINEA 0000H 0001H 032DH 0002H 0033H
	bal	_$L30
_$L32 :
CBLOCK 132 3 813

;;		ONCNT++;
CLINEA 0000H 0000H 032EH 0003H 000AH
	add	er0,	#1 
CBLOCKEND 132 3 815

;;	}
CLINEA 0000H 0000H 032FH 0002H 0002H
_$L30 :
	st	er0,	-2[fp]

;;	while(ONCNT < 35000) {	// NOP for xxx Cycles ~x ns
CLINEA 0000H 0000H 032DH 0000H 0000H
	mov	er2,	#0 
	cmp	r0,	#0b8h
	cmpc	r1,	#088h
	cmpc	r2,	#00h
	cmpc	r3,	#00h
	blts	_$L32
CBLOCKEND 132 2 817

;;}  //END NOP_ClkStep Function
CLINEA 0000H 0001H 0331H 0001H 001DH
	mov	sp,	fp
	pop	fp
	rt
CBLOCKEND 132 1 817
CFUNCTIONEND 132


	rseg $$NOP10uS$main
CFUNCTION 133

_NOP10uS	:
CBLOCK 133 1 825

;;void NOP10uS( void ){
CLINEA 0000H 0001H 0339H 0001H 0015H
	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-02
CBLOCK 133 2 825
CRET 0004H
CLOCAL 42H 0002H 0002H 0002H "i" 02H 00H 01H

;;	for (i = 0; i < 40; i++)		//was 4
CLINEA 0000H 0001H 033CH 0002H 0022H
	mov	er0,	#0 
	st	er0,	-2[fp]
_$L37 :
CBLOCK 133 3 829

;;		NOPxxx();
CLINEA 0000H 0001H 033EH 0003H 000BH
	bl	_NOPxxx
CBLOCKEND 133 3 831

;;	for (i = 0; i < 40; i++)		//was 4
CLINEA 0000H 0000H 033CH 0002H 0022H
	l	er0,	-2[fp]
	add	er0,	#1 
	st	er0,	-2[fp]
	cmp	r0,	#028h
	cmpc	r1,	#00h
	blt	_$L37
CBLOCKEND 133 2 833

;;}  //END NOP10uSFunction
CLINEA 0000H 0001H 0341H 0001H 0018H
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 133 1 833
CFUNCTIONEND 133


	rseg $$NOP_Long$main
CFUNCTION 134

_NOP_Long	:
CBLOCK 134 1 841

;;{
CLINEA 0000H 0001H 0349H 0001H 0001H
CBLOCK 134 2 841
CLOCAL 4AH 0002H 0000H 0002H "ONCNT" 02H 00H 01H
CBLOCKEND 134 2 848

;;}  //END NOPxxx Function
CLINEA 0000H 0001H 0350H 0001H 0018H
	rt
CBLOCKEND 134 1 848
CFUNCTIONEND 134


	rseg $$Set_LEDs$main
CFUNCTION 135

_Set_LEDs	:
CBLOCK 135 1 855

;;void Set_LEDs(void){
CLINEA 0000H 0001H 0357H 0001H 0014H
	push	lr
CBLOCK 135 2 855
CRET 0000H

;;	LED_Driver_LATCH = 0;					// Set LATCH LOW...
CLINEA 0000H 0001H 0360H 0002H 002EH
	rb	0f258h.6

;;			LED_Driver_SERIN = BUFFER_OE_PIN;		// Set Data 1 or 0 (ON/OFF)...Bit 11
CLINEA 0000H 0001H 0362H 0004H 004AH
	l	r0,	NEAR _BUFFER_OE_PIN
	and	r0,	#01h
	beq	_$M17
	sb	0f258h.5
	bal	_$M18
_$M17 :
	rb	0f258h.5
_$M18 :

;;		myClockingPulse();
CLINEA 0000H 0001H 0363H 0003H 0014H
	bl	_myClockingPulse

;;			LED_Driver_SERIN = QUARTER_STEP_LED;	// Set Data 1 or 0 (ON/OFF)...Bit 10
CLINEA 0000H 0001H 0364H 0004H 004CH
	l	r0,	NEAR _QUARTER_STEP_LED
	and	r0,	#01h
	beq	_$M19
	sb	0f258h.5
	bal	_$M20
_$M19 :
	rb	0f258h.5
_$M20 :

;;		myClockingPulse();
CLINEA 0000H 0001H 0365H 0003H 0014H
	bl	_myClockingPulse

;;			LED_Driver_SERIN = HALF_STEP_B_LED;		// Set Data 1 or 0 (ON/OFF)...Bit 9	
CLINEA 0000H 0001H 0366H 0004H 004CH
	l	r0,	NEAR _HALF_STEP_B_LED
	and	r0,	#01h
	beq	_$M21
	sb	0f258h.5
	bal	_$M22
_$M21 :
	rb	0f258h.5
_$M22 :

;;		myClockingPulse();
CLINEA 0000H 0001H 0367H 0003H 0014H
	bl	_myClockingPulse

;;			LED_Driver_SERIN = HALF_STEP_A_LED;		// Set Data 1 or 0 (ON/OFF)...Bit 8
CLINEA 0000H 0001H 0368H 0004H 004BH
	l	r0,	NEAR _HALF_STEP_A_LED
	and	r0,	#01h
	beq	_$M23
	sb	0f258h.5
	bal	_$M24
_$M23 :
	rb	0f258h.5
_$M24 :

;;		myClockingPulse();
CLINEA 0000H 0001H 0369H 0003H 0014H
	bl	_myClockingPulse

;;			LED_Driver_SERIN = FULL_STEP_LED;		// Set Data 1 or 0 (ON/OFF)...Bit 7	
CLINEA 0000H 0001H 036AH 0004H 004AH
	l	r0,	NEAR _FULL_STEP_LED
	and	r0,	#01h
	beq	_$M25
	sb	0f258h.5
	bal	_$M26
_$M25 :
	rb	0f258h.5
_$M26 :

;;		myClockingPulse();
CLINEA 0000H 0001H 036BH 0003H 0014H
	bl	_myClockingPulse

;;			LED_Driver_SERIN = DRIVER_EN_RED_LED;	// Set Data 1 or 0 (ON/OFF)...Bit 6
CLINEA 0000H 0001H 036CH 0004H 004CH
	l	r0,	NEAR _DRIVER_EN_RED_LED
	and	r0,	#01h
	beq	_$M27
	sb	0f258h.5
	bal	_$M28
_$M27 :
	rb	0f258h.5
_$M28 :

;;		myClockingPulse();
CLINEA 0000H 0001H 036DH 0003H 0014H
	bl	_myClockingPulse

;;			LED_Driver_SERIN = DRIVER_EN_GREEN_LED;	// Set Data 1 or 0 (ON/OFF)...Bit 5
CLINEA 0000H 0001H 036EH 0004H 004EH
	l	r0,	NEAR _DRIVER_EN_GREEN_LED
	and	r0,	#01h
	beq	_$M29
	sb	0f258h.5
	bal	_$M30
_$M29 :
	rb	0f258h.5
_$M30 :

;;		myClockingPulse();
CLINEA 0000H 0001H 036FH 0003H 0014H
	bl	_myClockingPulse

;;			LED_Driver_SERIN = PASS_THRU_RED_LED;	// Set Data 1 or 0 (ON/OFF)...Bit 4	
CLINEA 0000H 0001H 0370H 0004H 004DH
	l	r0,	NEAR _PASS_THRU_RED_LED
	and	r0,	#01h
	beq	_$M31
	sb	0f258h.5
	bal	_$M32
_$M31 :
	rb	0f258h.5
_$M32 :

;;		myClockingPulse();
CLINEA 0000H 0001H 0371H 0003H 0014H
	bl	_myClockingPulse

;;			LED_Driver_SERIN = PASS_THRU_GREEN_LED;	// Set Data 1 or 0 (ON/OFF)...Bit 3	
CLINEA 0000H 0001H 0372H 0004H 004FH
	l	r0,	NEAR _PASS_THRU_GREEN_LED
	and	r0,	#01h
	beq	_$M33
	sb	0f258h.5
	bal	_$M34
_$M33 :
	rb	0f258h.5
_$M34 :

;;		myClockingPulse();
CLINEA 0000H 0001H 0373H 0003H 0014H
	bl	_myClockingPulse

;;			LED_Driver_SERIN = STEP_MODE_LED;		// Set Data 1 or 0 (ON/OFF)...Bit 2	
CLINEA 0000H 0001H 0374H 0004H 004AH
	l	r0,	NEAR _STEP_MODE_LED
	and	r0,	#01h
	beq	_$M35
	sb	0f258h.5
	bal	_$M36
_$M35 :
	rb	0f258h.5
_$M36 :

;;		myClockingPulse();
CLINEA 0000H 0001H 0375H 0003H 0014H
	bl	_myClockingPulse

;;			LED_Driver_SERIN = CONTINUOUS_LED;		// Set Data 1 or 0 (ON/OFF)...Bit 1	
CLINEA 0000H 0001H 0376H 0004H 004BH
	l	r0,	NEAR _CONTINUOUS_LED
	and	r0,	#01h
	beq	_$M37
	sb	0f258h.5
	bal	_$M38
_$M37 :
	rb	0f258h.5
_$M38 :

;;		myClockingPulse();
CLINEA 0000H 0001H 0377H 0003H 0014H
	bl	_myClockingPulse

;;			LED_Driver_SERIN = SINGLE_LED;		// Set Data 1 or 0 (ON/OFF)...Bit 0	
CLINEA 0000H 0001H 0378H 0004H 0047H
	l	r0,	NEAR _SINGLE_LED
	and	r0,	#01h
	beq	_$M39
	sb	0f258h.5
	bal	_$M40
_$M39 :
	rb	0f258h.5
_$M40 :

;;		myClockingPulse();
CLINEA 0000H 0001H 0379H 0003H 0014H
	bl	_myClockingPulse

;;	LED_Driver_LATCH = 1;					// Set LATCH High to end transmission...
CLINEA 0000H 0001H 037BH 0002H 0043H
	sb	0f258h.6

;;			NOP_Long();
CLINEA 0000H 0001H 037CH 0004H 000EH
	bl	_NOP_Long

;;	main_clrWDT(); 	// Clear WDT
CLINEA 0000H 0001H 037DH 0002H 001DH
	bl	_main_clrWDT
CBLOCKEND 135 2 896

;;} //END Set_LEDs Function
CLINEA 0000H 0001H 0380H 0001H 0019H
	pop	pc
CBLOCKEND 135 1 896
CFUNCTIONEND 135


	rseg $$myClockingPulse$main
CFUNCTION 139

_myClockingPulse	:
CBLOCK 139 1 903

;;void myClockingPulse(void){
CLINEA 0000H 0001H 0387H 0001H 001BH
	push	lr
CBLOCK 139 2 903
CRET 0000H

;;	LED_Driver_CLK = 0;		// Set CLK Low to Start...
CLINEA 0000H 0001H 038DH 0002H 0030H
	rb	0f258h.7

;;		NOPyyy();
CLINEA 0000H 0001H 038EH 0003H 000BH
	bl	_NOPyyy

;;	LED_Driver_CLK = 1;		// Cycle Clk HIGH...
CLINEA 0000H 0001H 038FH 0002H 002AH
	sb	0f258h.7

;;		NOPyyy();
CLINEA 0000H 0001H 0390H 0003H 000BH
	bl	_NOPyyy
CBLOCKEND 139 2 913

;;} //END ClockingPulse Function
CLINEA 0000H 0001H 0391H 0001H 001EH
	pop	pc
CBLOCKEND 139 1 913
CFUNCTIONEND 139


	rseg $$LEDStateA$main
CFUNCTION 140

_LEDStateA	:
CBLOCK 140 1 921

;;void LEDStateA (void){
CLINEA 0000H 0001H 0399H 0001H 0016H
CBLOCK 140 2 921

;;	STEP_MODE_LED 		= 1; // Bit D2  => "STEP MODE" LED 		(Orange)
CLINEA 0000H 0001H 039CH 0002H 003EH
	mov	r0,	#01h
	st	r0,	NEAR _STEP_MODE_LED

;;	  FULL_STEP_LED 	= 0; // Bit D7  => "FULL STEP" LED		(YELLOW)
CLINEA 0000H 0001H 039DH 0004H 003EH
	mov	r0,	#00h
	st	r0,	NEAR _FULL_STEP_LED

;;	  HALF_STEP_A_LED 	= 0; // Bit D8  => "HALF STEP A" LED	(YELLOW)
CLINEA 0000H 0001H 039EH 0004H 0041H
	st	r0,	NEAR _HALF_STEP_A_LED

;;	  HALF_STEP_B_LED 	= 0; // Bit D9  => "HALF STEP B" LED	(YELLOW)
CLINEA 0000H 0001H 039FH 0004H 0041H
	st	r0,	NEAR _HALF_STEP_B_LED

;;	  QUARTER_STEP_LED 	= 0; // Bit D10 => "QUARTER STEP" LED	(YELLOW)
CLINEA 0000H 0001H 03A0H 0004H 0043H
	st	r0,	NEAR _QUARTER_STEP_LED

;;	DRIVER_EN_RED_LED 	= 0; // Bit D6  => "DRIVER ENABLED" LED  	(RED)
CLINEA 0000H 0001H 03A2H 0002H 0043H
	st	r0,	NEAR _DRIVER_EN_RED_LED

;;	DRIVER_EN_GREEN_LED	= 0; // Bit D5  => "DRIVER ENABLED" LED 	(GREEN)
CLINEA 0000H 0001H 03A3H 0002H 0045H
	st	r0,	NEAR _DRIVER_EN_GREEN_LED

;;	  SINGLE_LED 		= 0; // Bit D0  => "SINGLE" LED 		(Orange)
CLINEA 0000H 0001H 03A5H 0004H 003AH
	st	r0,	NEAR _SINGLE_LED

;;	  CONTINUOUS_LED 	= 0; // Bit D1  => "CONTINUOUS" LED 	(Orange)
CLINEA 0000H 0001H 03A6H 0004H 0040H
	st	r0,	NEAR _CONTINUOUS_LED

;;	PASS_THRU_GREEN_LED = 0; // Bit D3  => "PASS THRU" LED		(GREEN)
CLINEA 0000H 0001H 03A8H 0002H 0040H
	st	r0,	NEAR _PASS_THRU_GREEN_LED

;;	PASS_THRU_RED_LED 	= 0; // Bit D4  => "PASS THRU" LED		(RED)
CLINEA 0000H 0001H 03A9H 0002H 003DH
	st	r0,	NEAR _PASS_THRU_RED_LED

;;	BUFFER_OE_PIN 		= 0; // Bit D11 => Octal Buffer_OE
CLINEA 0000H 0001H 03ABH 0002H 0033H
	st	r0,	NEAR _BUFFER_OE_PIN

;;  Set_LEDs();	// Send 12-Bit Data to BD8377 Driver, Clock & Latch
CLINEA 0000H 0001H 03ADH 0003H 0041H
	b	_Set_LEDs
CBLOCKEND 140 2 943
CLINEA 0000H 0001H 03AFH 0001H 001AH
CBLOCKEND 140 1 943
CFUNCTIONEND 140


	rseg $$LEDStateA1$main
CFUNCTION 141

_LEDStateA1	:
CBLOCK 141 1 950

;;void LEDStateA1 (void){
CLINEA 0000H 0001H 03B6H 0001H 0017H
CBLOCK 141 2 950

;;	STEP_MODE_LED 		= 1; // Bit D2  => "STEP MODE" LED 		(Orange)
CLINEA 0000H 0001H 03B9H 0002H 003EH
	mov	r0,	#01h
	st	r0,	NEAR _STEP_MODE_LED

;;	  FULL_STEP_LED 	= 1; // Bit D7  => "FULL STEP" LED		(YELLOW)
CLINEA 0000H 0001H 03BAH 0004H 003EH
	st	r0,	NEAR _FULL_STEP_LED

;;	  HALF_STEP_A_LED 	= 0; // Bit D8  => "HALF STEP A" LED	(YELLOW)
CLINEA 0000H 0001H 03BBH 0004H 0041H
	mov	r0,	#00h
	st	r0,	NEAR _HALF_STEP_A_LED

;;	  HALF_STEP_B_LED 	= 0; // Bit D9  => "HALF STEP B" LED	(YELLOW)
CLINEA 0000H 0001H 03BCH 0004H 0041H
	st	r0,	NEAR _HALF_STEP_B_LED

;;	  QUARTER_STEP_LED 	= 0; // Bit D10 => "QUARTER STEP" LED	(YELLOW)
CLINEA 0000H 0001H 03BDH 0004H 0043H
	st	r0,	NEAR _QUARTER_STEP_LED

;;	DRIVER_EN_RED_LED 	= 0; // Bit D6  => "DRIVER ENABLED" LED  	(RED)
CLINEA 0000H 0001H 03BFH 0002H 0043H
	st	r0,	NEAR _DRIVER_EN_RED_LED

;;	DRIVER_EN_GREEN_LED	= 0; // Bit D5  => "DRIVER ENABLED" LED 	(GREEN)
CLINEA 0000H 0001H 03C0H 0002H 0045H
	st	r0,	NEAR _DRIVER_EN_GREEN_LED

;;	  SINGLE_LED 		= 0; // Bit D0  => "SINGLE" LED 		(Orange)
CLINEA 0000H 0001H 03C2H 0004H 003AH
	st	r0,	NEAR _SINGLE_LED

;;	  CONTINUOUS_LED 	= 0; // Bit D1  => "CONTINUOUS" LED 	(Orange)
CLINEA 0000H 0001H 03C3H 0004H 0040H
	st	r0,	NEAR _CONTINUOUS_LED

;;	PASS_THRU_GREEN_LED = 0; // Bit D3  => "PASS THRU" LED		(GREEN)
CLINEA 0000H 0001H 03C5H 0002H 0040H
	st	r0,	NEAR _PASS_THRU_GREEN_LED

;;	PASS_THRU_RED_LED 	= 0; // Bit D4  => "PASS THRU" LED		(RED)
CLINEA 0000H 0001H 03C6H 0002H 003DH
	st	r0,	NEAR _PASS_THRU_RED_LED

;;	BUFFER_OE_PIN 		= 0; // Bit D11 => Octal Buffer_OE
CLINEA 0000H 0001H 03C8H 0002H 0033H
	st	r0,	NEAR _BUFFER_OE_PIN

;;  Set_LEDs();	// Send 12-Bit Data to BD8377 Driver, Clock & Latch
CLINEA 0000H 0001H 03CAH 0003H 0041H
	b	_Set_LEDs
CBLOCKEND 141 2 972
CLINEA 0000H 0001H 03CCH 0001H 001BH
CBLOCKEND 141 1 972
CFUNCTIONEND 141


	rseg $$LEDStateA2$main
CFUNCTION 142

_LEDStateA2	:
CBLOCK 142 1 979

;;void LEDStateA2 (void){
CLINEA 0000H 0001H 03D3H 0001H 0017H
CBLOCK 142 2 979

;;	STEP_MODE_LED 		= 1; // Bit D2  => "STEP MODE" LED 		(Orange)
CLINEA 0000H 0001H 03D6H 0002H 003EH
	mov	r0,	#01h
	st	r0,	NEAR _STEP_MODE_LED

;;	  FULL_STEP_LED 		= 0; // Bit D7  => "FULL STEP" LED		(YELLOW)
CLINEA 0000H 0001H 03D7H 0004H 003FH
	mov	r0,	#00h
	st	r0,	NEAR _FULL_STEP_LED

;;	  HALF_STEP_A_LED 	= 1; // Bit D8  => "HALF STEP A" LED	(YELLOW)
CLINEA 0000H 0001H 03D8H 0004H 0041H
	mov	r0,	#01h
	st	r0,	NEAR _HALF_STEP_A_LED

;;	  HALF_STEP_B_LED 	= 0; // Bit D9  => "HALF STEP B" LED	(YELLOW)
CLINEA 0000H 0001H 03D9H 0004H 0041H
	mov	r0,	#00h
	st	r0,	NEAR _HALF_STEP_B_LED

;;	  QUARTER_STEP_LED 	= 0; // Bit D10 => "QUARTER STEP" LED	(YELLOW)
CLINEA 0000H 0001H 03DAH 0004H 0043H
	st	r0,	NEAR _QUARTER_STEP_LED

;;	DRIVER_EN_RED_LED 	= 0; // Bit D6  => "DRIVER ENABLED" LED  	(RED)
CLINEA 0000H 0001H 03DCH 0002H 0043H
	st	r0,	NEAR _DRIVER_EN_RED_LED

;;	DRIVER_EN_GREEN_LED	= 0; // Bit D5  => "DRIVER ENABLED" LED 	(GREEN)
CLINEA 0000H 0001H 03DDH 0002H 0045H
	st	r0,	NEAR _DRIVER_EN_GREEN_LED

;;	  SINGLE_LED 		= 0; // Bit D0  => "SINGLE" LED 		(Orange)
CLINEA 0000H 0001H 03DFH 0004H 003AH
	st	r0,	NEAR _SINGLE_LED

;;	  CONTINUOUS_LED 		= 0; // Bit D1  => "CONTINUOUS" LED 	(Orange)
CLINEA 0000H 0001H 03E0H 0004H 0041H
	st	r0,	NEAR _CONTINUOUS_LED

;;	PASS_THRU_GREEN_LED 	= 0; // Bit D3  => "PASS THRU" LED		(GREEN)
CLINEA 0000H 0001H 03E2H 0002H 0041H
	st	r0,	NEAR _PASS_THRU_GREEN_LED

;;	PASS_THRU_RED_LED 	= 0; // Bit D4  => "PASS THRU" LED		(RED)
CLINEA 0000H 0001H 03E3H 0002H 003DH
	st	r0,	NEAR _PASS_THRU_RED_LED

;;	BUFFER_OE_PIN 		= 0; // Bit D11 => Octal Buffer_OE
CLINEA 0000H 0001H 03E5H 0002H 0033H
	st	r0,	NEAR _BUFFER_OE_PIN

;;  Set_LEDs();	// Send 12-Bit Data to BD8377 Driver, Clock & Latch
CLINEA 0000H 0001H 03E7H 0003H 0041H
	b	_Set_LEDs
CBLOCKEND 142 2 1001
CLINEA 0000H 0001H 03E9H 0001H 001BH
CBLOCKEND 142 1 1001
CFUNCTIONEND 142


	rseg $$LEDStateA3$main
CFUNCTION 143

_LEDStateA3	:
CBLOCK 143 1 1008

;;void LEDStateA3 (void){
CLINEA 0000H 0001H 03F0H 0001H 0017H
CBLOCK 143 2 1008

;;	STEP_MODE_LED 		= 1; // Bit D2  => "STEP MODE" LED 		(Orange)
CLINEA 0000H 0001H 03F3H 0002H 003EH
	mov	r0,	#01h
	st	r0,	NEAR _STEP_MODE_LED

;;	  FULL_STEP_LED 		= 0; // Bit D7  => "FULL STEP" LED		(YELLOW)
CLINEA 0000H 0001H 03F4H 0004H 003FH
	mov	r0,	#00h
	st	r0,	NEAR _FULL_STEP_LED

;;	  HALF_STEP_A_LED 	= 0; // Bit D8  => "HALF STEP A" LED	(YELLOW)
CLINEA 0000H 0001H 03F5H 0004H 0041H
	st	r0,	NEAR _HALF_STEP_A_LED

;;	  HALF_STEP_B_LED 	= 1; // Bit D9  => "HALF STEP B" LED	(YELLOW)
CLINEA 0000H 0001H 03F6H 0004H 0041H
	mov	r0,	#01h
	st	r0,	NEAR _HALF_STEP_B_LED

;;	  QUARTER_STEP_LED 	= 0; // Bit D10 => "QUARTER STEP" LED	(YELLOW)
CLINEA 0000H 0001H 03F7H 0004H 0043H
	mov	r0,	#00h
	st	r0,	NEAR _QUARTER_STEP_LED

;;	DRIVER_EN_RED_LED 	= 0; // Bit D6  => "DRIVER ENABLED" LED  	(RED)
CLINEA 0000H 0001H 03F9H 0002H 0043H
	st	r0,	NEAR _DRIVER_EN_RED_LED

;;	DRIVER_EN_GREEN_LED	= 0; // Bit D5  => "DRIVER ENABLED" LED 	(GREEN)
CLINEA 0000H 0001H 03FAH 0002H 0045H
	st	r0,	NEAR _DRIVER_EN_GREEN_LED

;;	  SINGLE_LED 		= 0; // Bit D0  => "SINGLE" LED 		(Orange)
CLINEA 0000H 0001H 03FCH 0004H 003AH
	st	r0,	NEAR _SINGLE_LED

;;	  CONTINUOUS_LED 		= 0; // Bit D1  => "CONTINUOUS" LED 	(Orange)
CLINEA 0000H 0001H 03FDH 0004H 0041H
	st	r0,	NEAR _CONTINUOUS_LED

;;	PASS_THRU_GREEN_LED 	= 0; // Bit D3  => "PASS THRU" LED		(GREEN)
CLINEA 0000H 0001H 03FFH 0002H 0041H
	st	r0,	NEAR _PASS_THRU_GREEN_LED

;;	PASS_THRU_RED_LED 	= 0; // Bit D4  => "PASS THRU" LED		(RED)
CLINEA 0000H 0001H 0400H 0002H 003DH
	st	r0,	NEAR _PASS_THRU_RED_LED

;;	BUFFER_OE_PIN 		= 0; // Bit D11 => Octal Buffer_OE
CLINEA 0000H 0001H 0402H 0002H 0033H
	st	r0,	NEAR _BUFFER_OE_PIN

;;  Set_LEDs();	// Send 12-Bit Data to BD8377 Driver, Clock & Latch
CLINEA 0000H 0001H 0404H 0003H 0041H
	b	_Set_LEDs
CBLOCKEND 143 2 1030
CLINEA 0000H 0001H 0406H 0001H 001BH
CBLOCKEND 143 1 1030
CFUNCTIONEND 143


	rseg $$LEDStateA4$main
CFUNCTION 144

_LEDStateA4	:
CBLOCK 144 1 1037

;;void LEDStateA4 (void){
CLINEA 0000H 0001H 040DH 0001H 0017H
CBLOCK 144 2 1037

;;	STEP_MODE_LED 		= 1; // Bit D2  => "STEP MODE" LED 		(Orange)
CLINEA 0000H 0001H 0410H 0002H 003EH
	mov	r0,	#01h
	st	r0,	NEAR _STEP_MODE_LED

;;	  FULL_STEP_LED 		= 0; // Bit D7  => "FULL STEP" LED		(YELLOW)
CLINEA 0000H 0001H 0411H 0004H 003FH
	mov	r0,	#00h
	st	r0,	NEAR _FULL_STEP_LED

;;	  HALF_STEP_A_LED 	= 0; // Bit D8  => "HALF STEP A" LED	(YELLOW)
CLINEA 0000H 0001H 0412H 0004H 0041H
	st	r0,	NEAR _HALF_STEP_A_LED

;;	  HALF_STEP_B_LED 	= 0; // Bit D9  => "HALF STEP B" LED	(YELLOW)
CLINEA 0000H 0001H 0413H 0004H 0041H
	st	r0,	NEAR _HALF_STEP_B_LED

;;	  QUARTER_STEP_LED 	= 1; // Bit D10 => "QUARTER STEP" LED	(YELLOW)
CLINEA 0000H 0001H 0414H 0004H 0043H
	mov	r0,	#01h
	st	r0,	NEAR _QUARTER_STEP_LED

;;	DRIVER_EN_RED_LED 	= 0; // Bit D6  => "DRIVER ENABLED" LED  	(RED)
CLINEA 0000H 0001H 0416H 0002H 0043H
	mov	r0,	#00h
	st	r0,	NEAR _DRIVER_EN_RED_LED

;;	DRIVER_EN_GREEN_LED	= 0; // Bit D5  => "DRIVER ENABLED" LED 	(GREEN)
CLINEA 0000H 0001H 0417H 0002H 0045H
	st	r0,	NEAR _DRIVER_EN_GREEN_LED

;;	  SINGLE_LED 		= 0; // Bit D0  => "SINGLE" LED 		(Orange)
CLINEA 0000H 0001H 0419H 0004H 003AH
	st	r0,	NEAR _SINGLE_LED

;;	  CONTINUOUS_LED 		= 0; // Bit D1  => "CONTINUOUS" LED 	(Orange)
CLINEA 0000H 0001H 041AH 0004H 0041H
	st	r0,	NEAR _CONTINUOUS_LED

;;	PASS_THRU_GREEN_LED 	= 0; // Bit D3  => "PASS THRU" LED		(GREEN)
CLINEA 0000H 0001H 041CH 0002H 0041H
	st	r0,	NEAR _PASS_THRU_GREEN_LED

;;	PASS_THRU_RED_LED 	= 0; // Bit D4  => "PASS THRU" LED		(RED)
CLINEA 0000H 0001H 041DH 0002H 003DH
	st	r0,	NEAR _PASS_THRU_RED_LED

;;	BUFFER_OE_PIN 		= 0; // Bit D11 => Octal Buffer_OE
CLINEA 0000H 0001H 041FH 0002H 0033H
	st	r0,	NEAR _BUFFER_OE_PIN

;;  Set_LEDs();	// Send 12-Bit Data to BD8377 Driver, Clock & Latch
CLINEA 0000H 0001H 0421H 0003H 0041H
	b	_Set_LEDs
CBLOCKEND 144 2 1059
CLINEA 0000H 0001H 0423H 0001H 001BH
CBLOCKEND 144 1 1059
CFUNCTIONEND 144


	rseg $$LEDStateB$main
CFUNCTION 145

_LEDStateB	:
CBLOCK 145 1 1066

;;void LEDStateB (void){
CLINEA 0000H 0001H 042AH 0001H 0016H
CBLOCK 145 2 1066

;;	DRIVER_EN_RED_LED 	= 1; // Bit D6  => "DRIVER ENABLED" LED  	(RED)
CLINEA 0000H 0001H 0433H 0002H 0043H
	mov	r0,	#01h
	st	r0,	NEAR _DRIVER_EN_RED_LED

;;	DRIVER_EN_GREEN_LED	= 0; // Bit D5  => "DRIVER ENABLED" LED 	(GREEN)
CLINEA 0000H 0001H 0434H 0002H 0045H
	mov	r0,	#00h
	st	r0,	NEAR _DRIVER_EN_GREEN_LED

;;	  SINGLE_LED 		= 0; // Bit D0  => "SINGLE" LED 		(Orange)
CLINEA 0000H 0001H 0436H 0004H 003AH
	st	r0,	NEAR _SINGLE_LED

;;	  CONTINUOUS_LED 		= 0; // Bit D1  => "CONTINUOUS" LED 	(Orange)
CLINEA 0000H 0001H 0437H 0004H 0041H
	st	r0,	NEAR _CONTINUOUS_LED

;;	PASS_THRU_GREEN_LED 	= 0; // Bit D3  => "PASS THRU" LED		(GREEN)
CLINEA 0000H 0001H 0439H 0002H 0041H
	st	r0,	NEAR _PASS_THRU_GREEN_LED

;;	PASS_THRU_RED_LED 	= 0; // Bit D4  => "PASS THRU" LED		(RED)
CLINEA 0000H 0001H 043AH 0002H 003DH
	st	r0,	NEAR _PASS_THRU_RED_LED

;;	BUFFER_OE_PIN 		= 0; // Bit D11 => Octal Buffer_OE
CLINEA 0000H 0001H 043CH 0002H 0033H
	st	r0,	NEAR _BUFFER_OE_PIN

;;  Set_LEDs();	// Send 12-Bit Data to BD8377 Driver, Clock & Latch
CLINEA 0000H 0001H 043EH 0003H 0041H
	b	_Set_LEDs
CBLOCKEND 145 2 1088
CLINEA 0000H 0001H 0440H 0001H 001AH
CBLOCKEND 145 1 1088
CFUNCTIONEND 145


	rseg $$LEDStateC$main
CFUNCTION 146

_LEDStateC	:
CBLOCK 146 1 1095

;;void LEDStateC (void){
CLINEA 0000H 0001H 0447H 0001H 0016H
CBLOCK 146 2 1095

;;	DRIVER_EN_RED_LED 	= 0; // Bit D6  => "DRIVER ENABLED" LED  	(RED)
CLINEA 0000H 0001H 0450H 0002H 0043H
	mov	r0,	#00h
	st	r0,	NEAR _DRIVER_EN_RED_LED

;;	DRIVER_EN_GREEN_LED	= 1; // Bit D5  => "DRIVER ENABLED" LED 	(GREEN)
CLINEA 0000H 0001H 0451H 0002H 0045H
	mov	r0,	#01h
	st	r0,	NEAR _DRIVER_EN_GREEN_LED

;;	  SINGLE_LED 		= 0; // Bit D0  => "SINGLE" LED 		(Orange)
CLINEA 0000H 0001H 0453H 0004H 003AH
	mov	r0,	#00h
	st	r0,	NEAR _SINGLE_LED

;;	  CONTINUOUS_LED 		= 0; // Bit D1  => "CONTINUOUS" LED 	(Orange)
CLINEA 0000H 0001H 0454H 0004H 0041H
	st	r0,	NEAR _CONTINUOUS_LED

;;	PASS_THRU_GREEN_LED 	= 0; // Bit D3  => "PASS THRU" LED		(GREEN)
CLINEA 0000H 0001H 0456H 0002H 0041H
	st	r0,	NEAR _PASS_THRU_GREEN_LED

;;	PASS_THRU_RED_LED 	= 0; // Bit D4  => "PASS THRU" LED		(RED)
CLINEA 0000H 0001H 0457H 0002H 003DH
	st	r0,	NEAR _PASS_THRU_RED_LED

;;	BUFFER_OE_PIN 		= 0; // Bit D11 => Octal Buffer_OE
CLINEA 0000H 0001H 0459H 0002H 0033H
	st	r0,	NEAR _BUFFER_OE_PIN

;;  Set_LEDs();	// Send 12-Bit Data to BD8377 Driver, Clock & Latch
CLINEA 0000H 0001H 045BH 0003H 0041H
	b	_Set_LEDs
CBLOCKEND 146 2 1117
CLINEA 0000H 0001H 045DH 0001H 001AH
CBLOCKEND 146 1 1117
CFUNCTIONEND 146


	rseg $$LEDStateC1$main
CFUNCTION 147

_LEDStateC1	:
CBLOCK 147 1 1124

;;void LEDStateC1 (void){
CLINEA 0000H 0001H 0464H 0001H 0017H
CBLOCK 147 2 1124

;;	DRIVER_EN_RED_LED 	= 0; // Bit D6  => "DRIVER ENABLED" LED  	(RED)
CLINEA 0000H 0001H 046DH 0002H 0043H
	mov	r0,	#00h
	st	r0,	NEAR _DRIVER_EN_RED_LED

;;	DRIVER_EN_GREEN_LED	= 1; // Bit D5  => "DRIVER ENABLED" LED 	(GREEN)
CLINEA 0000H 0001H 046EH 0002H 0045H
	mov	r0,	#01h
	st	r0,	NEAR _DRIVER_EN_GREEN_LED

;;	  SINGLE_LED 		= 1; // Bit D0  => "SINGLE" LED 		(Orange)
CLINEA 0000H 0001H 0470H 0004H 003AH
	st	r0,	NEAR _SINGLE_LED

;;	  CONTINUOUS_LED 		= 0; // Bit D1  => "CONTINUOUS" LED 	(Orange)
CLINEA 0000H 0001H 0471H 0004H 0041H
	mov	r0,	#00h
	st	r0,	NEAR _CONTINUOUS_LED

;;	PASS_THRU_GREEN_LED 	= 0; // Bit D3  => "PASS THRU" LED		(GREEN)
CLINEA 0000H 0001H 0473H 0002H 0041H
	st	r0,	NEAR _PASS_THRU_GREEN_LED

;;	PASS_THRU_RED_LED 	= 0; // Bit D4  => "PASS THRU" LED		(RED)
CLINEA 0000H 0001H 0474H 0002H 003DH
	st	r0,	NEAR _PASS_THRU_RED_LED

;;	BUFFER_OE_PIN 		= 0; // Bit D11 => Octal Buffer_OE
CLINEA 0000H 0001H 0476H 0002H 0033H
	st	r0,	NEAR _BUFFER_OE_PIN

;;  Set_LEDs();	// Send 12-Bit Data to BD8377 Driver, Clock & Latch
CLINEA 0000H 0001H 0478H 0003H 0041H
	b	_Set_LEDs
CBLOCKEND 147 2 1146
CLINEA 0000H 0001H 047AH 0001H 001BH
CBLOCKEND 147 1 1146
CFUNCTIONEND 147


	rseg $$LEDStateC1A$main
CFUNCTION 148

_LEDStateC1A	:
CBLOCK 148 1 1153

;;void LEDStateC1A (void){
CLINEA 0000H 0001H 0481H 0001H 0018H
CBLOCK 148 2 1153

;;	DRIVER_EN_RED_LED 	= 0; // Bit D6  => "DRIVER ENABLED" LED  	(RED)
CLINEA 0000H 0001H 048AH 0002H 0043H
	mov	r0,	#00h
	st	r0,	NEAR _DRIVER_EN_RED_LED

;;	DRIVER_EN_GREEN_LED	= 1; // Bit D5  => "DRIVER ENABLED" LED 	(GREEN)
CLINEA 0000H 0001H 048BH 0002H 0045H
	mov	r0,	#01h
	st	r0,	NEAR _DRIVER_EN_GREEN_LED

;;	  SINGLE_LED 		= 0; // Bit D0  => "SINGLE" LED 		(Orange) 
CLINEA 0000H 0001H 048EH 0004H 003BH
	mov	r0,	#00h
	st	r0,	NEAR _SINGLE_LED

;;	  CONTINUOUS_LED 		= 0; // Bit D1  => "CONTINUOUS" LED 	(Orange)
CLINEA 0000H 0001H 048FH 0004H 0041H
	st	r0,	NEAR _CONTINUOUS_LED

;;	PASS_THRU_GREEN_LED 	= 0; // Bit D3  => "PASS THRU" LED		(GREEN)
CLINEA 0000H 0001H 0491H 0002H 0041H
	st	r0,	NEAR _PASS_THRU_GREEN_LED

;;	PASS_THRU_RED_LED 	= 0; // Bit D4  => "PASS THRU" LED		(RED)
CLINEA 0000H 0001H 0492H 0002H 003DH
	st	r0,	NEAR _PASS_THRU_RED_LED

;;	BUFFER_OE_PIN 		= 0; // Bit D11 => Octal Buffer_OE
CLINEA 0000H 0001H 0494H 0002H 0033H
	st	r0,	NEAR _BUFFER_OE_PIN

;;  Set_LEDs();	// Send 12-Bit Data to BD8377 Driver, Clock & Latch
CLINEA 0000H 0001H 0496H 0003H 0041H
	b	_Set_LEDs
CBLOCKEND 148 2 1176
CLINEA 0000H 0001H 0498H 0001H 001CH
CBLOCKEND 148 1 1176
CFUNCTIONEND 148


	rseg $$LEDStateC2$main
CFUNCTION 149

_LEDStateC2	:
CBLOCK 149 1 1183

;;void LEDStateC2 (void){
CLINEA 0000H 0001H 049FH 0001H 0017H
CBLOCK 149 2 1183

;;	DRIVER_EN_RED_LED 	= 0; // Bit D6  => "DRIVER ENABLED" LED  	(RED)
CLINEA 0000H 0001H 04A8H 0002H 0043H
	mov	r0,	#00h
	st	r0,	NEAR _DRIVER_EN_RED_LED

;;	DRIVER_EN_GREEN_LED	= 1; // Bit D5  => "DRIVER ENABLED" LED 	(GREEN)
CLINEA 0000H 0001H 04A9H 0002H 0045H
	mov	r0,	#01h
	st	r0,	NEAR _DRIVER_EN_GREEN_LED

;;	  SINGLE_LED 		= 0; // Bit D0  => "SINGLE" LED 		(Orange)
CLINEA 0000H 0001H 04ABH 0004H 003AH
	mov	r0,	#00h
	st	r0,	NEAR _SINGLE_LED

;;	  CONTINUOUS_LED 		= 1; // Bit D1  => "CONTINUOUS" LED 	(Orange)
CLINEA 0000H 0001H 04ACH 0004H 0041H
	mov	r0,	#01h
	st	r0,	NEAR _CONTINUOUS_LED

;;	PASS_THRU_GREEN_LED 	= 0; // Bit D3  => "PASS THRU" LED		(GREEN)
CLINEA 0000H 0001H 04AEH 0002H 0041H
	mov	r0,	#00h
	st	r0,	NEAR _PASS_THRU_GREEN_LED

;;	PASS_THRU_RED_LED 	= 0; // Bit D4  => "PASS THRU" LED		(RED)
CLINEA 0000H 0001H 04AFH 0002H 003DH
	st	r0,	NEAR _PASS_THRU_RED_LED

;;	BUFFER_OE_PIN 		= 0; // Bit D11 => Octal Buffer_OE
CLINEA 0000H 0001H 04B1H 0002H 0033H
	st	r0,	NEAR _BUFFER_OE_PIN

;;  Set_LEDs();	// Send 12-Bit Data to BD8377 Driver, Clock & Latch
CLINEA 0000H 0001H 04B3H 0003H 0041H
	b	_Set_LEDs
CBLOCKEND 149 2 1205
CLINEA 0000H 0001H 04B5H 0001H 001BH
CBLOCKEND 149 1 1205
CFUNCTIONEND 149


	rseg $$LEDStateC2A$main
CFUNCTION 150

_LEDStateC2A	:
CBLOCK 150 1 1212

;;void LEDStateC2A (void){
CLINEA 0000H 0001H 04BCH 0001H 0018H
CBLOCK 150 2 1212

;;	DRIVER_EN_RED_LED 	= 0; // Bit D6  => "DRIVER ENABLED" LED  	(RED)
CLINEA 0000H 0001H 04C5H 0002H 0043H
	mov	r0,	#00h
	st	r0,	NEAR _DRIVER_EN_RED_LED

;;	DRIVER_EN_GREEN_LED	= 1; // Bit D5  => "DRIVER ENABLED" LED 	(GREEN)
CLINEA 0000H 0001H 04C6H 0002H 0045H
	mov	r0,	#01h
	st	r0,	NEAR _DRIVER_EN_GREEN_LED

;;	  SINGLE_LED 		= 0; // Bit D0  => "SINGLE" LED 		(Orange)
CLINEA 0000H 0001H 04C9H 0004H 003AH
	mov	r0,	#00h
	st	r0,	NEAR _SINGLE_LED

;;	  CONTINUOUS_LED 		= 0; // Bit D1  => "CONTINUOUS" LED 	(Orange)
CLINEA 0000H 0001H 04CAH 0004H 0041H
	st	r0,	NEAR _CONTINUOUS_LED

;;	PASS_THRU_GREEN_LED 	= 0; // Bit D3  => "PASS THRU" LED		(GREEN)
CLINEA 0000H 0001H 04CCH 0002H 0041H
	st	r0,	NEAR _PASS_THRU_GREEN_LED

;;	PASS_THRU_RED_LED 	= 0; // Bit D4  => "PASS THRU" LED		(RED)
CLINEA 0000H 0001H 04CDH 0002H 003DH
	st	r0,	NEAR _PASS_THRU_RED_LED

;;	BUFFER_OE_PIN 		= 0; // Bit D11 => Octal Buffer_OE
CLINEA 0000H 0001H 04CFH 0002H 0033H
	st	r0,	NEAR _BUFFER_OE_PIN

;;  Set_LEDs();	// Send 12-Bit Data to BD8377 Driver, Clock & Latch
CLINEA 0000H 0001H 04D1H 0003H 0041H
	b	_Set_LEDs
CBLOCKEND 150 2 1235
CLINEA 0000H 0001H 04D3H 0001H 001CH
CBLOCKEND 150 1 1235
CFUNCTIONEND 150


	rseg $$LEDStateD$main
CFUNCTION 151

_LEDStateD	:
CBLOCK 151 1 1242

;;void LEDStateD (void){
CLINEA 0000H 0001H 04DAH 0001H 0016H
CBLOCK 151 2 1242

;;	STEP_MODE_LED 		= 0; // Bit D2  => "STEP MODE" LED 		(Orange)
CLINEA 0000H 0001H 04DDH 0002H 003EH
	mov	r0,	#00h
	st	r0,	NEAR _STEP_MODE_LED

;;	  FULL_STEP_LED 		= 0; // Bit D7  => "FULL STEP" LED		(YELLOW)
CLINEA 0000H 0001H 04DEH 0004H 003FH
	st	r0,	NEAR _FULL_STEP_LED

;;	  HALF_STEP_A_LED 	= 0; // Bit D8  => "HALF STEP A" LED	(YELLOW)
CLINEA 0000H 0001H 04DFH 0004H 0041H
	st	r0,	NEAR _HALF_STEP_A_LED

;;	  HALF_STEP_B_LED 	= 0; // Bit D9  => "HALF STEP B" LED	(YELLOW)
CLINEA 0000H 0001H 04E0H 0004H 0041H
	st	r0,	NEAR _HALF_STEP_B_LED

;;	  QUARTER_STEP_LED 	= 0; // Bit D10 => "QUARTER STEP" LED	(YELLOW)
CLINEA 0000H 0001H 04E1H 0004H 0043H
	st	r0,	NEAR _QUARTER_STEP_LED

;;	DRIVER_EN_RED_LED 	= 0; // Bit D6  => "DRIVER ENABLED" LED  	(RED)
CLINEA 0000H 0001H 04E3H 0002H 0043H
	st	r0,	NEAR _DRIVER_EN_RED_LED

;;	DRIVER_EN_GREEN_LED	= 0; // Bit D5  => "DRIVER ENABLED" LED 	(GREEN)
CLINEA 0000H 0001H 04E4H 0002H 0045H
	st	r0,	NEAR _DRIVER_EN_GREEN_LED

;;	  SINGLE_LED 		= 0; // Bit D0  => "SINGLE" LED 		(Orange)
CLINEA 0000H 0001H 04E6H 0004H 003AH
	st	r0,	NEAR _SINGLE_LED

;;	  CONTINUOUS_LED 		= 0; // Bit D1  => "CONTINUOUS" LED 	(Orange)
CLINEA 0000H 0001H 04E7H 0004H 0041H
	st	r0,	NEAR _CONTINUOUS_LED

;;	PASS_THRU_GREEN_LED 	= 0; // Bit D3  => "PASS THRU" LED		(GREEN)
CLINEA 0000H 0001H 04E9H 0002H 0041H
	st	r0,	NEAR _PASS_THRU_GREEN_LED

;;	PASS_THRU_RED_LED 	= 1; // Bit D4  => "PASS THRU" LED		(RED)
CLINEA 0000H 0001H 04EAH 0002H 003DH
	mov	r0,	#01h
	st	r0,	NEAR _PASS_THRU_RED_LED

;;	BUFFER_OE_PIN 		= 0; // Bit D11 => Octal Buffer_OE
CLINEA 0000H 0001H 04ECH 0002H 0033H
	mov	r0,	#00h
	st	r0,	NEAR _BUFFER_OE_PIN

;;  Set_LEDs();	// Send 12-Bit Data to BD8377 Driver, Clock & Latch
CLINEA 0000H 0001H 04EEH 0003H 0041H
	b	_Set_LEDs
CBLOCKEND 151 2 1264
CLINEA 0000H 0001H 04F0H 0001H 001AH
CBLOCKEND 151 1 1264
CFUNCTIONEND 151


	rseg $$LEDStateE$main
CFUNCTION 152

_LEDStateE	:
CBLOCK 152 1 1271

;;void LEDStateE (void){
CLINEA 0000H 0001H 04F7H 0001H 0016H
CBLOCK 152 2 1271

;;	STEP_MODE_LED 		= 0; // Bit D2  => "STEP MODE" LED 		(Orange)
CLINEA 0000H 0001H 04FAH 0002H 003EH
	mov	r0,	#00h
	st	r0,	NEAR _STEP_MODE_LED

;;	  FULL_STEP_LED 		= 0; // Bit D7  => "FULL STEP" LED		(YELLOW)
CLINEA 0000H 0001H 04FBH 0004H 003FH
	st	r0,	NEAR _FULL_STEP_LED

;;	  HALF_STEP_A_LED 	= 0; // Bit D8  => "HALF STEP A" LED	(YELLOW)
CLINEA 0000H 0001H 04FCH 0004H 0041H
	st	r0,	NEAR _HALF_STEP_A_LED

;;	  HALF_STEP_B_LED 	= 0; // Bit D9  => "HALF STEP B" LED	(YELLOW)
CLINEA 0000H 0001H 04FDH 0004H 0041H
	st	r0,	NEAR _HALF_STEP_B_LED

;;	  QUARTER_STEP_LED 	= 0; // Bit D10 => "QUARTER STEP" LED	(YELLOW)
CLINEA 0000H 0001H 04FEH 0004H 0043H
	st	r0,	NEAR _QUARTER_STEP_LED

;;	DRIVER_EN_RED_LED 	= 0; // Bit D6  => "DRIVER ENABLED" LED  	(RED)
CLINEA 0000H 0001H 0500H 0002H 0043H
	st	r0,	NEAR _DRIVER_EN_RED_LED

;;	DRIVER_EN_GREEN_LED	= 0; // Bit D5  => "DRIVER ENABLED" LED 	(GREEN)
CLINEA 0000H 0001H 0501H 0002H 0045H
	st	r0,	NEAR _DRIVER_EN_GREEN_LED

;;	  SINGLE_LED 		= 0; // Bit D0  => "SINGLE" LED 		(Orange)
CLINEA 0000H 0001H 0503H 0004H 003AH
	st	r0,	NEAR _SINGLE_LED

;;	  CONTINUOUS_LED 		= 0; // Bit D1  => "CONTINUOUS" LED 	(Orange)
CLINEA 0000H 0001H 0504H 0004H 0041H
	st	r0,	NEAR _CONTINUOUS_LED

;;	PASS_THRU_GREEN_LED 	= 1; // Bit D3  => "PASS THRU" LED		(GREEN)
CLINEA 0000H 0001H 0506H 0002H 0041H
	mov	r0,	#01h
	st	r0,	NEAR _PASS_THRU_GREEN_LED

;;	PASS_THRU_RED_LED 	= 0; // Bit D4  => "PASS THRU" LED		(RED)
CLINEA 0000H 0001H 0507H 0002H 003DH
	mov	r0,	#00h
	st	r0,	NEAR _PASS_THRU_RED_LED

;;	BUFFER_OE_PIN 		= 0; // Bit D11 => Octal Buffer_OE
CLINEA 0000H 0001H 0509H 0002H 0033H
	st	r0,	NEAR _BUFFER_OE_PIN

;;  Set_LEDs();	// Send 12-Bit Data to BD8377 Driver, Clock & Latch
CLINEA 0000H 0001H 050BH 0003H 0041H
	b	_Set_LEDs
CBLOCKEND 152 2 1293
CLINEA 0000H 0001H 050DH 0001H 001AH
CBLOCKEND 152 1 1293
CFUNCTIONEND 152


	rseg $$DisableController$main
CFUNCTION 153

_DisableController	:
CBLOCK 153 1 1301

;;void DisableController(void){
CLINEA 0000H 0001H 0515H 0001H 001DH
CBLOCK 153 2 1301

;;	FULL_STEP_LED 	= 0; // Bit D7  => "FULL STEP" LED		(YELLOW)
CLINEA 0000H 0001H 051FH 0002H 003CH
	mov	r0,	#00h
	st	r0,	NEAR _FULL_STEP_LED

;;	HALF_STEP_A_LED 	= 0; // Bit D8  => "HALF STEP A" LED	(YELLOW)
CLINEA 0000H 0001H 0520H 0002H 003FH
	st	r0,	NEAR _HALF_STEP_A_LED

;;	HALF_STEP_B_LED 	= 0; // Bit D9  => "HALF STEP B" LED	(YELLOW)
CLINEA 0000H 0001H 0521H 0002H 003FH
	st	r0,	NEAR _HALF_STEP_B_LED

;;	QUARTER_STEP_LED 	= 0; // Bit D10 => "QUARTER STEP" LED	(YELLOW)
CLINEA 0000H 0001H 0522H 0002H 0041H
	st	r0,	NEAR _QUARTER_STEP_LED

;;	ClkIn_Stepper_ENABLE = 0;	//Set PIN LOW to DISABLE.
CLINEA 0000H 0001H 0524H 0002H 0034H
	rb	0f258h.4
CBLOCKEND 153 2 1318

;;} //END DisableController Function
CLINEA 0000H 0001H 0526H 0001H 0022H
	rt
CBLOCKEND 153 1 1318
CFUNCTIONEND 153


	rseg $$EnableController$main
CFUNCTION 154

_EnableController	:
CBLOCK 154 1 1325

;;void EnableController(void){
CLINEA 0000H 0001H 052DH 0001H 001CH
CBLOCK 154 2 1325

;;	ClkIn_Stepper_ENABLE = 1;	//Set PIN HIGH to ENABLE.
CLINEA 0000H 0001H 0535H 0002H 0034H
	sb	0f258h.4
CBLOCKEND 154 2 1335

;;} //END EnableController Function
CLINEA 0000H 0001H 0537H 0001H 0021H
	rt
CBLOCKEND 154 1 1335
CFUNCTIONEND 154


	rseg $$ZeroFrequency$main
CFUNCTION 159

_ZeroFrequency	:
CBLOCK 159 1 1342

;;void ZeroFrequency(void){
CLINEA 0000H 0001H 053EH 0001H 0019H
CBLOCK 159 2 1342

;;	Frequency = 0;	//Set Frequency back to zero.
CLINEA 0000H 0001H 0542H 0002H 002DH
	mov	er0,	#0 
	st	er0,	NEAR _Frequency
CBLOCKEND 159 2 1348

;;} //END ZeroFrequency Function
CLINEA 0000H 0001H 0544H 0001H 001EH
	rt
CBLOCKEND 159 1 1348
CFUNCTIONEND 159


	rseg $$ButtonKnobCheck$main
CFUNCTION 155

_ButtonKnobCheck	:
CBLOCK 155 1 1361

;;void ButtonKnobCheck (void){	
CLINEA 0000H 0001H 0551H 0001H 001DH
	push	lr
CBLOCK 155 2 1361
CRET 0000H

;;	if (Encoder_BUTTON == 0) 		// Encoder Button Pressed?			
CLINEA 0000H 0001H 0557H 0002H 0039H
	tb	0f250h.2
	bne	_$L65
CBLOCK 155 3 1368

;;		button_flag = 1;	//Set Flag to indicate Button was pressed
CLINEA 0000H 0001H 0559H 0003H 003CH
	mov	er0,	#1 
	st	er0,	NEAR _button_flag

;;		do 
CLINEA 0000H 0001H 055CH 0003H 0005H
_$L69 :
CBLOCK 155 4 1373

;;			ALL_LEDs_OFF();		// Turns LEDs off at Startup / RESET
CLINEA 0000H 0001H 055EH 0004H 0038H
	bl	_ALL_LEDs_OFF

;;			NOPxxx(); //Extra Debounce time...
CLINEA 0000H 0001H 055FH 0004H 0025H
	bl	_NOPxxx
CBLOCKEND 155 4 1376

;;		}while (Encoder_BUTTON == 0);
CLINEA 0000H 0000H 0560H 0003H 001FH
	tb	0f250h.2
	beq	_$L69
CBLOCKEND 155 3 1378

;;	}//endif "Encoder Button Pressed?" 
CLINEA 0000H 0000H 0562H 0002H 0024H
_$L65 :

;;	if (button_flag == 1)
CLINEA 0000H 0001H 0566H 0002H 0016H
	l	er0,	NEAR _button_flag
	cmp	r0,	#01h
	cmpc	r1,	#00h
	bne	_$L76
CBLOCK 155 5 1383

;;		button_flag = 0; //First, Clear Flag!
CLINEA 0000H 0001H 0568H 0003H 0027H
	mov	er0,	#0 
	st	er0,	NEAR _button_flag

;;		switch (mode) //...and if previous position was ONE, then direction is xxx  
CLINEA 0000H 0001H 056BH 0003H 004EH
	l	er0,	NEAR _mode
CBLOCK 155 6 1388
	cmp	r0,	#0fh
	cmpc	r1,	#00h
	ble	_$M61
	b	_$L77
_$M61 :
	sllc	r1,	#01h
	sll	r0,	#01h
	l	er0,	NEAR _$M59[er0]
	b	er0

;;		}//End "mode" Switch
_$L76 :
CBLOCKEND 155 5 1448

;;	EncoderDirection();	//direction; //0=NO CHANGE, 1=CW, 2=CCW, 3=Unknown
CLINEA 0000H 0001H 05ACH 0002H 0047H
	bl	_EncoderDirection

;;	if (direction != 0)
CLINEA 0000H 0001H 05AFH 0002H 0014H
	l	er0,	NEAR _direction
	beq	_$L99
CBLOCK 155 7 1456

;;		switch (mode) //...and if previous position was ONE, then direction is xxx  
CLINEA 0000H 0001H 05B2H 0003H 004EH
	l	er0,	NEAR _mode
CBLOCK 155 8 1459
	cmp	r0,	#0fh
	cmpc	r1,	#00h
	ble	_$M62
	b	_$L100
_$M62 :
	sllc	r1,	#01h
	sll	r0,	#01h
	l	er0,	NEAR _$M60[er0]
	b	er0

;;		}//End "mode" then "directiion" Switch	
_$L99 :
CBLOCKEND 155 7 1714
CBLOCKEND 155 2 1717

;;} //END ButtonKnobCheck  Function
CLINEA 0000H 0001H 06B5H 0001H 0021H
	pop	pc

;;		case 0:
CLINEA 0000H 0001H 056DH 0003H 0009H
_$S78 :

;;			DisableController(); //DISABLE & 
CLINEA 0000H 0001H 056EH 0004H 0024H
	bl	_DisableController

;;			mode = 1;		   //Default to STEP MODE (#1)	
CLINEA 0000H 0001H 056FH 0004H 002DH
	mov	er0,	#1 
	st	er0,	NEAR _mode

;;			break;
CLINEA 0000H 0001H 0570H 0004H 0009H
	bal	_$L76

;;		case 1:
CLINEA 0000H 0001H 0571H 0003H 0009H
_$S79 :

;;			mode = 14;		//Jump down to PASS THRU RED (#14)
CLINEA 0000H 0001H 0572H 0004H 0031H
	mov	er0,	#14
	st	er0,	NEAR _mode

;;			break;
CLINEA 0000H 0001H 0573H 0004H 0009H
	bal	_$L76

;;		case 2:
CLINEA 0000H 0001H 0574H 0003H 0009H
_$S80 :

;;			mode = 6;		//Move on to Driver ENABLE-RED (#6)
CLINEA 0000H 0001H 0575H 0004H 0031H
	mov	er0,	#6 
	st	er0,	NEAR _mode

;;			break;
CLINEA 0000H 0001H 0576H 0004H 0009H
	bal	_$L76

;;		case 3:
CLINEA 0000H 0001H 0577H 0003H 0009H
_$S81 :

;;			mode = 6;		//Move on to Driver ENABLE-RED (#6)		
CLINEA 0000H 0001H 0578H 0004H 0033H
	mov	er0,	#6 
	st	er0,	NEAR _mode

;;			break;
CLINEA 0000H 0001H 0579H 0004H 0009H
	bal	_$L76

;;		case 4:
CLINEA 0000H 0001H 057AH 0003H 0009H
_$S82 :

;;			mode = 6;		//Move on to Driver ENABLE-RED (#6)
CLINEA 0000H 0001H 057BH 0004H 0031H
	mov	er0,	#6 
	st	er0,	NEAR _mode

;;			break;
CLINEA 0000H 0001H 057CH 0004H 0009H
	bal	_$L76

;;		case 5:
CLINEA 0000H 0001H 057DH 0003H 0009H
_$S83 :

;;			mode = 6;		//Move on to Driver ENABLE-RED (#6)
CLINEA 0000H 0001H 057EH 0004H 0031H
	mov	er0,	#6 
	st	er0,	NEAR _mode

;;			break;
CLINEA 0000H 0001H 057FH 0004H 0009H
	bal	_$L76

;;		case 6:
CLINEA 0000H 0001H 0580H 0003H 0009H
_$S84 :

;;			DisableController(); //DISABLE & 
CLINEA 0000H 0001H 0581H 0004H 0024H
	bl	_DisableController

;;			mode = 14;		   //Move to PASS THRU - RED (#14)
CLINEA 0000H 0001H 0582H 0004H 0031H
	mov	er0,	#14
	st	er0,	NEAR _mode

;;			break;
CLINEA 0000H 0001H 0583H 0004H 0009H
	bal	_$L76

;;		case 7:	
CLINEA 0000H 0001H 0584H 0003H 000AH
_$S85 :

;;			mode = 8;		//Move to SINGLE STEP MODE (#8)
CLINEA 0000H 0001H 0585H 0004H 002DH
	mov	er0,	#8 
	st	er0,	NEAR _mode

;;			break;
CLINEA 0000H 0001H 0586H 0004H 0009H
	bal	_$L76

;;		case 8:
CLINEA 0000H 0001H 0587H 0003H 0009H
_$S86 :

;;			mode = 11;		//Go onto CONTINUOUS Mode (#11)
CLINEA 0000H 0001H 0588H 0004H 002EH
	mov	er0,	#11
	st	er0,	NEAR _mode

;;			break;
CLINEA 0000H 0001H 0589H 0004H 0009H
	bal	_$L76

;;		case 9:
CLINEA 0000H 0001H 058AH 0003H 0009H
_$S87 :

;;			mode = 11;		//Go onto CONTINUOUS Mode (#11)
CLINEA 0000H 0001H 058BH 0004H 002EH
	mov	er0,	#11
	st	er0,	NEAR _mode

;;			break;
CLINEA 0000H 0001H 058CH 0004H 0009H
	bal	_$L76

;;		case 10:
CLINEA 0000H 0001H 058DH 0003H 000AH
_$S88 :

;;			mode = 11;		//Go onto CONTINUOUS Mode (#11)
CLINEA 0000H 0001H 058EH 0004H 002EH
	mov	er0,	#11
	st	er0,	NEAR _mode

;;			break;
CLINEA 0000H 0001H 058FH 0004H 0009H
	bal	_$L76

;;		case 11:
CLINEA 0000H 0001H 0590H 0003H 000AH
_$S89 :

;;			mode = 7;		//Return to DRIVER-ENABLE-GREEN (#7)
CLINEA 0000H 0001H 0591H 0004H 0032H
	mov	er0,	#7 
	st	er0,	NEAR _mode

;;			break;
CLINEA 0000H 0001H 0592H 0004H 0009H
	b	_$L76

;;		case 12:
CLINEA 0000H 0001H 0593H 0003H 000AH
_$S90 :

;; 			DisableController(); //DISABLE & 
CLINEA 0000H 0001H 0594H 0005H 0025H
	bl	_DisableController

;;			ZeroFrequency();	   //Zero the Frequency & Return to Continuous Mode (#11)
CLINEA 0000H 0001H 0595H 0004H 004DH
	bl	_ZeroFrequency

;;			mode = 11;
CLINEA 0000H 0001H 0596H 0004H 000DH
	mov	er0,	#11
	st	er0,	NEAR _mode

;;			break;
CLINEA 0000H 0001H 0597H 0004H 0009H
	b	_$L76

;;		case 13:
CLINEA 0000H 0001H 0598H 0003H 000AH
_$S91 :

;;			DisableController(); //DISABLE & 
CLINEA 0000H 0001H 0599H 0004H 0024H
	bl	_DisableController

;;			ZeroFrequency();	   //Zero the Frequency & Return to Continuous Mode (#11)
CLINEA 0000H 0001H 059AH 0004H 004DH
	bl	_ZeroFrequency

;;			mode = 11;	
CLINEA 0000H 0001H 059BH 0004H 000EH
	mov	er0,	#11
	st	er0,	NEAR _mode

;;			break;
CLINEA 0000H 0001H 059CH 0004H 0009H
	b	_$L76

;;		case 14:
CLINEA 0000H 0001H 059DH 0003H 000AH
_$S92 :

;;			mode = 1;		//Return to STEP MODE (#1)
CLINEA 0000H 0001H 059EH 0004H 0028H
	mov	er0,	#1 
	st	er0,	NEAR _mode

;;			break;
CLINEA 0000H 0001H 059FH 0004H 0009H
	b	_$L76

;;		case 15:
CLINEA 0000H 0001H 05A0H 0003H 000AH
_$S93 :

;;			mode = 14;		//Return to PASS THRU RED (#14)
CLINEA 0000H 0001H 05A1H 0004H 002EH
	mov	er0,	#14
	st	er0,	NEAR _mode

;;			break;
CLINEA 0000H 0001H 05A2H 0004H 0009H
	b	_$L76

;;		default:	
CLINEA 0000H 0001H 05A3H 0003H 000BH
_$L77 :

;;			mode = 1;		//Default to STEP MODE (#1)
CLINEA 0000H 0001H 05A4H 0004H 0029H
	mov	er0,	#1 
	st	er0,	NEAR _mode

;;			break;
CLINEA 0000H 0001H 05A5H 0004H 0009H
	b	_$L76
CBLOCKEND 155 6 1446

;;		case 0:			//No Action at "0"
CLINEA 0000H 0001H 05B4H 0003H 001EH
_$S101 :

;;			break;
CLINEA 0000H 0001H 05B5H 0004H 0009H
	b	_$L99

;;		case 1:
CLINEA 0000H 0001H 05B6H 0003H 0009H
_$S102 :
CBLOCK 155 9 1464

;;			switch (direction ) 
CLINEA 0000H 0001H 05B7H 0004H 0017H
	l	r0,	NEAR _direction+01h
	beq	_$M63
	b	_$L99
_$M63 :
	l	r0,	NEAR _direction
	cmp	r0,	#01h
	bne	_$M64
	b	_$L108
_$M64 :

;;			switch (direction ) 
CLINEA 0000H 0000H 05B7H 0004H 0017H
	cmp	r0,	#02h
	bne	_$M65
	b	_$L113
_$M65 :

;;			}//End "direction" Switch
CLINEA 0000H 0000H 05CFH 0004H 001CH
_$L106 :

;;			break;
CLINEA 0000H 0001H 05D0H 0004H 0009H
	b	_$L99

;;		case 2:
CLINEA 0000H 0001H 05D2H 0003H 0009H
_$S118 :
CBLOCK 155 14 1492

;;			switch (direction ) 
CLINEA 0000H 0001H 05D3H 0004H 0017H
	l	r0,	NEAR _direction+01h
	beq	_$M66
	b	_$L99
_$M66 :
	l	r0,	NEAR _direction
	cmp	r0,	#01h
	bne	_$M67
	b	_$L124
_$M67 :

;;			switch (direction ) 
CLINEA 0000H 0000H 05D3H 0004H 0017H
	cmp	r0,	#02h
	bne	_$M68
	b	_$L129
_$M68 :

;;			}//End "direction" Switch		
CLINEA 0000H 0000H 05EBH 0004H 001EH
_$L122 :

;;			break;
CLINEA 0000H 0001H 05ECH 0004H 0009H
	b	_$L99

;;		case 3:						//CAN SIMPLIFY this particular case...
CLINEA 0000H 0001H 05EEH 0003H 0035H
_$S134 :
CBLOCK 155 19 1520

;;			switch (direction ) 
CLINEA 0000H 0001H 05EFH 0004H 0017H
	l	r0,	NEAR _direction+01h
	beq	_$M69
	b	_$L99
_$M69 :
	l	r0,	NEAR _direction
	cmp	r0,	#01h
	bne	_$M70
	b	_$L140
_$M70 :

;;			switch (direction ) 
CLINEA 0000H 0000H 05EFH 0004H 0017H
	cmp	r0,	#02h
	bne	_$M71
	b	_$L145
_$M71 :

;;			}//End "direction" Switch			
CLINEA 0000H 0000H 0607H 0004H 001FH
_$L138 :

;;			break;
CLINEA 0000H 0001H 0608H 0004H 0009H
	b	_$L99

;;		case 4:						//CAN SIMPLIFY this particular case...
CLINEA 0000H 0001H 060AH 0003H 0035H
_$S150 :
CBLOCK 155 24 1548

;;			switch (direction ) 
CLINEA 0000H 0001H 060BH 0004H 0017H
	l	r0,	NEAR _direction+01h
	beq	_$M72
	b	_$L99
_$M72 :
	l	r0,	NEAR _direction
	cmp	r0,	#01h
	bne	_$M73
	b	_$L156
_$M73 :

;;			switch (direction ) 
CLINEA 0000H 0000H 060BH 0004H 0017H
	cmp	r0,	#02h
	bne	_$M74
	b	_$L161
_$M74 :

;;			}//End "direction" Switch			
CLINEA 0000H 0000H 0623H 0004H 001FH
_$L154 :

;;			break;
CLINEA 0000H 0001H 0624H 0004H 0009H
	b	_$L99

;;		case 5:
CLINEA 0000H 0001H 0626H 0003H 0009H
_$S166 :
CBLOCK 155 29 1576

;;			switch (direction ) 
CLINEA 0000H 0001H 0627H 0004H 0017H
	l	r0,	NEAR _direction+01h
	beq	_$M75
	b	_$L99
_$M75 :
	l	r0,	NEAR _direction
	cmp	r0,	#01h
	bne	_$M76
	b	_$L172
_$M76 :

;;			switch (direction ) 
CLINEA 0000H 0000H 0627H 0004H 0017H
	cmp	r0,	#02h
	bne	_$M77
	b	_$L177
_$M77 :

;;			}//End "direction" Switch			
CLINEA 0000H 0000H 063FH 0004H 001FH
_$L170 :

;;			break;
CLINEA 0000H 0001H 0640H 0004H 0009H
	b	_$L99

;;		case 6:
CLINEA 0000H 0001H 0642H 0003H 0009H
_$S182 :

;;			mode = 7;	//Rotation in either direction moves to Driver-Enable-GREEN (#7)
CLINEA 0000H 0001H 0643H 0004H 004DH
	mov	er0,	#7 
	st	er0,	NEAR _mode

;;			break;
CLINEA 0000H 0001H 0644H 0004H 0009H
	b	_$L99

;;		case 7:	
CLINEA 0000H 0001H 0646H 0003H 000AH
_$S183 :

;;			mode = 6;	//Rotation in either direction moves back to Driver-Enable-RED (#6)
CLINEA 0000H 0001H 0647H 0004H 0050H
	mov	er0,	#6 
	st	er0,	NEAR _mode

;;			break;
CLINEA 0000H 0001H 0648H 0004H 0009H
	b	_$L99

;;		case 8:		//SINGLE-STEP MODE...
CLINEA 0000H 0001H 064AH 0003H 0020H
_$S184 :

;;			if (direction == 1){
CLINEA 0000H 0001H 064CH 0004H 0017H
	l	er0,	NEAR _direction
	cmp	r0,	#01h
	cmpc	r1,	#00h
	bne	_$L185
CBLOCK 155 34 1612

;;				StepCW();		//Step CW 1-Step
CLINEA 0000H 0001H 064DH 0005H 001FH
	bl	_StepCW
CBLOCKEND 155 34 1614

;;			}
CLINEA 0000H 0000H 064EH 0004H 0004H
_$L185 :

;;			if (direction == 2){
CLINEA 0000H 0001H 064FH 0004H 0017H
	l	er0,	NEAR _direction
	cmp	r0,	#02h
	cmpc	r1,	#00h
	beq	_$M78
	b	_$L99
_$M78 :
CBLOCK 155 35 1615

;;				StepCCW();		//Step CCW 1-Step
CLINEA 0000H 0001H 0650H 0005H 0021H
	bl	_StepCCW
CBLOCKEND 155 35 1617

;;			break;
CLINEA 0000H 0001H 0653H 0004H 0009H
	b	_$L99

;;		case 9: 	//CASE 9 & 10 REDUNDANT - NEVER GETS HERE...
CLINEA 0000H 0001H 0655H 0003H 0037H
_$S189 :
CBLOCK 155 36 1623

;;			switch (direction ) 
CLINEA 0000H 0001H 0656H 0004H 0017H
	l	r0,	NEAR _direction+01h
	beq	_$M79
	b	_$L99
_$M79 :
	l	r0,	NEAR _direction
	cmp	r0,	#01h

;;			}//End "direction" Switch			
CLINEA 0000H 0000H 065EH 0004H 001FH
_$L193 :

;;			break;
CLINEA 0000H 0001H 065FH 0004H 0009H
	b	_$L99

;;		case 10:	//CASE 9 & 10 REDUNDANT - NEVER GETS HERE...
CLINEA 0000H 0001H 0661H 0003H 0037H
_$S197 :
CBLOCK 155 37 1635

;;			switch (direction ) 
CLINEA 0000H 0001H 0662H 0004H 0017H
	l	r0,	NEAR _direction+01h
	beq	_$M80
	b	_$L99
_$M80 :
	l	r0,	NEAR _direction
	cmp	r0,	#01h

;;			}//End "direction" Switch			
CLINEA 0000H 0000H 066AH 0004H 001FH
_$L201 :

;;			break;
CLINEA 0000H 0001H 066BH 0004H 0009H
	b	_$L99

;;		case 11:
CLINEA 0000H 0001H 066DH 0003H 000AH
_$S205 :
CBLOCK 155 38 1647

;;			switch (direction ) 
CLINEA 0000H 0001H 066EH 0004H 0017H
	l	r0,	NEAR _direction+01h
	beq	_$M81
	b	_$L99
_$M81 :
	l	r0,	NEAR _direction
	cmp	r0,	#01h
	bne	_$M82
	b	_$L211
_$M82 :

;;			switch (direction ) 
CLINEA 0000H 0000H 066EH 0004H 0017H
	cmp	r0,	#02h
	bne	_$M83
	b	_$L212
_$M83 :

;;			}//End "direction" Switch			
CLINEA 0000H 0000H 067AH 0004H 001FH
_$L209 :

;;			break;
CLINEA 0000H 0001H 067BH 0004H 0009H
	b	_$L99

;;		case 12:	//Never gets here...
CLINEA 0000H 0001H 067EH 0003H 001FH
_$S213 :
CBLOCK 155 39 1664

;;			switch (direction ) 
CLINEA 0000H 0001H 067FH 0004H 0017H
	l	r0,	NEAR _direction+01h
	beq	_$M84
	b	_$L99
_$M84 :
	l	r0,	NEAR _direction
	cmp	r0,	#01h
	bne	_$M85
	b	_$L219
_$M85 :

;;			switch (direction ) 
CLINEA 0000H 0000H 067FH 0004H 0017H
	cmp	r0,	#02h
	bne	_$M86
	b	_$L220
_$M86 :

;;			}//End "direction" Switch			
CLINEA 0000H 0000H 0687H 0004H 001FH
_$L217 :

;;			break;
CLINEA 0000H 0001H 0688H 0004H 0009H
	b	_$L99

;;		case 13:	//Never gets here...
CLINEA 0000H 0001H 068AH 0003H 001FH
_$S221 :
CBLOCK 155 40 1676

;;			switch (direction ) 
CLINEA 0000H 0001H 068BH 0004H 0017H
	l	r0,	NEAR _direction+01h
	beq	_$M87
	b	_$L99
_$M87 :
	l	r0,	NEAR _direction
	cmp	r0,	#01h
	bne	_$M88
	b	_$L227
_$M88 :

;;			switch (direction ) 
CLINEA 0000H 0000H 068BH 0004H 0017H
	cmp	r0,	#02h
	bne	_$M89
	b	_$L228
_$M89 :

;;			}//End "direction" Switch			
CLINEA 0000H 0000H 0693H 0004H 001FH
_$L225 :

;;			break;
CLINEA 0000H 0001H 0694H 0004H 0009H
	b	_$L99

;;		case 14:
CLINEA 0000H 0001H 0696H 0003H 000AH
_$S229 :
CBLOCK 155 41 1688

;;			switch (direction ) 
CLINEA 0000H 0001H 0697H 0004H 0017H
	l	r0,	NEAR _direction+01h
	beq	_$M90
	b	_$L99
_$M90 :
	l	r0,	NEAR _direction
	cmp	r0,	#01h
	bne	_$M91
	b	_$L235
_$M91 :

;;			switch (direction ) 
CLINEA 0000H 0000H 0697H 0004H 0017H
	cmp	r0,	#02h
	bne	_$M92
	b	_$L236
_$M92 :

;;			}//End "direction" Switch			
CLINEA 0000H 0000H 069FH 0004H 001FH
_$L233 :

;;			break;
CLINEA 0000H 0001H 06A0H 0004H 0009H
	b	_$L99

;;		case 15:
CLINEA 0000H 0001H 06A2H 0003H 000AH
_$S237 :
CBLOCK 155 42 1700

;;			switch (direction ) 
CLINEA 0000H 0001H 06A3H 0004H 0017H
	l	r0,	NEAR _direction+01h
	beq	_$M93
	b	_$L99
_$M93 :
	l	r0,	NEAR _direction
	cmp	r0,	#01h
	bne	_$M94
	b	_$L243
_$M94 :

;;			switch (direction ) 
CLINEA 0000H 0000H 06A3H 0004H 0017H
	cmp	r0,	#02h
	bne	_$M95
	b	_$L244
_$M95 :

;;			}//End "direction" Switch			
CLINEA 0000H 0000H 06ABH 0004H 001FH
_$L241 :

;;			break;
CLINEA 0000H 0001H 06ACH 0004H 0009H
	b	_$L99

;;		default:	
CLINEA 0000H 0001H 06AEH 0003H 000BH
_$L100 :

;;			mode =1; //Return to 1 when lost...
CLINEA 0000H 0001H 06AFH 0004H 0026H
	mov	er0,	#1 
	st	er0,	NEAR _mode

;;			break;
CLINEA 0000H 0001H 06B0H 0004H 0009H
	b	_$L99
CBLOCKEND 155 8 1713

;;			case 1:		//CW Rotation...
CLINEA 0000H 0001H 05B9H 0004H 001CH
_$L108 :

;;				mode++;
CLINEA 0000H 0000H 05BAH 0005H 000BH
	l	er0,	NEAR _mode
	add	er0,	#1 
	st	er0,	NEAR _mode

;;			if (mode > 5)
CLINEA 0000H 0001H 05BBH 0004H 0010H
	cmp	r0,	#05h
	cmpc	r1,	#00h
	ble	_$L109
CBLOCK 155 10 1468

;;				mode = 2;
CLINEA 0000H 0001H 05BDH 0005H 000DH
	mov	er0,	#2 
	st	er0,	NEAR _mode
CBLOCKEND 155 10 1470

;;			}
CLINEA 0000H 0000H 05BEH 0004H 0004H
_$L109 :

;;			if (mode < 2)
CLINEA 0000H 0001H 05BFH 0004H 0010H
	cmp	r0,	#02h
	cmpc	r1,	#00h
	blt	_$M96
	b	_$L106
_$M96 :
CBLOCK 155 11 1472

;;			 	mode = 5;
CLINEA 0000H 0001H 05C1H 0006H 000EH
	mov	er0,	#5 
	st	er0,	NEAR _mode
CBLOCKEND 155 11 1474

;;				break;
CLINEA 0000H 0001H 05C3H 0005H 000AH
	b	_$L106

;;			case 2:		//CCW Rotation...
CLINEA 0000H 0001H 05C4H 0004H 001DH
_$L113 :

;;				mode--;
CLINEA 0000H 0000H 05C5H 0005H 000BH
	l	er0,	NEAR _mode
	add	er0,	#-1
	st	er0,	NEAR _mode

;;			if (mode > 5)
CLINEA 0000H 0001H 05C6H 0004H 0010H
	cmp	r0,	#05h
	cmpc	r1,	#00h
	ble	_$L114
CBLOCK 155 12 1479

;;				mode = 2;
CLINEA 0000H 0001H 05C8H 0005H 000DH
	mov	er0,	#2 
	st	er0,	NEAR _mode
CBLOCKEND 155 12 1481

;;			}
CLINEA 0000H 0000H 05C9H 0004H 0004H
_$L114 :

;;			if (mode < 2)
CLINEA 0000H 0001H 05CAH 0004H 0010H
	cmp	r0,	#02h
	cmpc	r1,	#00h
	blt	_$M97
	b	_$L106
_$M97 :
CBLOCK 155 13 1483

;;			 	mode = 5;
CLINEA 0000H 0001H 05CCH 0006H 000EH
	mov	er0,	#5 
	st	er0,	NEAR _mode
CBLOCKEND 155 13 1485

;;			break;
CLINEA 0000H 0001H 05CEH 0004H 0009H
	b	_$L106
CBLOCKEND 155 9 1487

;;			case 1:		//CW Rotation...
CLINEA 0000H 0001H 05D5H 0004H 001CH
_$L124 :

;;				mode++;
CLINEA 0000H 0000H 05D6H 0005H 000BH
	l	er0,	NEAR _mode
	add	er0,	#1 
	st	er0,	NEAR _mode

;;			if (mode > 5)
CLINEA 0000H 0001H 05D7H 0004H 0010H
	cmp	r0,	#05h
	cmpc	r1,	#00h
	ble	_$L125
CBLOCK 155 15 1496

;;				mode = 2;
CLINEA 0000H 0001H 05D9H 0005H 000DH
	mov	er0,	#2 
	st	er0,	NEAR _mode
CBLOCKEND 155 15 1498

;;			}
CLINEA 0000H 0000H 05DAH 0004H 0004H
_$L125 :

;;			if (mode < 2)
CLINEA 0000H 0001H 05DBH 0004H 0010H
	cmp	r0,	#02h
	cmpc	r1,	#00h
	blt	_$M98
	b	_$L122
_$M98 :
CBLOCK 155 16 1500

;;			 	mode = 5;
CLINEA 0000H 0001H 05DDH 0006H 000EH
	mov	er0,	#5 
	st	er0,	NEAR _mode
CBLOCKEND 155 16 1502

;;				break;
CLINEA 0000H 0001H 05DFH 0005H 000AH
	b	_$L122

;;			case 2:		//CCW Rotation...
CLINEA 0000H 0001H 05E0H 0004H 001DH
_$L129 :

;;				mode--;
CLINEA 0000H 0000H 05E1H 0005H 000BH
	l	er0,	NEAR _mode
	add	er0,	#-1
	st	er0,	NEAR _mode

;;			if (mode > 5)
CLINEA 0000H 0001H 05E2H 0004H 0010H
	cmp	r0,	#05h
	cmpc	r1,	#00h
	ble	_$L130
CBLOCK 155 17 1507

;;				mode = 2;
CLINEA 0000H 0001H 05E4H 0005H 000DH
	mov	er0,	#2 
	st	er0,	NEAR _mode
CBLOCKEND 155 17 1509

;;			}
CLINEA 0000H 0000H 05E5H 0004H 0004H
_$L130 :

;;			if (mode < 2)
CLINEA 0000H 0001H 05E6H 0004H 0010H
	cmp	r0,	#02h
	cmpc	r1,	#00h
	blt	_$M99
	b	_$L122
_$M99 :
CBLOCK 155 18 1511

;;			 	mode = 5;
CLINEA 0000H 0001H 05E8H 0006H 000EH
	mov	er0,	#5 
	st	er0,	NEAR _mode
CBLOCKEND 155 18 1513

;;			break;
CLINEA 0000H 0001H 05EAH 0004H 0009H
	b	_$L122
CBLOCKEND 155 14 1515

;;			case 1:		//CW Rotation...
CLINEA 0000H 0001H 05F1H 0004H 001CH
_$L140 :

;;				mode++;
CLINEA 0000H 0000H 05F2H 0005H 000BH
	l	er0,	NEAR _mode
	add	er0,	#1 
	st	er0,	NEAR _mode

;;			if (mode > 5)
CLINEA 0000H 0001H 05F3H 0004H 0010H
	cmp	r0,	#05h
	cmpc	r1,	#00h
	ble	_$L141
CBLOCK 155 20 1524

;;				mode = 2;
CLINEA 0000H 0001H 05F5H 0005H 000DH
	mov	er0,	#2 
	st	er0,	NEAR _mode
CBLOCKEND 155 20 1526

;;			}
CLINEA 0000H 0000H 05F6H 0004H 0004H
_$L141 :

;;			if (mode < 2)
CLINEA 0000H 0001H 05F7H 0004H 0010H
	cmp	r0,	#02h
	cmpc	r1,	#00h
	blt	_$M100
	b	_$L138
_$M100 :
CBLOCK 155 21 1528

;;			 	mode = 5;
CLINEA 0000H 0001H 05F9H 0006H 000EH
	mov	er0,	#5 
	st	er0,	NEAR _mode
CBLOCKEND 155 21 1530

;;				break;
CLINEA 0000H 0001H 05FBH 0005H 000AH
	b	_$L138

;;			case 2:		//CCW Rotation...
CLINEA 0000H 0001H 05FCH 0004H 001DH
_$L145 :

;;				mode--;
CLINEA 0000H 0000H 05FDH 0005H 000BH
	l	er0,	NEAR _mode
	add	er0,	#-1
	st	er0,	NEAR _mode

;;			if (mode > 5)
CLINEA 0000H 0001H 05FEH 0004H 0010H
	cmp	r0,	#05h
	cmpc	r1,	#00h
	ble	_$L146
CBLOCK 155 22 1535

;;				mode = 2;
CLINEA 0000H 0001H 0600H 0005H 000DH
	mov	er0,	#2 
	st	er0,	NEAR _mode
CBLOCKEND 155 22 1537

;;			}
CLINEA 0000H 0000H 0601H 0004H 0004H
_$L146 :

;;			if (mode < 2)
CLINEA 0000H 0001H 0602H 0004H 0010H
	cmp	r0,	#02h
	cmpc	r1,	#00h
	blt	_$M101
	b	_$L138
_$M101 :
CBLOCK 155 23 1539

;;			 	mode = 5;
CLINEA 0000H 0001H 0604H 0006H 000EH
	mov	er0,	#5 
	st	er0,	NEAR _mode
CBLOCKEND 155 23 1541

;;			break;
CLINEA 0000H 0001H 0606H 0004H 0009H
	b	_$L138
CBLOCKEND 155 19 1543

;;			case 1:		//CW Rotation...
CLINEA 0000H 0001H 060DH 0004H 001CH
_$L156 :

;;				mode++;
CLINEA 0000H 0000H 060EH 0005H 000BH
	l	er0,	NEAR _mode
	add	er0,	#1 
	st	er0,	NEAR _mode

;;			if (mode > 5)
CLINEA 0000H 0001H 060FH 0004H 0010H
	cmp	r0,	#05h
	cmpc	r1,	#00h
	ble	_$L157
CBLOCK 155 25 1552

;;				mode = 2;
CLINEA 0000H 0001H 0611H 0005H 000DH
	mov	er0,	#2 
	st	er0,	NEAR _mode
CBLOCKEND 155 25 1554

;;			}
CLINEA 0000H 0000H 0612H 0004H 0004H
_$L157 :

;;			if (mode < 2)
CLINEA 0000H 0001H 0613H 0004H 0010H
	cmp	r0,	#02h
	cmpc	r1,	#00h
	blt	_$M102
	b	_$L154
_$M102 :
CBLOCK 155 26 1556

;;			 	mode = 5;
CLINEA 0000H 0001H 0615H 0006H 000EH
	mov	er0,	#5 
	st	er0,	NEAR _mode
CBLOCKEND 155 26 1558

;;				break;
CLINEA 0000H 0001H 0617H 0005H 000AH
	b	_$L154

;;			case 2:		//CCW Rotation...
CLINEA 0000H 0001H 0618H 0004H 001DH
_$L161 :

;;				mode--;
CLINEA 0000H 0000H 0619H 0005H 000BH
	l	er0,	NEAR _mode
	add	er0,	#-1
	st	er0,	NEAR _mode

;;			if (mode > 5)
CLINEA 0000H 0001H 061AH 0004H 0010H
	cmp	r0,	#05h
	cmpc	r1,	#00h
	ble	_$L162
CBLOCK 155 27 1563

;;				mode = 2;
CLINEA 0000H 0001H 061CH 0005H 000DH
	mov	er0,	#2 
	st	er0,	NEAR _mode
CBLOCKEND 155 27 1565

;;			}
CLINEA 0000H 0000H 061DH 0004H 0004H
_$L162 :

;;			if (mode < 2)
CLINEA 0000H 0001H 061EH 0004H 0010H
	cmp	r0,	#02h
	cmpc	r1,	#00h
	blt	_$M103
	b	_$L154
_$M103 :
CBLOCK 155 28 1567

;;			 	mode = 5;
CLINEA 0000H 0001H 0620H 0006H 000EH
	mov	er0,	#5 
	st	er0,	NEAR _mode
CBLOCKEND 155 28 1569

;;			break;
CLINEA 0000H 0001H 0622H 0004H 0009H
	b	_$L154
CBLOCKEND 155 24 1571

;;			case 1:		//CW Rotation...
CLINEA 0000H 0001H 0629H 0004H 001CH
_$L172 :

;;				mode++;
CLINEA 0000H 0000H 062AH 0005H 000BH
	l	er0,	NEAR _mode
	add	er0,	#1 
	st	er0,	NEAR _mode

;;			if (mode > 5)
CLINEA 0000H 0001H 062BH 0004H 0010H
	cmp	r0,	#05h
	cmpc	r1,	#00h
	ble	_$L173
CBLOCK 155 30 1580

;;				mode = 2;
CLINEA 0000H 0001H 062DH 0005H 000DH
	mov	er0,	#2 
	st	er0,	NEAR _mode
CBLOCKEND 155 30 1582

;;			}
CLINEA 0000H 0000H 062EH 0004H 0004H
_$L173 :

;;			if (mode < 2)
CLINEA 0000H 0001H 062FH 0004H 0010H
	cmp	r0,	#02h
	cmpc	r1,	#00h
	blt	_$M104
	b	_$L170
_$M104 :
CBLOCK 155 31 1584

;;			 	mode = 5;
CLINEA 0000H 0001H 0631H 0006H 000EH
	mov	er0,	#5 
	st	er0,	NEAR _mode
CBLOCKEND 155 31 1586

;;				break;
CLINEA 0000H 0001H 0633H 0005H 000AH
	b	_$L170

;;			case 2:		//CCW Rotation...
CLINEA 0000H 0001H 0634H 0004H 001DH
_$L177 :

;;				mode--;
CLINEA 0000H 0000H 0635H 0005H 000BH
	l	er0,	NEAR _mode
	add	er0,	#-1
	st	er0,	NEAR _mode

;;			if (mode > 5)
CLINEA 0000H 0001H 0636H 0004H 0010H
	cmp	r0,	#05h
	cmpc	r1,	#00h
	ble	_$L178
CBLOCK 155 32 1591

;;				mode = 2;
CLINEA 0000H 0001H 0638H 0005H 000DH
	mov	er0,	#2 
	st	er0,	NEAR _mode
CBLOCKEND 155 32 1593

;;			}
CLINEA 0000H 0000H 0639H 0004H 0004H
_$L178 :

;;			if (mode < 2)
CLINEA 0000H 0001H 063AH 0004H 0010H
	cmp	r0,	#02h
	cmpc	r1,	#00h
	blt	_$M105
	b	_$L170
_$M105 :
CBLOCK 155 33 1595

;;			 	mode = 5;
CLINEA 0000H 0001H 063CH 0006H 000EH
	mov	er0,	#5 
	st	er0,	NEAR _mode
CBLOCKEND 155 33 1597

;;			break;
CLINEA 0000H 0001H 063EH 0004H 0009H
	b	_$L170
CBLOCKEND 155 29 1599

;;				break;
CLINEA 0000H 0001H 065DH 0005H 000AH
CBLOCKEND 155 36 1630

;;				break;
CLINEA 0000H 0001H 0669H 0005H 000AH
CBLOCKEND 155 37 1642

;;			case 1:		//CW Rotation...
CLINEA 0000H 0001H 0670H 0004H 001CH
_$L211 :

;;				ContinuousMode();
CLINEA 0000H 0001H 0672H 0005H 0015H
	bl	_ContinuousMode

;;				break;
CLINEA 0000H 0001H 0674H 0005H 000AH
	b	_$L209

;;			case 2:		//CCW Rotation...
CLINEA 0000H 0001H 0675H 0004H 001DH
_$L212 :

;;				ContinuousMode();
CLINEA 0000H 0001H 0677H 0005H 0015H
	bl	_ContinuousMode

;;				break;
CLINEA 0000H 0001H 0679H 0005H 000AH
	b	_$L209
CBLOCKEND 155 38 1658

;;			case 1:		//CW Rotation...increments Frequency
CLINEA 0000H 0001H 0681H 0004H 0030H
_$L219 :

;;				mode = 12;
CLINEA 0000H 0001H 0682H 0005H 000EH
	mov	er0,	#12
	st	er0,	NEAR _mode

;;				break;
CLINEA 0000H 0001H 0683H 0005H 000AH
	b	_$L217

;;			case 2:		//CCW Rotation...decrements Frequency
CLINEA 0000H 0001H 0684H 0004H 0031H
_$L220 :

;;				mode = 13;
CLINEA 0000H 0001H 0685H 0005H 000EH
	mov	er0,	#13
	st	er0,	NEAR _mode

;;				break;
CLINEA 0000H 0001H 0686H 0005H 000AH
	b	_$L217
CBLOCKEND 155 39 1671

;;			case 1:		//CW Rotation...increments Frequency
CLINEA 0000H 0001H 068DH 0004H 0030H
_$L227 :

;;				mode = 12;
CLINEA 0000H 0001H 068EH 0005H 000EH
	mov	er0,	#12
	st	er0,	NEAR _mode

;;				break;
CLINEA 0000H 0001H 068FH 0005H 000AH
	b	_$L225

;;			case 2:		//CCW Rotation...decrements Frequency
CLINEA 0000H 0001H 0690H 0004H 0031H
_$L228 :

;;				mode = 13;
CLINEA 0000H 0001H 0691H 0005H 000EH
	mov	er0,	#13
	st	er0,	NEAR _mode

;;				break;
CLINEA 0000H 0001H 0692H 0005H 000AH
	b	_$L225
CBLOCKEND 155 40 1683

;;			case 1:		//CW Rotation...move to PASS-THRU-GREEN (#15)
CLINEA 0000H 0001H 0699H 0004H 0039H
_$L235 :

;;				mode = 15;
CLINEA 0000H 0001H 069AH 0005H 000EH
	mov	er0,	#15
	st	er0,	NEAR _mode

;;				break;
CLINEA 0000H 0001H 069BH 0005H 000AH
	b	_$L233

;;			case 2:		//CCW Rotation...move to PASS-THRU-RED (#14)
CLINEA 0000H 0001H 069CH 0004H 0038H
_$L236 :

;;				mode = 14;
CLINEA 0000H 0001H 069DH 0005H 000EH
	mov	er0,	#14
	st	er0,	NEAR _mode

;;				break;
CLINEA 0000H 0001H 069EH 0005H 000AH
	b	_$L233
CBLOCKEND 155 41 1695

;;			case 1:		//CW Rotation...keeps at PASS-THRU-GREEN (#15)
CLINEA 0000H 0001H 06A5H 0004H 003AH
_$L243 :

;;				mode = 15;
CLINEA 0000H 0001H 06A6H 0005H 000EH
	mov	er0,	#15
	st	er0,	NEAR _mode

;;				break;
CLINEA 0000H 0001H 06A7H 0005H 000AH
	b	_$L241

;;			case 2:		//CCW Rotation...move back to PASS-THRU-RED (#14)
CLINEA 0000H 0001H 06A8H 0004H 003DH
_$L244 :

;;				mode = 14;
CLINEA 0000H 0001H 06A9H 0005H 000EH
	mov	er0,	#14
	st	er0,	NEAR _mode

;;				break;
CLINEA 0000H 0001H 06AAH 0005H 000AH
	b	_$L241
CBLOCKEND 155 42 1707
CBLOCKEND 155 1 1717
CFUNCTIONEND 155


	rseg $$EncoderPostion$main
CFUNCTION 156

_EncoderPostion	:
CBLOCK 156 1 1726

;;void EncoderPostion (void) {
CLINEA 0000H 0001H 06BEH 0001H 001CH
CBLOCK 156 2 1726

;;	if (Encoder_Input_CH_A == 0) 			// Encoder Input "CH-A" on A0; "CH-B" on A1			
CLINEA 0000H 0001H 06C4H 0002H 004FH
	tb	0f250h.0
	bne	_$L246
CBLOCK 156 3 1733

;;		if (Encoder_Input_CH_B == 0)		// STEP #1 => If Ch.A=0 & Ch.B=0...
CLINEA 0000H 0001H 06C6H 0003H 0043H
	tb	0f250h.1
	bne	_$L248
CBLOCK 156 4 1735

;;			AbsolutePosition = 1;
CLINEA 0000H 0001H 06C8H 0004H 0018H
	mov	er0,	#1 
CBLOCKEND 156 4 1737

;;		else						// STEP #4 => Ch.A=1 & Ch.B=0...
CLINEA 0000H 0001H 06CAH 0003H 002CH
	bal	_$L250
_$L248 :
CBLOCK 156 5 1739

;;			AbsolutePosition = 4;
CLINEA 0000H 0001H 06CCH 0004H 0018H
	mov	er0,	#4 
CBLOCKEND 156 5 1741

;;		}	
CLINEA 0000H 0000H 06CDH 0003H 0004H
_$L250 :
	st	er0,	NEAR _AbsolutePosition

;;	else					
CLINEA 0000H 0001H 06D0H 0002H 000AH
	rt
_$L246 :
CBLOCK 156 6 1745

;;		if (Encoder_Input_CH_B == 1)		// STEP #3 => Ch.A=1 & Ch.B=1...
CLINEA 0000H 0001H 06D2H 0003H 0040H
	tb	0f250h.1
	beq	_$L252
CBLOCK 156 7 1747

;;			AbsolutePosition = 3;
CLINEA 0000H 0001H 06D4H 0004H 0018H
	mov	er0,	#3 
	st	er0,	NEAR _AbsolutePosition
CBLOCKEND 156 7 1749

;;		else						// STEP #2 => If Ch.A=0 & Ch.B=1... 
CLINEA 0000H 0001H 06D6H 0003H 0030H
	rt
_$L252 :
CBLOCK 156 8 1751

;;			AbsolutePosition = 2;
CLINEA 0000H 0001H 06D8H 0004H 0018H
	mov	er0,	#2 
	st	er0,	NEAR _AbsolutePosition
CBLOCKEND 156 8 1753

;;		}
CLINEA 0000H 0000H 06D9H 0003H 0003H
CBLOCKEND 156 6 1754
CBLOCKEND 156 3 1762
CBLOCKEND 156 2 1762

;;} //END EncoderPostion Function
CLINEA 0000H 0001H 06E2H 0001H 001FH
	rt
CBLOCKEND 156 1 1762
CFUNCTIONEND 156


	rseg $$EncoderDirection$main
CFUNCTION 157

_EncoderDirection	:
CBLOCK 157 1 1772

;;void EncoderDirection(void){
CLINEA 0000H 0001H 06ECH 0001H 001CH
	push	lr
CBLOCK 157 2 1772
CRET 0000H

;;	EncoderPostion();
CLINEA 0000H 0001H 06EEH 0002H 0012H
	bl	_EncoderPostion

;;	if (AbsolutePosition == previous_encoder_position)
CLINEA 0000H 0001H 06F4H 0002H 0033H
	l	er0,	NEAR _AbsolutePosition
	l	er2,	NEAR _previous_encoder_position
	cmp	er0,	er2
	bne	_$L256
CBLOCK 157 3 1781

;;		direction = 0;	//No change...
CLINEA 0000H 0001H 06F6H 0003H 001FH
	mov	er0,	#0 
	st	er0,	NEAR _direction

;;		goto NoChange; //TESTING ONLY...COMMENTED OUT!!!!!!!!!!!!!!!!!!
CLINEA 0000H 0001H 06F7H 0003H 0041H
	bal	_$L296

;;	} 
CLINEA 0000H 0000H 06F8H 0002H 0003H
_$L256 :

;;	previousDirection = direction;
CLINEA 0000H 0001H 06FBH 0002H 001FH
	l	er0,	NEAR _direction
	st	er0,	NEAR _previousDirection
CBLOCK 157 4 1791

;;	switch (AbsolutePosition) 
CLINEA 0000H 0001H 06FEH 0002H 001BH
	l	r0,	NEAR _AbsolutePosition+01h
	bne	_$L262
	l	r0,	NEAR _AbsolutePosition
	cmp	r0,	#01h
	beq	_$L264

;;	switch (AbsolutePosition) 
CLINEA 0000H 0000H 06FEH 0002H 001BH
	cmp	r0,	#02h
	beq	_$L272

;;	switch (AbsolutePosition) 
CLINEA 0000H 0000H 06FEH 0002H 001BH
	cmp	r0,	#03h
	beq	_$L280

;;	switch (AbsolutePosition) 
CLINEA 0000H 0000H 06FEH 0002H 001BH
	cmp	r0,	#04h
	beq	_$L288

;;	}//
CLINEA 0000H 0000H 074CH 0002H 0004H
_$L262 :

;;	if (direction ==  3){ 		// 3=Unknown => 1=CW
CLINEA 0000H 0001H 0750H 0002H 002DH
	l	er0,	NEAR _direction
	cmp	r0,	#03h
	cmpc	r1,	#00h
	bne	_$L296
CBLOCK 157 9 1872

;;		direction = previousDirection;
CLINEA 0000H 0001H 0751H 0003H 0020H
	l	er0,	NEAR _previousDirection
	st	er0,	NEAR _direction
CBLOCKEND 157 9 1874

;;	}
CLINEA 0000H 0000H 0752H 0002H 0002H
_$L296 :

;;	previous_encoder_position = AbsolutePosition; //STORE CURRENT POSITION
CLINEA 0000H 0001H 0756H 0002H 0047H
	l	er0,	NEAR _AbsolutePosition
	st	er0,	NEAR _previous_encoder_position
CBLOCKEND 157 3 1882
CBLOCKEND 157 2 1882

;;} //END EncoderDirection
CLINEA 0000H 0000H 075AH 0001H 0018H
	pop	pc

;;	case 1:	//If Current EncoderPosition = 1
CLINEA 0000H 0001H 0700H 0002H 0029H
_$L264 :
CBLOCK 157 5 1794

;;		switch (previous_encoder_position ) //...and if previous position was xxx, then direction is xxx  
CLINEA 0000H 0001H 0701H 0003H 0064H
	l	r0,	NEAR _previous_encoder_position+01h
	bne	_$L262
	l	r0,	NEAR _previous_encoder_position
	cmp	r0,	#02h
	beq	_$L270

;;		switch (previous_encoder_position ) //...and if previous position was xxx, then direction is xxx  
CLINEA 0000H 0000H 0701H 0003H 0064H
	cmp	r0,	#04h
	beq	_$L271

;;		}
CLINEA 0000H 0000H 070FH 0003H 0003H
_$L268 :

;;		break;
CLINEA 0000H 0001H 0710H 0003H 0008H
	bal	_$L262

;;	case 2:	//Current EncoderPosition = 2
CLINEA 0000H 0001H 0712H 0002H 0026H
_$L272 :
CBLOCK 157 6 1812

;;		switch (previous_encoder_position ) //...and if previous position was xxx, then direction is xxx  
CLINEA 0000H 0001H 0713H 0003H 0064H
	l	r0,	NEAR _previous_encoder_position+01h
	bne	_$L262
	l	r0,	NEAR _previous_encoder_position
	cmp	r0,	#01h
	beq	_$L278

;;		switch (previous_encoder_position ) //...and if previous position was xxx, then direction is xxx  
CLINEA 0000H 0000H 0713H 0003H 0064H
	cmp	r0,	#03h
	beq	_$L279

;;		}
CLINEA 0000H 0000H 0722H 0003H 0003H
_$L276 :

;;		break;
CLINEA 0000H 0001H 0723H 0003H 0008H
	bal	_$L262

;;	case 3:	//Current EncoderPosition = 3
CLINEA 0000H 0001H 0725H 0002H 0026H
_$L280 :
CBLOCK 157 7 1831

;;		switch (previous_encoder_position ) //...and if previous position was xxx, then direction is xxx  
CLINEA 0000H 0001H 0726H 0003H 0064H
	l	r0,	NEAR _previous_encoder_position+01h
	bne	_$L262
	l	r0,	NEAR _previous_encoder_position
	cmp	r0,	#02h
	beq	_$L286

;;		switch (previous_encoder_position ) //...and if previous position was xxx, then direction is xxx  
CLINEA 0000H 0000H 0726H 0003H 0064H
	cmp	r0,	#04h
	beq	_$L287

;;		}
CLINEA 0000H 0000H 0734H 0003H 0003H
_$L284 :

;;		break;
CLINEA 0000H 0001H 0735H 0003H 0008H
	bal	_$L262

;;	case 4:	//Current EncoderPosition = 4
CLINEA 0000H 0001H 0737H 0002H 0026H
_$L288 :
CBLOCK 157 8 1849

;;		switch (previous_encoder_position ) //...and if previous position was xxx, then direction is xxx  
CLINEA 0000H 0001H 0738H 0003H 0064H
	l	r0,	NEAR _previous_encoder_position+01h
	bne	_$L262
	l	r0,	NEAR _previous_encoder_position
	cmp	r0,	#01h
	beq	_$L294

;;		switch (previous_encoder_position ) //...and if previous position was xxx, then direction is xxx  
CLINEA 0000H 0000H 0738H 0003H 0064H
	cmp	r0,	#03h
	beq	_$L295

;;		}
CLINEA 0000H 0000H 0746H 0003H 0003H
_$L292 :

;;		break;
CLINEA 0000H 0001H 0747H 0003H 0008H
	bal	_$L262
CBLOCKEND 157 4 1868

;;		case 2:
CLINEA 0000H 0001H 0703H 0003H 0009H
_$L270 :

;;			direction =  2; 	// 2=CCW
CLINEA 0000H 0001H 0704H 0004H 001CH
	mov	er0,	#2 
	st	er0,	NEAR _direction

;;			break;
CLINEA 0000H 0001H 0705H 0004H 0009H
	bal	_$L268

;;		case 4:
CLINEA 0000H 0001H 0709H 0003H 0009H
_$L271 :

;;			direction =  1; 	// 1=CW
CLINEA 0000H 0001H 070AH 0004H 001BH
	mov	er0,	#1 
	st	er0,	NEAR _direction

;;			break;
CLINEA 0000H 0001H 070BH 0004H 0009H
	bal	_$L268
CBLOCKEND 157 5 1807

;;		case 1:
CLINEA 0000H 0001H 0715H 0003H 0009H
_$L278 :

;;			direction =  1; 	// 1=CW
CLINEA 0000H 0001H 0716H 0004H 001BH
	mov	er0,	#1 
	st	er0,	NEAR _direction

;;			break;
CLINEA 0000H 0001H 0717H 0004H 0009H
	bal	_$L276

;;		case 3:
CLINEA 0000H 0001H 0718H 0003H 0009H
_$L279 :

;;			direction =  2; 	// 2=CCW 
CLINEA 0000H 0001H 0719H 0004H 001DH
	mov	er0,	#2 
	st	er0,	NEAR _direction

;;			break;
CLINEA 0000H 0001H 071AH 0004H 0009H
	bal	_$L276
CBLOCKEND 157 6 1826

;;		case 2:
CLINEA 0000H 0001H 072BH 0003H 0009H
_$L286 :

;;			direction =  1; 	// 1=CW
CLINEA 0000H 0001H 072CH 0004H 001BH
	mov	er0,	#1 
	st	er0,	NEAR _direction

;;			break; 
CLINEA 0000H 0001H 072DH 0004H 000AH
	bal	_$L284

;;		case 4:
CLINEA 0000H 0001H 072EH 0003H 0009H
_$L287 :

;;			direction =  2; 	// 2=CCW
CLINEA 0000H 0001H 072FH 0004H 001CH
	mov	er0,	#2 
	st	er0,	NEAR _direction

;;			break;  
CLINEA 0000H 0001H 0730H 0004H 000BH
	bal	_$L284
CBLOCKEND 157 7 1844

;;		case 1:
CLINEA 0000H 0001H 073AH 0003H 0009H
_$L294 :

;;			direction =  2; 	// 2=CCW
CLINEA 0000H 0001H 073BH 0004H 001CH
	mov	er0,	#2 
	st	er0,	NEAR _direction

;;			break;
CLINEA 0000H 0001H 073CH 0004H 0009H
	bal	_$L292

;;		case 3:
CLINEA 0000H 0001H 0740H 0003H 0009H
_$L295 :

;;			direction =  1; 	// 1=CW
CLINEA 0000H 0001H 0741H 0004H 001BH
	mov	er0,	#1 
	st	er0,	NEAR _direction

;;			break;
CLINEA 0000H 0001H 0742H 0004H 0009H
	bal	_$L292
CBLOCKEND 157 8 1862
CBLOCKEND 157 1 1882
CFUNCTIONEND 157


	rseg $$StepCW$main
CFUNCTION 161

_StepCW	:
CBLOCK 161 1 1898

;;void StepCW (void){		//Working 12 September 2013, 7pm...
CLINEA 0000H 0001H 076AH 0001H 0038H
	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-08
CBLOCK 161 2 1898
CRET 000AH
CLOCAL 42H 0002H 0008H 0002H "j" 02H 00H 01H
CLOCAL 42H 0002H 0002H 0002H "ClkHighCounter" 02H 00H 01H
CLOCAL 42H 0002H 0004H 0002H "ClkLowCounter" 02H 00H 01H
CLOCAL 42H 0002H 0006H 0002H "HowManyClockCycles" 02H 00H 01H

;;	main_clrWDT();
CLINEA 0000H 0001H 076EH 0002H 000FH
	bl	_main_clrWDT

;;		ClkIn_Stepper_CW_CCW 	= 0;				// PB1D - 0=CW; 1=CCW
CLINEA 0000H 0001H 0772H 0003H 0035H
	rb	0f258h.1

;;		ClkIn_Stepper_CLK    	= 0;				// Start with Clock Low! 
CLINEA 0000H 0001H 0775H 0003H 0039H
	rb	0f258h.0

;;		ClkIn_Stepper_ENABLE 	= 0;				// PB4D - 1=>ENABLED; 0=>DISABLED
CLINEA 0000H 0001H 0776H 0003H 0041H
	rb	0f258h.4

;;		ClkHighCounter 			= 0;				// Zero the counter...
CLINEA 0000H 0001H 0777H 0003H 0032H
	mov	er0,	#0 
	st	er0,	-2[fp]

;;		ClkLowCounter 			= 0;				// Zero the counter...
CLINEA 0000H 0001H 0778H 0003H 0031H
	st	er0,	-4[fp]

;;		if (ClkIn_Stepper_MODE_0 == 0 & ClkIn_Stepper_MODE_1 == 0)
CLINEA 0000H 0001H 077DH 0003H 003CH
	mov	r0,	#01h
	tb	0f258h.2
	beq	_$M109
	mov	r0,	#00h
_$M109 :
	mov	r1,	#01h
	tb	0f258h.3
	beq	_$M110
	mov	r1,	#00h
_$M110 :
	and	r1,	r0
	and	r1,	#01h
	beq	_$L299
CBLOCK 161 3 1918

;;			HowManyClockCycles = 1; 	// FULL STEP 	=> 4 CLK Cycles = Electrical Angle 360
CLINEA 0000H 0001H 077FH 0004H 0050H
	mov	er0,	#1 
	st	er0,	-6[fp]
CBLOCKEND 161 3 1920

;;		}	
CLINEA 0000H 0000H 0780H 0003H 0004H
_$L299 :

;;		if (ClkIn_Stepper_MODE_0 == 1 & ClkIn_Stepper_MODE_1 == 0)
CLINEA 0000H 0001H 0782H 0003H 003CH
	mov	r0,	#01h
	tb	0f258h.2
	bne	_$M111
	mov	r0,	#00h
_$M111 :
	mov	r1,	#01h
	tb	0f258h.3
	beq	_$M112
	mov	r1,	#00h
_$M112 :
	and	r1,	r0
	and	r1,	#01h
	beq	_$L301
CBLOCK 161 4 1923

;;			HowManyClockCycles = 1; 	// HALF STEP-A 	=> 8 CLK Cycles = Electrical Angle 360
CLINEA 0000H 0001H 0784H 0004H 0052H
	mov	er0,	#1 
	st	er0,	-6[fp]
CBLOCKEND 161 4 1925

;;		}
CLINEA 0000H 0000H 0785H 0003H 0003H
_$L301 :

;;		if (ClkIn_Stepper_MODE_0 == 0 & ClkIn_Stepper_MODE_1 == 1)
CLINEA 0000H 0001H 0787H 0003H 003CH
	mov	r0,	#01h
	tb	0f258h.2
	beq	_$M113
	mov	r0,	#00h
_$M113 :
	mov	r1,	#01h
	tb	0f258h.3
	bne	_$M114
	mov	r1,	#00h
_$M114 :
	and	r1,	r0
	and	r1,	#01h
	beq	_$L303
CBLOCK 161 5 1928

;;			HowManyClockCycles = 1; 	// HALF STEP-B 	=> 8 CLK Cycles = Electrical Angle 360
CLINEA 0000H 0001H 0789H 0004H 0052H
	mov	er0,	#1 
	st	er0,	-6[fp]
CBLOCKEND 161 5 1930

;;		}
CLINEA 0000H 0000H 078AH 0003H 0003H
_$L303 :

;;		if (ClkIn_Stepper_MODE_0 == 1 & ClkIn_Stepper_MODE_1 == 1)
CLINEA 0000H 0001H 078CH 0003H 003CH
	mov	r0,	#01h
	tb	0f258h.2
	bne	_$M115
	mov	r0,	#00h
_$M115 :
	mov	r1,	#01h
	tb	0f258h.3
	bne	_$M116
	mov	r1,	#00h
_$M116 :
	and	r1,	r0
	and	r1,	#01h
	beq	_$L305
CBLOCK 161 6 1933

;;			HowManyClockCycles = 1; 	// QUARTER STEP 	=> 16 CLK Cycles = Electrical Angle 360
CLINEA 0000H 0001H 078EH 0004H 0054H
	mov	er0,	#1 
	st	er0,	-6[fp]
CBLOCKEND 161 6 1935

;;		}
CLINEA 0000H 0000H 078FH 0003H 0003H
_$L305 :

;;			ClkIn_Stepper_ENABLE = 1;			// PB4D - 1=>ENABLED; 0=>DISABLED			
CLINEA 0000H 0001H 0793H 0004H 0043H
	sb	0f258h.4

;;		for (j=0; j<HowManyClockCycles ; j++)		// Desired number of Clock pulses...
CLINEA 0000H 0001H 0796H 0003H 004DH
	mov	er0,	#0 
	bal	_$L312
_$L309 :
CBLOCK 161 7 1943

;;			ClkIn_Stepper_CLK   = 1;			// PB0D - The Electrical angle advances by one for each CLK input
CLINEA 0000H 0001H 0799H 0004H 005FH
	sb	0f258h.0

;;				while(ClkHighCounter < CWClkPlseWidth ) {		// NOP for 250 Cycles => 400uS
CLINEA 0000H 0001H 079BH 0005H 004DH
	bal	_$L313
_$L315 :
CBLOCK 161 8 1947

;;				ClkHighCounter++;
CLINEA 0000H 0000H 079CH 0005H 0015H
	add	er0,	#1 
	st	er0,	-2[fp]
CBLOCKEND 161 8 1949

;;				}
CLINEA 0000H 0000H 079DH 0005H 0005H
_$L313 :

;;				while(ClkHighCounter < CWClkPlseWidth ) {		// NOP for 250 Cycles => 400uS
CLINEA 0000H 0000H 079BH 0000H 0000H
	l	er0,	-2[fp]
	l	er2,	NEAR _CWClkPlseWidth
	cmp	er0,	er2
	blt	_$L315

;;				ClkHighCounter= 0;
CLINEA 0000H 0001H 079EH 0005H 0016H
	mov	er0,	#0 
	st	er0,	-2[fp]

;;			ClkIn_Stepper_CLK = 0;				// PB0D - The Electrical angle advances by one for each CLK input
CLINEA 0000H 0001H 07A1H 0004H 005EH
	rb	0f258h.0

;;				while(ClkLowCounter < CWClkPlseWidth) {		// NOP for 250 Cycles => 400uS
CLINEA 0000H 0001H 07A3H 0005H 004BH
	bal	_$L317
_$L319 :
CBLOCK 161 9 1955

;;				ClkLowCounter++;
CLINEA 0000H 0000H 07A4H 0005H 0014H
	add	er0,	#1 
	st	er0,	-4[fp]
CBLOCKEND 161 9 1957

;;				}
CLINEA 0000H 0000H 07A5H 0005H 0005H
_$L317 :

;;				while(ClkLowCounter < CWClkPlseWidth) {		// NOP for 250 Cycles => 400uS
CLINEA 0000H 0000H 07A3H 0000H 0000H
	l	er0,	-4[fp]
	l	er2,	NEAR _CWClkPlseWidth
	cmp	er0,	er2
	blt	_$L319

;;				ClkLowCounter= 0;
CLINEA 0000H 0001H 07A6H 0005H 0015H
	mov	er0,	#0 
	st	er0,	-4[fp]
CBLOCKEND 161 7 1960

;;		for (j=0; j<HowManyClockCycles ; j++)		// Desired number of Clock pulses...
CLINEA 0000H 0000H 0796H 0003H 004DH
	l	er0,	-8[fp]
	add	er0,	#1 
_$L312 :
	st	er0,	-8[fp]
	l	er2,	-6[fp]
	cmp	er0,	er2
	blt	_$L309

;;		   	ClkIn_Stepper_ENABLE = 0;			// PB4D - 1=>ENABLED; 0=>DISABLED
CLINEA 0000H 0001H 07ABH 0007H 0043H
	rb	0f258h.4
CBLOCKEND 161 2 1965

;;} //END StepCW  Function
CLINEA 0000H 0001H 07ADH 0001H 0018H
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 161 1 1965
CFUNCTIONEND 161


	rseg $$StepCCW$main
CFUNCTION 162

_StepCCW	:
CBLOCK 162 1 1973

;;void StepCCW (void){		//Working 12 September 2013...
CLINEA 0000H 0001H 07B5H 0001H 0034H
	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-08
CBLOCK 162 2 1973
CRET 000AH
CLOCAL 42H 0002H 0008H 0002H "j" 02H 00H 01H
CLOCAL 42H 0002H 0002H 0002H "ClkHighCounter" 02H 00H 01H
CLOCAL 42H 0002H 0004H 0002H "ClkLowCounter" 02H 00H 01H
CLOCAL 42H 0002H 0006H 0002H "HowManyClockCycles" 02H 00H 01H

;;	main_clrWDT();
CLINEA 0000H 0001H 07B9H 0002H 000FH
	bl	_main_clrWDT

;;		ClkIn_Stepper_CW_CCW	 = 1;				// PB1D - 0=CW; 1=CCW
CLINEA 0000H 0001H 07BDH 0003H 0035H
	sb	0f258h.1

;;		ClkIn_Stepper_CLK    	= 0;				// Start with Clock Low! 
CLINEA 0000H 0001H 07C0H 0003H 0039H
	rb	0f258h.0

;;		ClkIn_Stepper_ENABLE 	= 0;				// PB4D - 1=>ENABLED; 0=>DISABLED
CLINEA 0000H 0001H 07C1H 0003H 0041H
	rb	0f258h.4

;;		ClkHighCounter 			= 0;				// Zero the counter...
CLINEA 0000H 0001H 07C2H 0003H 0032H
	mov	er0,	#0 
	st	er0,	-2[fp]

;;		ClkLowCounter 			= 0;				// Zero the counter...
CLINEA 0000H 0001H 07C3H 0003H 0031H
	st	er0,	-4[fp]

;;		if (ClkIn_Stepper_MODE_0 == 0 & ClkIn_Stepper_MODE_1 == 0)
CLINEA 0000H 0001H 07C8H 0003H 003CH
	mov	r0,	#01h
	tb	0f258h.2
	beq	_$M118
	mov	r0,	#00h
_$M118 :
	mov	r1,	#01h
	tb	0f258h.3
	beq	_$M119
	mov	r1,	#00h
_$M119 :
	and	r1,	r0
	and	r1,	#01h
	beq	_$L322
CBLOCK 162 3 1993

;;			HowManyClockCycles = 1; 	// FULL STEP 	=> 4 CLK Cycles = Electrical Angle 360
CLINEA 0000H 0001H 07CAH 0004H 0050H
	mov	er0,	#1 
	st	er0,	-6[fp]
CBLOCKEND 162 3 1995

;;		}	
CLINEA 0000H 0000H 07CBH 0003H 0004H
_$L322 :

;;		if (ClkIn_Stepper_MODE_0 == 1 & ClkIn_Stepper_MODE_1 == 0)
CLINEA 0000H 0001H 07CDH 0003H 003CH
	mov	r0,	#01h
	tb	0f258h.2
	bne	_$M120
	mov	r0,	#00h
_$M120 :
	mov	r1,	#01h
	tb	0f258h.3
	beq	_$M121
	mov	r1,	#00h
_$M121 :
	and	r1,	r0
	and	r1,	#01h
	beq	_$L324
CBLOCK 162 4 1998

;;			HowManyClockCycles = 1; 	// HALF STEP-A 	=> 8 CLK Cycles = Electrical Angle 360
CLINEA 0000H 0001H 07CFH 0004H 0052H
	mov	er0,	#1 
	st	er0,	-6[fp]
CBLOCKEND 162 4 2000

;;		}
CLINEA 0000H 0000H 07D0H 0003H 0003H
_$L324 :

;;		if (ClkIn_Stepper_MODE_0 == 0 & ClkIn_Stepper_MODE_1 == 1)
CLINEA 0000H 0001H 07D2H 0003H 003CH
	mov	r0,	#01h
	tb	0f258h.2
	beq	_$M122
	mov	r0,	#00h
_$M122 :
	mov	r1,	#01h
	tb	0f258h.3
	bne	_$M123
	mov	r1,	#00h
_$M123 :
	and	r1,	r0
	and	r1,	#01h
	beq	_$L326
CBLOCK 162 5 2003

;;			HowManyClockCycles = 1; 	// HALF STEP-B 	=> 8 CLK Cycles = Electrical Angle 360
CLINEA 0000H 0001H 07D4H 0004H 0052H
	mov	er0,	#1 
	st	er0,	-6[fp]
CBLOCKEND 162 5 2005

;;		}
CLINEA 0000H 0000H 07D5H 0003H 0003H
_$L326 :

;;		if (ClkIn_Stepper_MODE_0 == 1 & ClkIn_Stepper_MODE_1 == 1)
CLINEA 0000H 0001H 07D7H 0003H 003CH
	mov	r0,	#01h
	tb	0f258h.2
	bne	_$M124
	mov	r0,	#00h
_$M124 :
	mov	r1,	#01h
	tb	0f258h.3
	bne	_$M125
	mov	r1,	#00h
_$M125 :
	and	r1,	r0
	and	r1,	#01h
	beq	_$L328
CBLOCK 162 6 2008

;;			HowManyClockCycles = 1; 	// QUARTER STEP 	=> 16 CLK Cycles = Electrical Angle 360
CLINEA 0000H 0001H 07D9H 0004H 0054H
	mov	er0,	#1 
	st	er0,	-6[fp]
CBLOCKEND 162 6 2010

;;		}
CLINEA 0000H 0000H 07DAH 0003H 0003H
_$L328 :

;;			ClkIn_Stepper_ENABLE = 1;			// PB4D - 1=>ENABLED; 0=>DISABLED			
CLINEA 0000H 0001H 07DEH 0004H 0043H
	sb	0f258h.4

;;		for (j=0; j<HowManyClockCycles ; j++)		// Desired number of Clock pulses...
CLINEA 0000H 0001H 07E1H 0003H 004DH
	mov	er0,	#0 
	bal	_$L335
_$L332 :
CBLOCK 162 7 2018

;;			ClkIn_Stepper_CLK   = 1;			// PB0D - The Electrical angle advances by one for each CLK input
CLINEA 0000H 0001H 07E4H 0004H 005FH
	sb	0f258h.0

;;				while(ClkHighCounter < CCWClkPlseWidth ) {		// NOP for 250 Cycles => 400uS
CLINEA 0000H 0001H 07E6H 0005H 004EH
	bal	_$L336
_$L338 :
CBLOCK 162 8 2022

;;				ClkHighCounter++;
CLINEA 0000H 0000H 07E7H 0005H 0015H
	add	er0,	#1 
	st	er0,	-2[fp]
CBLOCKEND 162 8 2024

;;				}
CLINEA 0000H 0000H 07E8H 0005H 0005H
_$L336 :

;;				while(ClkHighCounter < CCWClkPlseWidth ) {		// NOP for 250 Cycles => 400uS
CLINEA 0000H 0000H 07E6H 0000H 0000H
	l	er0,	-2[fp]
	l	er2,	NEAR _CCWClkPlseWidth
	cmp	er0,	er2
	blt	_$L338

;;				ClkHighCounter= 0;
CLINEA 0000H 0001H 07E9H 0005H 0016H
	mov	er0,	#0 
	st	er0,	-2[fp]

;;			ClkIn_Stepper_CLK = 0;				// PB0D - The Electrical angle advances by one for each CLK input
CLINEA 0000H 0001H 07ECH 0004H 005EH
	rb	0f258h.0

;;				while(ClkLowCounter < CCWClkPlseWidth) {		// NOP for 250 Cycles => 400uS
CLINEA 0000H 0001H 07EEH 0005H 004CH
	bal	_$L340
_$L342 :
CBLOCK 162 9 2030

;;				ClkLowCounter++;
CLINEA 0000H 0000H 07EFH 0005H 0014H
	add	er0,	#1 
	st	er0,	-4[fp]
CBLOCKEND 162 9 2032

;;				}
CLINEA 0000H 0000H 07F0H 0005H 0005H
_$L340 :

;;				while(ClkLowCounter < CCWClkPlseWidth) {		// NOP for 250 Cycles => 400uS
CLINEA 0000H 0000H 07EEH 0000H 0000H
	l	er0,	-4[fp]
	l	er2,	NEAR _CCWClkPlseWidth
	cmp	er0,	er2
	blt	_$L342

;;				ClkLowCounter= 0;
CLINEA 0000H 0001H 07F1H 0005H 0015H
	mov	er0,	#0 
	st	er0,	-4[fp]
CBLOCKEND 162 7 2035

;;		for (j=0; j<HowManyClockCycles ; j++)		// Desired number of Clock pulses...
CLINEA 0000H 0000H 07E1H 0003H 004DH
	l	er0,	-8[fp]
	add	er0,	#1 
_$L335 :
	st	er0,	-8[fp]
	l	er2,	-6[fp]
	cmp	er0,	er2
	blt	_$L332

;;		   	ClkIn_Stepper_ENABLE = 0;			// PB4D - 1=>ENABLED; 0=>DISABLED
CLINEA 0000H 0001H 07F6H 0007H 0043H
	rb	0f258h.4
CBLOCKEND 162 2 2040

;;} //END StepCCW  Function
CLINEA 0000H 0001H 07F8H 0001H 0019H
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 162 1 2040
CFUNCTIONEND 162


	rseg $$ContinuousMode$main
CFUNCTION 163

_ContinuousMode	:
CBLOCK 163 1 2050

;;void ContinuousMode(void){
CLINEA 0000H 0001H 0802H 0001H 001AH
	push	lr
	push	fp
	mov	fp,	sp
	add	sp,	#-016
	push	xr4
CBLOCK 163 2 2050
CRET 0016H
CLOCAL 42H 0002H 000AH 0002H "k" 02H 00H 01H
CLOCAL 42H 0002H 000CH 0002H "WarmUp" 02H 00H 01H
CLOCAL 42H 0002H 000EH 0002H "counter" 02H 00H 01H
CLOCAL 42H 0002H 0010H 0002H "ClockingCount" 02H 00H 01H
CLOCAL 4AH 0004H 0000H 0002H "LongCounter" 02H 00H 02H

;;	main_clrWDT();
CLINEA 0000H 0001H 0808H 0002H 000FH
	bl	_main_clrWDT

;;		ClkIn_Stepper_ENABLE = 1;			// PB4D - 1=>ENABLED; 0=>DISABLED
CLINEA 0000H 0001H 080FH 0003H 003FH
	sb	0f258h.4

;;		for (k=0; k<4625; k++) // 5000-375=4625
CLINEA 0000H 0001H 0813H 0003H 0029H
	mov	er0,	#0 
	st	er0,	-10[fp]
_$L347 :
CBLOCK 163 3 2068

;;			WarmUp = (5000 - k);
CLINEA 0000H 0001H 0816H 0004H 0017H
	mov	r0,	#088h
	mov	r1,	#013h
	l	er2,	-10[fp]
	sub	r0,	r2
	subc	r1,	r3
	st	er0,	-12[fp]

;;			ClkIn_Stepper_CLK    = 1;	// PB0D - The Electrical angle advances by one for each CLK input
CLINEA 0000H 0001H 0819H 0004H 005EH
	sb	0f258h.0

;;			while(counter < WarmUp ) {	// NOP for 250+ Cycles
CLINEA 0000H 0001H 081BH 0004H 0034H
	bal	_$L351
_$L353 :
CBLOCK 163 4 2075

;;				counter++;
CLINEA 0000H 0000H 081CH 0005H 000EH
	add	er0,	#1 
	st	er0,	-14[fp]
CBLOCKEND 163 4 2077

;;			}
CLINEA 0000H 0000H 081DH 0004H 0004H
_$L351 :

;;			while(counter < WarmUp ) {	// NOP for 250+ Cycles
CLINEA 0000H 0000H 081BH 0000H 0000H
	l	er0,	-14[fp]
	l	er2,	-12[fp]
	cmp	er0,	er2
	blt	_$L353

;;			counter = 0;
CLINEA 0000H 0001H 081EH 0004H 000FH
	mov	er0,	#0 
	st	er0,	-14[fp]

;;			ClkIn_Stepper_CLK    = 0;	// PB0D - The Electrical angle advances by one for each CLK input
CLINEA 0000H 0001H 0822H 0004H 005EH
	rb	0f258h.0

;;			while(counter < WarmUp ) {	// NOP for 250+ Cycles
CLINEA 0000H 0001H 0824H 0004H 0034H
	bal	_$L355
_$L357 :
CBLOCK 163 5 2084

;;				counter++;
CLINEA 0000H 0000H 0825H 0005H 000EH
	add	er0,	#1 
	st	er0,	-14[fp]
CBLOCKEND 163 5 2086

;;			}
CLINEA 0000H 0000H 0826H 0004H 0004H
_$L355 :

;;			while(counter < WarmUp ) {	// NOP for 250+ Cycles
CLINEA 0000H 0000H 0824H 0000H 0000H
	l	er2,	-12[fp]
	cmp	er0,	er2
	blt	_$L357

;;			counter = 0;
CLINEA 0000H 0001H 0827H 0004H 000FH
	mov	er0,	#0 
	st	er0,	-14[fp]

;;			k = (k+250);
CLINEA 0000H 0001H 0829H 0004H 000FH
	l	er0,	-10[fp]
	add	r0,	#0fah
	addc	r1,	#00h
CBLOCKEND 163 3 2090

;;		for (k=0; k<4625; k++) // 5000-375=4625
CLINEA 0000H 0000H 0813H 0003H 0029H
	add	er0,	#1 
	st	er0,	-10[fp]
	cmp	r0,	#011h
	cmpc	r1,	#012h
	blt	_$L347

;;		ClockingCount = 375;			//Initial ClockingCount value (was 250...now 375)
CLINEA 0000H 0001H 082EH 0003H 004AH
	mov	r0,	#077h
	mov	r1,	#01h
	st	er0,	-16[fp]

;;		while(Encoder_BUTTON == 1 ){  	//While Not Pushed... 
CLINEA 0000H 0001H 0830H 0003H 0037H
	b	_$L359
_$L361 :
CBLOCK 163 6 2096

;;			EncoderDirection();		//direction; //0=NO CHANGE, 1=CW, 2=CCW, 3=Unknown
CLINEA 0000H 0001H 0832H 0004H 004AH
	bl	_EncoderDirection

;;			if (direction == 1) 		//If CW...Increase PulseWidth
CLINEA 0000H 0001H 0836H 0004H 0036H
	l	er0,	NEAR _direction
	cmp	r0,	#01h
	cmpc	r1,	#00h
	bne	_$L363
CBLOCK 163 7 2103

;;				ClockingCount = (ClockingCount - (ClockingCount * 0.005)); //Increase Speed by Decreasing Clock Pulse width by say 5% - C. Schell 10/23/2013
CLINEA 0000H 0001H 0838H 0005H 0090H
	l	er0,	-16[fp]
	mov	er2,	#0 
	push	xr0
	add	sp,	#-4
	bl	__dildu8sw
	pop	qr0
	lea	-8[fp]
	st	qr0,	[ea]
	push	qr0
	l	qr0,	[ea]
	push	qr0
	mov	r0,	#07bh
	mov	r1,	#014h
	mov	r2,	#0aeh
	mov	r3,	#047h
	mov	r4,	#0e1h
	mov	r5,	#07ah
	mov	r6,	#074h
	mov	r7,	#03fh
	push	qr0
	bl	__dmulu8sw
	add	sp,	#8 
	bl	__dsubu8sw
	add	sp,	#8 
	bl	__dtolu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	-16[fp]

;;				if (ClockingCount < 2)
CLINEA 0000H 0001H 083AH 0005H 001AH
	cmp	r0,	#02h
	cmpc	r1,	#00h
	bge	_$L370
CBLOCK 163 8 2107

;;					ClockingCount = 2;
CLINEA 0000H 0001H 083CH 0006H 0017H
	mov	er0,	#2 
	st	er0,	-16[fp]
CBLOCKEND 163 8 2109

;;			else if (direction == 2) 		//If CCW...Decrease Pulse Width
CLINEA 0000H 0001H 0842H 0004H 003DH
	bal	_$L370
_$L363 :
	cmp	r0,	#02h
	cmpc	r1,	#00h
	bne	_$L370
CBLOCK 163 9 2115

;;				ClockingCount = (ClockingCount + (ClockingCount * 0.005));//Decrease Speed by Increasing Clock Pulse width by say 5% - C. Schell 10/23/2013			
CLINEA 0000H 0001H 0844H 0005H 0092H
	l	er0,	-16[fp]
	mov	er2,	#0 
	push	xr0
	add	sp,	#-4
	bl	__dildu8sw
	pop	qr0
	lea	-8[fp]
	st	qr0,	[ea]
	push	qr0
	l	qr0,	[ea]
	push	qr0
	mov	r0,	#07bh
	mov	r1,	#014h
	mov	r2,	#0aeh
	mov	r3,	#047h
	mov	r4,	#0e1h
	mov	r5,	#07ah
	mov	r6,	#074h
	mov	r7,	#03fh
	push	qr0
	bl	__dmulu8sw
	add	sp,	#8 
	bl	__daddu8sw
	add	sp,	#8 
	bl	__dtolu8sw
	add	sp,	#4 
	pop	xr0
	st	er0,	-16[fp]

;;				if (ClockingCount > 65000)
CLINEA 0000H 0001H 0846H 0005H 001EH
	mov	er2,	#0 
	cmp	r0,	#0e8h
	cmpc	r1,	#0fdh
	cmpc	r2,	#00h
	cmpc	r3,	#00h
	bles	_$L370
CBLOCK 163 10 2119

;;					ClockingCount = 65000;
CLINEA 0000H 0001H 0848H 0006H 001BH
	mov	r0,	#0e8h
	mov	r1,	#0fdh
	st	er0,	-16[fp]
CBLOCKEND 163 10 2121

;;				}
CLINEA 0000H 0000H 0849H 0005H 0005H
_$L370 :
CBLOCK 163 11 2126
CBLOCKEND 163 11 2128
CBLOCKEND 163 9 2156

;;			ClkIn_Stepper_CLK    = 1;	// PB0D - The Electrical angle advances by one for each CLK input
CLINEA 0000H 0001H 0855H 0004H 005EH
	sb	0f258h.0
CBLOCKEND 163 7 2156

;;			while(counter < ClockingCount ) {	// NOP for 250+ Cycles
CLINEA 0000H 0001H 0857H 0004H 003BH
	bal	_$L373
_$L375 :
CBLOCK 163 12 2135

;;				counter++;
CLINEA 0000H 0000H 0858H 0005H 000EH
	add	er0,	#1 
	st	er0,	-14[fp]
CBLOCKEND 163 12 2137

;;			}
CLINEA 0000H 0000H 0859H 0004H 0004H
_$L373 :

;;			while(counter < ClockingCount ) {	// NOP for 250+ Cycles
CLINEA 0000H 0000H 0857H 0000H 0000H
	l	er0,	-14[fp]
	l	er2,	-16[fp]
	cmp	er0,	er2
	blt	_$L375

;;			counter = 0;
CLINEA 0000H 0001H 085AH 0004H 000FH
	mov	er0,	#0 
	st	er0,	-14[fp]

;;			ClkIn_Stepper_CLK    = 0;	// PB0D - The Electrical angle advances by one for each CLK input
CLINEA 0000H 0001H 085EH 0004H 005EH
	rb	0f258h.0

;;			while(counter < ClockingCount ) {	// NOP for 250+ Cycles
CLINEA 0000H 0001H 0860H 0004H 003BH
	bal	_$L377
_$L379 :
CBLOCK 163 13 2144

;;				counter++;
CLINEA 0000H 0000H 0861H 0005H 000EH
	add	er0,	#1 
	st	er0,	-14[fp]
CBLOCKEND 163 13 2146

;;			}
CLINEA 0000H 0000H 0862H 0004H 0004H
_$L377 :

;;			while(counter < ClockingCount ) {	// NOP for 250+ Cycles
CLINEA 0000H 0000H 0860H 0000H 0000H
	l	er2,	-16[fp]
	cmp	er0,	er2
	blt	_$L379

;;			counter = 0;
CLINEA 0000H 0001H 0863H 0004H 000FH
	mov	er0,	#0 
	st	er0,	-14[fp]

;;			main_clrWDT();	//ADDED 6-16-2014 @ 18:15 to prevent WDT Event during Continuous Mode Operation
CLINEA 0000H 0001H 0865H 0004H 0061H
	bl	_main_clrWDT
CBLOCKEND 163 6 2150

;;		}//wend
CLINEA 0000H 0000H 0866H 0003H 0009H
_$L359 :

;;		while(Encoder_BUTTON == 1 ){  	//While Not Pushed... 
CLINEA 0000H 0000H 0830H 0000H 0000H
	tb	0f250h.2
	beq	_$M127
	b	_$L361
_$M127 :

;;	ClkIn_Stepper_ENABLE = 0;		// PB4D - 1=>ENABLED; 0=>DISABLED
CLINEA 0000H 0001H 0869H 0002H 003DH
	rb	0f258h.4

;;	ClkIn_Stepper_CLK    = 0;		// PB0D - The Electrical angle advances by one for each CLK input
CLINEA 0000H 0001H 086AH 0002H 005DH
	rb	0f258h.0
CBLOCKEND 163 2 2156

;;} //END Continuous Mode  Function
CLINEA 0000H 0001H 086CH 0001H 0021H
	pop	xr4
	mov	sp,	fp
	pop	fp
	pop	pc
CBLOCKEND 163 1 2156
CFUNCTIONEND 163


	rseg $$MachineStateAction$main
CFUNCTION 158

_MachineStateAction	:
CBLOCK 158 1 2166

;;void MachineStateAction (void){
CLINEA 0000H 0001H 0876H 0001H 001FH
	push	lr
CBLOCK 158 2 2166
CRET 0000H

;;	switch(mode) 
CLINEA 0000H 0001H 087FH 0002H 000EH
	l	er0,	NEAR _mode
CBLOCK 158 3 2176
	cmp	r0,	#0fh
	cmpc	r1,	#00h
	ble	_$M130
	b	_$L387
_$M130 :
	sllc	r1,	#01h
	sll	r0,	#01h
	l	er0,	NEAR _$M129[er0]
	b	er0

;;	}//End Select...
_$L386 :
CBLOCKEND 158 2 2265

;;} //END MachineStateAction Function
CLINEA 0000H 0001H 08D9H 0001H 0023H
	pop	pc

;;	case 0:			// 0=PowerOn/RESET
CLINEA 0000H 0001H 0881H 0002H 001DH
_$S388 :

;;		ALL_LEDs_OFF();
CLINEA 0000H 0001H 0882H 0003H 0011H
	bl	_ALL_LEDs_OFF

;;		break;
CLINEA 0000H 0001H 0883H 0003H 0008H
	bal	_$L386

;;	case 1: 			// 1=STEP MODE-No LEDs
CLINEA 0000H 0001H 0885H 0002H 0022H
_$S389 :

;;		LEDStateA();
CLINEA 0000H 0001H 0886H 0003H 000EH
	bl	_LEDStateA

;;		break;
CLINEA 0000H 0001H 0887H 0003H 0008H
	bal	_$L386

;;	case 2: 			// 2=STEP MODE-FULL STEP
CLINEA 0000H 0001H 0889H 0002H 0024H
_$S390 :

;;		LEDStateA1();
CLINEA 0000H 0001H 088AH 0003H 000FH
	bl	_LEDStateA1

;;			ClkIn_Stepper_CW_CCW = 0;		// PB1D - 0=CW; 1=CCW 
CLINEA 0000H 0001H 088BH 0004H 0034H
	rb	0f258h.1

;;			ClkIn_Stepper_MODE_0 = 0;		// PB2D - 00=>FULL STEP; 10=>Half_A; 01=>Half_B; 11=>Quarter Step
CLINEA 0000H 0001H 088CH 0004H 005FH
	rb	0f258h.2

;;			ClkIn_Stepper_MODE_1 = 0;		// PB3D - ...  
CLINEA 0000H 0001H 088DH 0004H 002DH
	rb	0f258h.3

;;		break;
CLINEA 0000H 0001H 088EH 0003H 0008H
	bal	_$L386

;;	case 3: 			// 3=STEP MODE-HALF STEP A
CLINEA 0000H 0001H 0890H 0002H 0026H
_$S391 :

;;		LEDStateA2();
CLINEA 0000H 0001H 0891H 0003H 000FH
	bl	_LEDStateA2

;;			ClkIn_Stepper_CW_CCW = 0;		// PB1D - 0=CW; 1=CCW 
CLINEA 0000H 0001H 0892H 0004H 0034H
	rb	0f258h.1

;;			ClkIn_Stepper_MODE_0 = 1;		// PB2D - 00=>FULL STEP; 10=>Half_A; 01=>Half_B; 11=>Quarter Step
CLINEA 0000H 0001H 0893H 0004H 005FH
	sb	0f258h.2

;;			ClkIn_Stepper_MODE_1 = 0;		// PB3D - ...  
CLINEA 0000H 0001H 0894H 0004H 002DH
	rb	0f258h.3

;;		break;
CLINEA 0000H 0001H 0895H 0003H 0008H
	bal	_$L386

;;	case 4:				// 4=STEP MODE-HALF STEP B
CLINEA 0000H 0001H 0897H 0002H 0026H
_$S392 :

;;		LEDStateA3();
CLINEA 0000H 0001H 0898H 0003H 000FH
	bl	_LEDStateA3

;;			ClkIn_Stepper_CW_CCW = 0;		// PB1D - 0=CW; 1=CCW 
CLINEA 0000H 0001H 0899H 0004H 0034H
	rb	0f258h.1

;;			ClkIn_Stepper_MODE_0 = 0;		// PB2D - 00=>FULL STEP; 10=>Half_A; 01=>Half_B; 11=>Quarter Step
CLINEA 0000H 0001H 089AH 0004H 005FH
	rb	0f258h.2

;;			ClkIn_Stepper_MODE_1 = 1;		// PB3D - ...  
CLINEA 0000H 0001H 089BH 0004H 002DH
	sb	0f258h.3

;;		break;	
CLINEA 0000H 0001H 089CH 0003H 0009H
	bal	_$L386

;;	case 5:				// 5=STEP MODE-QUARTER STEP
CLINEA 0000H 0001H 089EH 0002H 0027H
_$S393 :

;;		LEDStateA4();
CLINEA 0000H 0001H 089FH 0003H 000FH
	bl	_LEDStateA4

;;			ClkIn_Stepper_CW_CCW = 0;		// PB1D - 0=CW; 1=CCW 
CLINEA 0000H 0001H 08A0H 0004H 0034H
	rb	0f258h.1

;;			ClkIn_Stepper_MODE_0 = 1;		// PB2D - 00=>FULL STEP; 10=>Half_A; 01=>Half_B; 11=>Quarter Step
CLINEA 0000H 0001H 08A1H 0004H 005FH
	sb	0f258h.2

;;			ClkIn_Stepper_MODE_1 = 1;		// PB3D - ...  
CLINEA 0000H 0001H 08A2H 0004H 002DH
	sb	0f258h.3

;;		break;	
CLINEA 0000H 0001H 08A3H 0003H 0009H
	bal	_$L386

;;	case 6:				// 6=DRIVER_EN RED
CLINEA 0000H 0001H 08A5H 0002H 001EH
_$S394 :

;;		LEDStateB();
CLINEA 0000H 0001H 08A6H 0003H 000EH
	bl	_LEDStateB

;;		ClkIn_Stepper_ENABLE = 0;		// PB4D - 0=>DISABLED Controller
CLINEA 0000H 0001H 08A7H 0003H 003DH
	rb	0f258h.4

;;		break;	
CLINEA 0000H 0001H 08A8H 0003H 0009H
	bal	_$L386

;;	case 7:				// 7=DRIVER_EN GREEN
CLINEA 0000H 0001H 08AAH 0002H 0020H
_$S395 :

;;		LEDStateC();
CLINEA 0000H 0001H 08ABH 0003H 000EH
	bl	_LEDStateC

;;		ClkIn_Stepper_ENABLE = 0;		// PB4D - 0=>DISABLED Controller
CLINEA 0000H 0001H 08ACH 0003H 003DH
	rb	0f258h.4

;;		break;	
CLINEA 0000H 0001H 08ADH 0003H 0009H
	bal	_$L386

;;	case 8:			// 8=SINGLE STEP LED ON				
CLINEA 0000H 0001H 08AFH 0002H 0026H
_$S396 :

;;		LEDStateC1();
CLINEA 0000H 0001H 08B0H 0003H 000FH
	bl	_LEDStateC1

;;		break;	
CLINEA 0000H 0001H 08B1H 0003H 0009H
	bal	_$L386

;;	case 9:			// 9=SINGLE-STEP-CW
CLINEA 0000H 0001H 08B3H 0002H 001EH
_$S397 :

;;		LEDStateC1();
CLINEA 0000H 0001H 08B4H 0003H 000FH
	bl	_LEDStateC1

;;		StepCW(); 	//TESTING ONLY...Commented out 6/14/2014!!!!!!!!!!!!!!!!!!!!!!
CLINEA 0000H 0001H 08B5H 0003H 004BH
	bl	_StepCW

;;		break;	
CLINEA 0000H 0001H 08B6H 0003H 0009H
	bal	_$L386

;;	case 10:			// 10=SINGLE-STEP-CCW
CLINEA 0000H 0001H 08B8H 0002H 0021H
_$S398 :

;;		LEDStateC1();
CLINEA 0000H 0001H 08B9H 0003H 000FH
	bl	_LEDStateC1

;;		StepCCW();  //TESTING ONLY...Commented out 6/14/2014!!!!!!!!!!!!!!!!!!!!!!
CLINEA 0000H 0001H 08BAH 0003H 004CH
	bl	_StepCCW

;;		break;	
CLINEA 0000H 0001H 08BBH 0003H 0009H
	b	_$L386

;;	case 11:			// 11=CONTINUOUS LED ON
CLINEA 0000H 0001H 08BDH 0002H 0023H
_$S399 :

;;		ClkIn_Stepper_ENABLE = 0;		// PB4D - 0=>DISABLED Controller
CLINEA 0000H 0001H 08BEH 0003H 003DH
	rb	0f258h.4

;;		LEDStateC2();
CLINEA 0000H 0001H 08BFH 0003H 000FH
	bl	_LEDStateC2

;;		break;	
CLINEA 0000H 0001H 08C0H 0003H 0009H
	b	_$L386

;;	case 12:			// 12=CONTINUOUS-INC FREQ CW
CLINEA 0000H 0001H 08C2H 0002H 0028H
_$S400 :

;;		LEDStateC2();
CLINEA 0000H 0001H 08C3H 0003H 000FH
	bl	_LEDStateC2

;;		break;	
CLINEA 0000H 0001H 08C4H 0003H 0009H
	b	_$L386

;;	case 13:			// 13=CONTINUOUS-INC FREQ CCW 
CLINEA 0000H 0001H 08C6H 0002H 002AH
_$S401 :

;;		LEDStateC2();
CLINEA 0000H 0001H 08C7H 0003H 000FH
	bl	_LEDStateC2

;;		break;
CLINEA 0000H 0001H 08C8H 0003H 0008H
	b	_$L386

;;	case 14:			// 14=PASS THRU RED
CLINEA 0000H 0001H 08CAH 0002H 001FH
_$S402 :

;;		LEDStateD();
CLINEA 0000H 0001H 08CBH 0003H 000EH
	bl	_LEDStateD

;;		break;	
CLINEA 0000H 0001H 08CCH 0003H 0009H
	b	_$L386

;;	case 15:			// 15=PASS THRU GREEN
CLINEA 0000H 0001H 08CEH 0002H 0021H
_$S403 :

;;		LEDStateE();
CLINEA 0000H 0001H 08CFH 0003H 000EH
	bl	_LEDStateE

;;		break;
CLINEA 0000H 0001H 08D0H 0003H 0008H
	b	_$L386

;;	default:			// ERROR
CLINEA 0000H 0001H 08D2H 0002H 0014H
_$L387 :

;;		ALL_LEDs_OFF();	
CLINEA 0000H 0001H 08D3H 0003H 0012H
	bl	_ALL_LEDs_OFF

;;		break;
CLINEA 0000H 0001H 08D5H 0003H 0008H
	b	_$L386
CBLOCKEND 158 3 2262
CBLOCKEND 158 1 2265
CFUNCTIONEND 158


	rseg $$MotorRampUp$main
CFUNCTION 164

_MotorRampUp	:
CBLOCK 164 1 2272

;;void MotorRampUp (void) {
CLINEA 0000H 0001H 08E0H 0001H 0019H
	push	fp
	mov	fp,	sp
	add	sp,	#-06
CBLOCK 164 2 2272
CLOCAL 42H 0002H 0002H 0002H "k" 02H 00H 01H
CLOCAL 42H 0002H 0004H 0002H "WarmUp" 02H 00H 01H
CLOCAL 42H 0002H 0006H 0002H "counter" 02H 00H 01H

;;	for (k=0; k<4625; k++) // 5000-375=4625
CLINEA 0000H 0001H 08E4H 0002H 0028H
	mov	er0,	#0 
	st	er0,	-2[fp]
_$L407 :
CBLOCK 164 3 2277

;;		WarmUp = (5000 - k);
CLINEA 0000H 0001H 08E7H 0003H 0016H
	mov	r0,	#088h
	mov	r1,	#013h
	l	er2,	-2[fp]
	sub	r0,	r2
	subc	r1,	r3
	st	er0,	-4[fp]

;;		ClkIn_Stepper_CLK    = 1;	// PB0D - The Electrical angle advances by one for each CLK input
CLINEA 0000H 0001H 08EAH 0003H 005DH
	sb	0f258h.0

;;		while(counter < WarmUp ) {	// NOP for ~375 Cycles
CLINEA 0000H 0001H 08ECH 0003H 0033H
	bal	_$L411
_$L413 :
CBLOCK 164 4 2284

;;			counter++;
CLINEA 0000H 0000H 08EDH 0004H 000DH
	add	er0,	#1 
	st	er0,	-6[fp]
CBLOCKEND 164 4 2286

;;		}
CLINEA 0000H 0000H 08EEH 0003H 0003H
_$L411 :

;;		while(counter < WarmUp ) {	// NOP for ~375 Cycles
CLINEA 0000H 0000H 08ECH 0000H 0000H
	l	er0,	-6[fp]
	l	er2,	-4[fp]
	cmp	er0,	er2
	blt	_$L413

;;		counter = 0;
CLINEA 0000H 0001H 08EFH 0003H 000EH
	mov	er0,	#0 
	st	er0,	-6[fp]

;;		ClkIn_Stepper_CLK    = 0;	// PB0D - The Electrical angle advances by one for each CLK input
CLINEA 0000H 0001H 08F3H 0003H 005DH
	rb	0f258h.0

;;		while(counter < WarmUp ) {	// NOP for ~375 Cycles
CLINEA 0000H 0001H 08F5H 0003H 0033H
	bal	_$L415
_$L417 :
CBLOCK 164 5 2293

;;			counter++;
CLINEA 0000H 0000H 08F6H 0004H 000DH
	add	er0,	#1 
	st	er0,	-6[fp]
CBLOCKEND 164 5 2295

;;		}
CLINEA 0000H 0000H 08F7H 0003H 0003H
_$L415 :

;;		while(counter < WarmUp ) {	// NOP for ~375 Cycles
CLINEA 0000H 0000H 08F5H 0000H 0000H
	l	er2,	-4[fp]
	cmp	er0,	er2
	blt	_$L417

;;		counter = 0;
CLINEA 0000H 0001H 08F8H 0003H 000EH
	mov	er0,	#0 
	st	er0,	-6[fp]

;;		k = (k+250);
CLINEA 0000H 0001H 08FAH 0003H 000EH
	l	er0,	-2[fp]
	add	r0,	#0fah
	addc	r1,	#00h
CBLOCKEND 164 3 2299

;;	for (k=0; k<4625; k++) // 5000-375=4625
CLINEA 0000H 0000H 08E4H 0002H 0028H
	add	er0,	#1 
	st	er0,	-2[fp]
	cmp	r0,	#011h
	cmpc	r1,	#012h
	blt	_$L407
CBLOCKEND 164 2 2300

;;}
CLINEA 0000H 0001H 08FCH 0001H 0001H
	mov	sp,	fp
	pop	fp
	rt
CBLOCKEND 164 1 2300
CFUNCTIONEND 164

	public _AbsolutePosition
	public _Set_LEDs
	public _main_clrWDT
	public _button_flag
	public _NOP_ClkStep
	public _StepCW
	public _EnableController
	public _EncoderPosition
	public _EncoderPostion
	public _PortA_Digital_Inputs
	public _main
	public _NOP_Long
	public _previous_encoder_position
	public _ZeroFrequency
	public _previousDirection
	public _ContinuousMode
	public _mode
	public _NOPyyy
	public _NOPxxx
	public _direction
	public _NOP10uS
	public _EncoderDirection
	public _Frequency
	public _ALL_LEDs_ON
	public _LEDStateA4
	public _LEDStateC1
	public _LEDStateC2
	public _LEDStateA1
	public _LEDStateA2
	public _LEDStateA3
	public _PortB_Low
	public _MachineStateAction
	public _ALL_LEDs_OFF
	public _ButtonKnobCheck
	public _StepCCW
	public _MotorRampUp
	public _PortA_Low
	public _DisableController
	public _analog_comparator
	public _LEDStateC1A
	public _LEDStateC2A
	public _LEDStateA
	public _LEDStateB
	public _LEDStateC
	public _LEDStateD
	public _LEDStateE
	public _PinB0_PWM
	public _myClockingPulse
	extrn code : $$start_up

	cseg #00h at 02h
	dw	$$start_up

	rseg $$NTABButtonKnobCheck$main
_$M59 :
	dw	_$S78
	dw	_$S79
	dw	_$S80
	dw	_$S81
	dw	_$S82
	dw	_$S83
	dw	_$S84
	dw	_$S85
	dw	_$S86
	dw	_$S87
	dw	_$S88
	dw	_$S89
	dw	_$S90
	dw	_$S91
	dw	_$S92
	dw	_$S93

_$M60 :
	dw	_$S101
	dw	_$S102
	dw	_$S118
	dw	_$S134
	dw	_$S150
	dw	_$S166
	dw	_$S182
	dw	_$S183
	dw	_$S184
	dw	_$S189
	dw	_$S197
	dw	_$S205
	dw	_$S213
	dw	_$S221
	dw	_$S229
	dw	_$S237

	rseg $$NTABMachineStateAction$main
_$M129 :
	dw	_$S388
	dw	_$S389
	dw	_$S390
	dw	_$S391
	dw	_$S392
	dw	_$S393
	dw	_$S394
	dw	_$S395
	dw	_$S396
	dw	_$S397
	dw	_$S398
	dw	_$S399
	dw	_$S400
	dw	_$S401
	dw	_$S402
	dw	_$S403

	rseg $$NINITTAB
	dw	00h
	dw	00h
	dw	00h
	dw	00h
	dw	00h
	dw	00h
	dw	00h
	dw	00h
	dw	0fa0h
	dw	0fa0h

	rseg $$NINITVAR
_mode :
	ds	02h
_EncoderPosition :
	ds	02h
_previous_encoder_position :
	ds	02h
_button_flag :
	ds	02h
_AbsolutePosition :
	ds	02h
_direction :
	ds	02h
_previousDirection :
	ds	02h
_Frequency :
	ds	02h
_CWClkPlseWidth :
	ds	02h
_CCWClkPlseWidth :
	ds	02h

	rseg $$NVARmain
_FULL_STEP_LED :
	ds	01h
_DRIVER_EN_RED_LED :
	ds	01h
_HALF_STEP_A_LED :
	ds	01h
_CONTINUOUS_LED :
	ds	01h
_HALF_STEP_B_LED :
	ds	01h
_STEP_MODE_LED :
	ds	01h
_PASS_THRU_RED_LED :
	ds	01h
_DRIVER_EN_GREEN_LED :
	ds	01h
_SINGLE_LED :
	ds	01h
_PASS_THRU_GREEN_LED :
	ds	01h
_QUARTER_STEP_LED :
	ds	01h
_BUFFER_OE_PIN :
	ds	01h
	extrn code : __daddu8sw
	extrn code : __dsubu8sw
	extrn code : __dmulu8sw
	extrn code : __dildu8sw
	extrn code : __dtolu8sw

	end
